{"version":3,"file":"puxi.min.js","sources":["../../../packages/core/src/event/DragDropController.js","../../../packages/core/src/layout-options/Insets.ts","../../../packages/core/src/IMeasurable.ts","../../../packages/core/src/layout-options/Align.ts","../../../packages/core/src/event/EventManager.ts","../../../packages/core/src/event/ClickManager.ts","../../../packages/core/src/event/DragManager.ts","../../../packages/core/src/event/EventBroker.ts","../../../packages/core/src/event/ScrollManager.ts","../../../packages/core/src/Widget.ts","../../../packages/core/src/layout-options/LayoutOptions.ts","../../../packages/core/src/layout-options/FastLayoutOptions.ts","../../../packages/core/src/layout-options/BorderLayoutOptions.ts","../../../packages/core/src/layout-manager/FastLayout.ts","../../../packages/core/src/WidgetGroup.ts","../../../packages/core/src/InteractiveGroup.ts","../../../packages/core/src/FocusableWidget.ts","../../../packages/core/src/TextWidget.ts","../../../packages/core/src/Ease/EaseBase.js","../../../packages/core/src/Ease/ExponentialEase.js","../../../packages/core/src/Ease/Ease.js","../../../packages/core/src/Helpers.ts","../../../packages/core/src/Slider.ts","../../../packages/core/src/Tween.ts","../../../packages/core/src/ScrollBar.ts","../../../packages/core/src/layout-manager/BorderLayout.ts","../../../packages/core/src/ScrollWidget.ts","../../../packages/core/src/Sprite.ts","../../../packages/core/src/ctl/Controller.ts","../../../packages/core/src/Stage.ts","../../../packages/core/src/TextInput.ts","../../../packages/core/src/ctl/CheckBoxGroupController.ts","../../../packages/core/src/ctl/FocusController.ts","../../../packages/core/src/Ticker.ts","../../../packages/tween/src/Tween.ts","../../../packages/tween/src/TweenManager.ts","../../../packages/tween/src/Ease.ts","../../../packages/tween/src/Interpolator.ts","../../../packages/core/src/layout-manager/AnchorLayout.ts","../../../packages/core/src/layout-options/AnchorLayoutOptions.ts","../../../packages/core/src/Button.ts","../../../packages/core/src/CheckBox.ts","../../../packages/core/src/SliceSprite.ts","../../../packages/core/src/SortableList.ts","../../../packages/core/src/TilingSprite.ts"],"sourcesContent":["const _items = [];\nconst DragDropController = {\n    add(item, event)\n    {\n        item._dragDropEventId = event.data.identifier;\n        if (_items.indexOf(item) === -1)\n        {\n            _items.push(item);\n\n            return true;\n        }\n\n        return false;\n    },\n    getItem(object)\n    {\n        let item = null; let\n            index;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i] === object)\n            {\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n    getEventItem(event, group)\n    {\n        let item = null; let index; const\n            id = event.data.identifier;\n\n        for (let i = 0; i < _items.length; i++)\n        {\n            if (_items[i]._dragDropEventId === id)\n            {\n                if (group !== _items[i].dragGroup)\n                {\n                    return false;\n                }\n                item = _items[i];\n                index = i;\n                break;\n            }\n        }\n\n        if (item !== null)\n        {\n            _items.splice(index, 1);\n\n            return item;\n        }\n\n        return false;\n    },\n};\n\nexport { DragDropController };\nexport default DragDropController;\n","/**\n * @memberof PUXI\n * @class\n */\nexport class Insets\n{\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n\n    dirtyId: number;\n\n    constructor()\n    {\n        this.reset();\n        this.dirtyId = 0;\n    }\n\n    reset(): void\n    {\n        this.left = -1;\n        this.top = -1;\n        this.right = -1;\n        this.bottom = -1;\n    }\n}\n","/**\n * These are the modes in which an entity can measures its dimension. They are\n * relevant when a layout needs to know the optimal sizes of its children.\n *\n * @memberof PUXI\n * @enum\n * @property {number} UNBOUNDED - no upper limit on bounds. This should calculate the optimal dimensions for the entity.\n * @property {number} EXACTLY - the entity should set its dimension to the one passed to it.\n * @property {number} AT_MOST - the entity should find an optimal dimension below the one passed to it.\n */\nexport enum MeasureMode\n{\n    UNBOUNDED = 0,\n    EXACTLY = 1,\n    AT_MOST = 2\n}\n\nexport interface IMeasurable\n{\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode);\n    getMeasuredWidth(): number;\n    getMeasuredHeight(): number;\n}\n\n/**\n * Any renderable entity that can be used in a widget hierarchy must be\n * measurable.\n *\n * @memberof PUXI\n * @interface IMeasurable\n */\n\n/**\n * Measures its width & height based on the passed constraints.\n *\n * @memberof PUXI.IMeasurable#\n * @method onMeasure\n * @param {number} maxWidth\n * @param {number} maxHeight\n * @param {PUXI.MeasureMode} widthMode\n * @param {PUXI.MeasureMode} heightMode\n */\n\n/**\n * @memberof PUXI.IMeasurable#\n * @method getMeasuredWidth\n * @returns {number} - the measured width of the entity after a `onMeasure` call\n */\n\n/**\n * @memberof PUXI.IMeasurable#\n * @method getMeasuredHeight\n * @returns {number} - the measured height of the entity after a `onMeasure` call\n */\n","/**\n * Alignments supported by layout managers in PuxiJS core.\n *\n * @memberof PUXI\n * @enum\n */\nexport enum ALIGN\n{\n    LEFT = 0,\n    TOP = 0,\n    MIDDLE = 0xff1,\n    CENTER = 0xff1,\n    RIGHT = 0xffff1,\n    BOTTOM = 0xffff1,\n    NONE = 0xffffffff\n}\n","import { Widget } from '../Widget';\n\n/**\n * An event manager handles the states related to certain events and can augment\n * widget interaction. For example, the click manager will hide clicks when\n * the object is dragging.\n *\n * Event managers are lifecycle objects - they can start/stop. Their constructor\n * will always accept one argument - the widget. Other settings can be applied before\n * `startEvent`.\n *\n * Ideally, you should access event managers _after_ your widget has initialized. This is\n * because it may depend on the widget's stage being assigned.\n *\n * @memberof PUXI\n * @class\n * @abstract\n */\nexport abstract class EventManager\n{\n    protected target: Widget;\n    protected isEnabled: boolean;\n\n    /**\n     * @param {Widget} target\n     */\n    constructor(target: Widget)\n    {\n        this.target = target;\n        this.isEnabled = false;// use to track start/stopEvent\n    }\n\n    /**\n     * @returns {Widget}\n     */\n    getTarget(): Widget\n    {\n        return this.target;\n    }\n\n    /**\n     * Registers the interaction event listeners that will emit corresponding events\n     * on the target widget.\n     */\n    abstract startEvent(): any;\n\n    /**\n     * Unregisters any event listeners and releases any resources held. This should\n     * revert all changes made by `startEvent`.\n     */\n    abstract stopEvent(): any;\n}\n","import * as PIXI from 'pixi.js';\nimport { Widget } from '../Widget';\nimport { EventManager } from './EventManager';\n\n/**\n * `ClickManager` handles hover and click events. It registers listeners\n * for `mousedown`, `mouseup`, `mousemove`, `mouseout`, `mouseover`, `touchstart`,\n * `touchend`, `touchendoutside`, `touchmove`, `rightup`, `rightdown`, `rightupoutside`\n * events.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ClickManager extends EventManager\n{\n    onHover: (event: PIXI.interaction.InteractionEvent, over: boolean) => void;\n    onPress: (event: PIXI.interaction.InteractionEvent, isPressed: boolean) => void;\n    onClick: (event: PIXI.interaction.InteractionMouseEvents) => void;\n    onMove: (event: PIXI.interaction.InteractionEvent) => void;\n\n    protected _rightMouseButton: boolean;\n    protected _includeHover: boolean;\n    protected _doubleClick: boolean;\n\n    private bound: boolean;\n    private id: number;\n    private ishover: boolean;\n    protected target: Widget;\n\n    private movementX: number;\n    private movementY: number;\n    mouse: PIXI.Point;\n    offset: PIXI.Point;\n\n    private evMouseDown: string;\n    private evMouseUp: string;\n    private evMouseUpOutside: string;\n\n    time: number;\n\n    /**\n     * @param {PUXI.Widget | PUXI.Button} target\n     * @param {boolean}[includeHover=false] - enable hover (`mouseover`, `mouseout`) listeners\n     * @param {boolean}[rightMouseButton=false] - use right mouse clicks\n     * @param {boolean}[doubleClick=false] - fire double clicks\n     */\n    constructor(target: Widget, includeHover?: boolean, rightMouseButton?, doubleClick?: boolean)\n    {\n        super(target);\n\n        this.bound = false;\n        this.id = 0;\n        this.ishover = false;\n        this.mouse = new PIXI.Point();\n        this.offset = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n\n        this._includeHover = typeof includeHover === 'undefined' ? true : includeHover;\n        this.rightMouseButton = typeof rightMouseButton === 'undefined' ? false : rightMouseButton;\n        this._doubleClick = typeof doubleClick === 'undefined' ? false : doubleClick;\n\n        target.interactive = true;\n\n        this.time = 0;\n        this.startEvent();\n\n        this.onHover = (): void => null;\n        this.onPress = (): void => null;\n        this.onClick = (): void => null;\n        this.onMove = (): void => null;\n    }\n\n    /**\n     * Whether right mice are used for clicks rather than left mice.\n     * @member boolean\n     */\n    get rightMouseButton(): boolean\n    {\n        return this._rightMouseButton;\n    }\n    set rightMouseButton(val: boolean)\n    {\n        this._rightMouseButton = val;\n\n        this.evMouseDown = this._rightMouseButton ? 'rightdown' : 'mousedown';\n        this.evMouseUp = this._rightMouseButton ? 'rightup' : 'mouseup';\n        this.evMouseUpOutside = this._rightMouseButton ? 'rightupoutside' : 'mouseupoutside';\n    }\n\n    /**\n     * @param {boolean}[includeHover]\n     * @param {boolean}[rightMouseButton]\n     * @param {boolean}[doubleClick]\n     * @override\n     */\n    startEvent = (\n        includeHover = this._includeHover,\n        rightMouseButton = this._rightMouseButton,\n        doubleClick = this._doubleClick,\n    ): void =>\n    {\n        if (this.isEnabled)\n        {\n            return;\n        }\n\n        this._includeHover = includeHover;\n        this.rightMouseButton = rightMouseButton;\n        this._doubleClick = doubleClick;\n\n        const { target } = this;\n\n        target.insetContainer.on(this.evMouseDown, this.onMouseDownImpl);\n\n        if (!this._rightMouseButton)\n        {\n            target.insetContainer.on('touchstart', this.onMouseDownImpl);\n        }\n\n        if (this._includeHover)\n        {\n            target.insetContainer.on('mouseover', this.onMouseOverImpl);\n            target.insetContainer.on('mouseout', this.onMouseOutImpl);\n        }\n\n        this.isEnabled = true;\n    };\n\n    /**\n     * @override\n     */\n    stopEvent = (): void =>\n    {\n        if (!this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.bound)\n        {\n            target.insetContainer.removeListener(this.evMouseUp, this.onMouseUpImpl);\n            target.insetContainer.removeListener(this.evMouseUpOutside, this.onMouseUpOutsideImpl);\n\n            if (!this._rightMouseButton)\n            {\n                target.insetContainer.removeListener('touchend', this.onMouseUpImpl);\n                target.insetContainer.removeListener('touchendoutside', this.onMouseUpOutsideImpl);\n            }\n\n            this.bound = false;\n        }\n\n        target.insetContainer.removeListener(this.evMouseDown, this.onMouseDownImpl);\n\n        if (!this._rightMouseButton)\n        {\n            target.insetContainer.removeListener('touchstart', this.onMouseDownImpl);\n        }\n\n        if (this._includeHover)\n        {\n            target.insetContainer.removeListener('mouseover', this.onMouseOverImpl);\n            target.insetContainer.removeListener('mouseout', this.onMouseOutImpl);\n            target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n            target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n        }\n\n        this.isEnabled = false;\n    };\n\n    protected onMouseDownImpl = (event: PIXI.interaction.InteractionEvent): void =>\n    {\n        const {\n            target: obj,\n            evMouseUp,\n            onMouseUpImpl: _onMouseUp,\n            evMouseUpOutside,\n            onMouseUpOutsideImpl: _onMouseUpOutside,\n            _rightMouseButton: right,\n        } = this;\n\n        this.mouse.copyFrom(event.data.global);\n        this.id = event.data.identifier;\n        this.onPress.call(this.target, event, true);\n\n        if (!this.bound)\n        {\n            obj.insetContainer.on(evMouseUp, _onMouseUp);\n            obj.insetContainer.on(evMouseUpOutside, _onMouseUpOutside);\n\n            if (!right)\n            {\n                obj.insetContainer.on('touchend', _onMouseUp);\n                obj.insetContainer.on('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = true;\n        }\n\n        if (this._doubleClick)\n        {\n            const now = performance.now();\n\n            if (now - this.time < 210)\n            {\n                this.onClick.call(obj, event);\n            }\n            else\n            {\n                this.time = now;\n            }\n        }\n\n        event.data.originalEvent.preventDefault();\n    };\n\n    protected onMouseUpCommonImpl = (event: PIXI.interaction.InteractionEvent): void =>\n    {\n        const {\n            target: obj,\n            evMouseUp,\n            onMouseUpImpl: _onMouseUp,\n            evMouseUpOutside,\n            onMouseUpOutsideImpl: _onMouseUpOutside,\n        } = this;\n\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.offset.set(event.data.global.x - this.mouse.x, event.data.global.y - this.mouse.y);\n\n        if (this.bound)\n        {\n            obj.insetContainer.removeListener(evMouseUp, _onMouseUp);\n            obj.insetContainer.removeListener(evMouseUpOutside, _onMouseUpOutside);\n\n            if (!this._rightMouseButton)\n            {\n                obj.insetContainer.removeListener('touchend', _onMouseUp);\n                obj.insetContainer.removeListener('touchendoutside', _onMouseUpOutside);\n            }\n\n            this.bound = false;\n        }\n\n        this.onPress.call(obj, event, false);\n    };\n\n    protected onMouseUpImpl = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.onMouseUpCommonImpl(event);\n\n        // prevent clicks with scrolling/dragging objects\n        if (this.target.dragThreshold)\n        {\n            this.movementX = Math.abs(this.offset.x);\n            this.movementY = Math.abs(this.offset.y);\n\n            if (Math.max(this.movementX, this.movementY) > this.target.dragThreshold)\n            {\n                return;\n            }\n        }\n\n        if (!this._doubleClick)\n        {\n            this.onClick.call(this.target, event);\n        }\n    };\n\n    protected onMouseUpOutsideImpl = (event): void =>\n    {\n        if (event.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        this.onMouseUpCommonImpl(event);\n    };\n\n    protected onMouseOverImpl = (event): void =>\n    {\n        if (!this.ishover)\n        {\n            this.ishover = true;\n            this.target.insetContainer.on('mousemove', this.onMouseMoveImpl);\n            this.target.insetContainer.on('touchmove', this.onMouseMoveImpl);\n\n            this.onHover.call(this.target, event, true);\n        }\n    };\n\n    protected onMouseOutImpl = (event): void =>\n    {\n        if (this.ishover)\n        {\n            this.ishover = false;\n            this.target.insetContainer.removeListener('mousemove', this.onMouseMoveImpl);\n            this.target.insetContainer.removeListener('touchmove', this.onMouseMoveImpl);\n\n            this.onHover.call(this.target, event, false);\n        }\n    };\n\n    protected onMouseMoveImpl = (event): void =>\n    {\n        this.onMove.call(this.target, event);\n    };\n}\n","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * `DragManager` handles drag & drop events. It registers listeners for `mousedown`,\n * `touchstart` on the target and `mousemove`, `touchmove`, `mouseup`, `mouseupoutside`,\n * `touchend`, `touchendoutside` on the stage.\n *\n * By default, `draggable` widgets will internally handle drag-n-drop and reassigning\n * the callbacks on their `DragManager` will break their behaviour. You can prevent\n * this by using `eventBroker.dnd` directly without setting `widget.draggable` to\n * `true` (or using `widget.makeDraggable()`).\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class DragManager extends EventManager\n{\n    protected isBound: boolean;\n    protected isDragging: boolean;\n    protected id: number;\n    protected dragStart: PIXI.Point;\n    protected dragOffset: PIXI.Point;\n    protected lastCursor: PIXI.Point;\n    protected movementX: number;\n    protected movementY: number;\n    protected cancel: boolean;\n\n    public onPress: (e: PIXI.interaction.InteractionEvent, isPressed: boolean) => void;\n    public onDragStart: (e: PIXI.interaction.InteractionEvent) => void;\n    public onDragMove: (e: PIXI.interaction.InteractionEvent, dragOffset: PIXI.Point) => void;\n    public onDragEnd: (e: PIXI.interaction.InteractionEvent) => void;\n\n    constructor(target: Widget)\n    {\n        super(target);\n\n        this.isBound = false;\n        this.isDragging = false;\n        this.id = 0;\n        this.dragStart = new PIXI.Point();\n        this.dragOffset = new PIXI.Point();\n        this.lastCursor = new PIXI.Point();\n        this.movementX = 0;\n        this.movementY = 0;\n        this.cancel = false;\n\n        this.target.interactive = true;\n\n        this.onPress = (): void => null;\n        this.onDragStart = (): void => null;\n        this.onDragMove = (): void => null;\n        this.onDragEnd = (): void => null;\n\n        this.startEvent();\n    }\n\n    startEvent(): void\n    {\n        if (this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        target.insetContainer.on('mousedown', this.onDragStartImpl);\n        target.insetContainer.on('touchstart', this.onDragStartImpl);\n\n        this.isEnabled = true;\n    }\n\n    stopEvent(): void\n    {\n        if (!this.isEnabled)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.isBound)\n        {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n\n            this.isBound = false;\n        }\n\n        target.insetContainer.removeListener('mousedown', this.onDragStartImpl);\n        target.insetContainer.removeListener('touchstart', this.onDragStartImpl);\n\n        this.isEnabled = false;\n    }\n\n    protected onDragStartImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        const { target } = this;\n\n        this.id = e.data.identifier;\n        this.onPress(e, true);\n\n        if (!this.isBound)\n        {\n            this.dragStart.copyFrom(e.data.global);\n\n            target.stage.on('mousemove', this.onDragMoveImpl);\n            target.stage.on('touchmove', this.onDragMoveImpl);\n            target.stage.on('mouseup', this.onDragEndImpl);\n            target.stage.on('mouseupoutside', this.onDragEndImpl);\n            target.stage.on('touchend', this.onDragEndImpl);\n            target.stage.on('touchendoutside', this.onDragEndImpl);\n            target.stage.on('touchcancel', this.onDragEndImpl);\n\n            this.isBound = true;\n        }\n\n        e.data.originalEvent.preventDefault();\n    };\n\n    private onDragMoveImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const {\n            lastCursor,\n            dragOffset,\n            dragStart,\n            target,\n        } = this;\n\n        this.lastCursor.copyFrom(e.data.global);\n        this.dragOffset.set(lastCursor.x - dragStart.x, lastCursor.y - dragStart.y);\n\n        if (!this.isDragging)\n        {\n            this.movementX = Math.abs(dragOffset.x);\n            this.movementY = Math.abs(dragOffset.y);\n\n            if ((this.movementX === 0 && this.movementY === 0)\n                    || Math.max(this.movementX, this.movementY) < target.dragThreshold)\n            {\n                return; // threshold\n            }\n\n            if (target.dragRestrictAxis !== null)\n            {\n                this.cancel = false;\n\n                if (target.dragRestrictAxis === 'x' && this.movementY > this.movementX)\n                {\n                    this.cancel = true;\n                }\n                else if (target.dragRestrictAxis === 'y' && this.movementY <= this.movementX)\n                {\n                    this.cancel = true;\n                }\n\n                if (this.cancel)\n                {\n                    this.onDragEndImpl(e);\n\n                    return;\n                }\n            }\n\n            this.onDragStart(e);\n            this.isDragging = true;\n        }\n\n        this.onDragMove(e, dragOffset);\n    };\n\n    private onDragEndImpl = (e: PIXI.interaction.InteractionEvent): void =>\n    {\n        if (e.data.identifier !== this.id)\n        {\n            return;\n        }\n\n        const { target } = this;\n\n        if (this.isBound)\n        {\n            target.stage.removeListener('mousemove', this.onDragMoveImpl);\n            target.stage.removeListener('touchmove', this.onDragMoveImpl);\n            target.stage.removeListener('mouseup', this.onDragEndImpl);\n            target.stage.removeListener('mouseupoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchend', this.onDragEndImpl);\n            target.stage.removeListener('touchendoutside', this.onDragEndImpl);\n            target.stage.removeListener('touchcancel', this.onDragEndImpl);\n\n            this.isDragging = false;\n            this.isBound = false;\n\n            this.onDragEnd(e);\n            this.onPress(e, false);\n        }\n    };\n}\n","import { ClickManager } from './ClickManager';\nimport { DragManager } from './DragManager';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * The event brokers allows you to access event managers without manually assigning\n * them to a widget. By default, the click (`PUXI.ClickManager`), dnd (`PUXI.DragManager`)\n * are defined. You can add event managers for all (new) widgets by adding an entry to\n * `EventBroker.MANAGER_MAP`.\n *\n * @memberof PUXI\n * @class\n */\nexport class EventBroker\n{\n    [key: string]: EventManager | Widget;\n\n    constructor(target: Widget)\n    {\n        this.target = target;\n\n        for (const mgr of Object.keys(EventBroker.MANAGER_MAP))\n        {\n            Object.defineProperty(\n                this,\n                mgr,\n                {\n                    get(): EventManager\n                    {\n                        if (!this[`_${mgr}`])\n                        {\n                            this[`_${mgr}`] = new EventBroker.MANAGER_MAP[mgr](this.target);\n                        }\n\n                        return this[`_${mgr}`];\n                    },\n                },\n            );\n        }\n    }\n\n  static MANAGER_MAP = {\n      click: ClickManager,\n      dnd: DragManager,\n  };\n}\n","import * as PIXI from 'pixi.js';\nimport { EventManager } from './EventManager';\nimport { Widget } from '../Widget';\n\n/**\n * Handles the `wheel` and `scroll` DOM events on widgets. It also registers\n * listeners for `mouseout` and `mouseover`.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.EventManager\n */\nexport class ScrollManager extends EventManager\n{\n    private bound: boolean;\n    private delta: PIXI.Point;\n    private preventDefault: boolean;\n\n    constructor(target: Widget, preventDefault = true)\n    {\n        super(target);\n\n        this.bound = false;\n        this.delta = new PIXI.Point();\n        this.preventDefault = preventDefault;\n\n        this.startEvent();\n    }\n\n    /**\n     * @override\n     */\n    startEvent(): void\n    {\n        const { target, onHoverImpl, onMouseOutImpl } = this;\n\n        target.contentContainer.on('mouseover', onHoverImpl);\n        target.contentContainer.on('mouseout', onMouseOutImpl);\n    }\n\n    /**\n     * @override\n     */\n    stopEvent(): void\n    {\n        const { target, onMouseScrollImpl, onHoverImpl, onMouseOutImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n\n        target.contentContainer.removeListener('mouseover', onHoverImpl);\n        target.contentContainer.removeListener('mouseout', onMouseOutImpl);\n    }\n\n    private onMouseScrollImpl = (e: WheelEvent): void =>\n    {\n        const { target, preventDefault, delta } = this;\n\n        if (preventDefault)\n        {\n            event.preventDefault();\n        }\n\n        if (typeof e.deltaX !== 'undefined')\n        {\n            delta.set(e.deltaX, e.deltaY);\n        }\n        else // Firefox\n        {\n            delta.set(e.axis === 1 ? e.detail * 60 : 0,\n                e.axis === 2 ? e.detail * 60 : 0);\n        }\n\n        this.onMouseScroll.call(target, event, delta);\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onHoverImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (!this.bound)\n        {\n            document.addEventListener('mousewheel', onMouseScrollImpl, false);\n            document.addEventListener('DOMMouseScroll', onMouseScrollImpl, false);\n\n            this.bound = true;\n        }\n    };\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private onMouseOutImpl = (e): void =>\n    {\n        const { onMouseScrollImpl } = this;\n\n        if (this.bound)\n        {\n            document.removeEventListener('mousewheel', onMouseScrollImpl);\n            document.removeEventListener('DOMMouseScroll', onMouseScrollImpl);\n\n            this.bound = false;\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMouseScroll = function onMouseScroll(event, delta: PIXI.Point): void\n    {\n        // Default onMouseScroll.\n    };\n}\n","import { DragManager } from './event/DragManager';\nimport { DragDropController } from './event/DragDropController';\nimport * as PIXI from 'pixi.js';\nimport { Insets } from './layout-options/Insets';\nimport { LayoutOptions } from './layout-options';\nimport { MeasureMode, IMeasurable } from './IMeasurable';\nimport { Stage } from './Stage';\nimport { DropShadowFilter } from '@pixi/filter-drop-shadow';\nimport { EventBroker } from './event';\n\n/**\n * A widget is a user interface control that renders content inside its prescribed\n * rectangle on the screen.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n * @implements PUXI.IMeasurable\n */\nexport class Widget extends PIXI.utils.EventEmitter implements IMeasurable\n{\n    public readonly insetContainer: PIXI.Container;\n    public readonly contentContainer: PIXI.Container;\n    public readonly widgetChildren: Widget[];\n    public readonly stage: Stage;\n\n    initialized: boolean;\n    protected dragInitialized: boolean;\n    protected dropInitialized: boolean;\n    protected isDragging: boolean;\n\n    private draggable: boolean;\n    private droppable: boolean;\n\n    dirty: boolean;\n    _oldWidth: number;\n    _oldHeight: number;\n    pixelPerfect: boolean;\n\n    parent: Widget;\n\n    public layoutMeasure: Insets;\n    public layoutOptions: LayoutOptions;\n\n    protected tint: number;\n    protected blendMode: PIXI.BLEND_MODES;\n    protected background: PIXI.Container;\n    protected _measuredWidth: number;\n    protected _measuredHeight: number;\n\n    private _eventBroker: EventBroker;\n    private _paddingLeft: number;\n    private _paddingTop: number;\n    private _paddingRight: number;\n    private _paddingBottom: number;\n    private _width: number;\n    private _height: number;\n    private _elevation: number;\n    private _dropShadow: DropShadowFilter;\n\n    private _layoutDirty: boolean;\n\n    constructor()\n    {\n        super();\n\n        /**\n         * This container owns the background + content of this widget.\n         * @member {PIXI.Container}\n         * @readonly\n         */\n        this.insetContainer = new PIXI.Container();\n\n        /**\n         * This container holds the content of this widget. Subclasses should add\n         * renderable display-objects to this container.\n         * @member {PIXI.Container}\n         * @readonly\n         */\n        this.contentContainer = this.insetContainer.addChild(new PIXI.Container());\n\n        /**\n         * Children of this widget. Use `WidgetGroup` to position children.\n         * @member {PUXI.Widget[]}\n         * @readonly\n         */\n        this.widgetChildren = [];\n\n        /**\n         * Stage whose scene graph holds this widget. Once set, this cannot be changed.\n         * @member {PUXI.Stage}\n         * @readonly\n         */\n        this.stage = null;\n\n        /**\n         * Layout insets of this widget. In normal state, the widget should be in this\n         * rectangle inside the parent reference frame.\n         * @member {PUXI.Insets}\n         * @readonly\n         */\n        this.layoutMeasure = new Insets();\n\n        this.initialized = false;\n        this.dragInitialized = false;\n        this.dropInitialized = false;\n\n        this.dirty = true;\n        this._oldWidth = -1;\n        this._oldHeight = -1;\n        this.pixelPerfect = true;\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n        this._elevation = 0;\n\n        this.tint = 0;\n        this.blendMode = PIXI.BLEND_MODES.NORMAL;\n\n        this.draggable = false;\n        this.droppable = false;\n    }\n\n    /**\n     * Update method that is to be overriden. This is called before a `render()`\n     * pass on widgets that are dirty.\n     *\n     * @private\n     */\n    update(): any\n    {\n        if (this._layoutDirty)\n        {\n            console.log('here');\n            setTimeout(() =>\n            {\n                if (this._layoutDirty)\n                {\n                    this.stage.measureAndLayout();\n                }\n            }, 0);\n        }\n    }\n\n    /**\n     * The measured width that is used by the parent's layout manager to place this\n     * widget.\n     * @member {number}\n     */\n    get measuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    /**\n     * The measured height that is used by the parent's layout manager to place this\n     * widget.\n     * @member {number}\n     */\n    get measuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    /**\n     * Alias for `Widget.measuredWidth`.\n     *\n     * @returns {number} the measured width\n     */\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    /**\n     * Alias for `Widget.measuredHeight`.\n     *\n     * @returns {number} the measured height\n     */\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n\n    /**\n     * Override this method to measure the dimensions for your widget. By default, it\n     * will use the natural width/height of this widget's content (`contentContainer`)\n     * plus any padding.\n     *\n     * @param {number} width - width of region provided by parent\n     * @param {number} height - height of region provided by parent\n     * @param {PUXI.MeasureMode} widthMode - mode in which provided width is to be used\n     * @param {PUXI.MeasureMode} heightMode - mode in which provided height is to be used\n     */\n    onMeasure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        const naturalWidth = this.contentContainer.width + this.paddingHorizontal;\n        const naturalHeight = this.contentContainer.height + this.paddingVertical;\n\n        switch (widthMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n\n        switch (heightMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n\n    /**\n     * This method calls `Widget.onMeasure` and should not be overriden. It does internal\n     * bookkeeping.\n     *\n     * @param {number} width\n     * @param {number} height\n     * @param {PUXI.MeasureMode} widthMode\n     * @param {PUXI.MeasureMode} heightMode\n     */\n    measure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this.onMeasure(width, height, widthMode, heightMode);\n    }\n\n    /**\n     * This method should set the frame in which rendering will occur and lay out\n     * child widgets in that frame.\n     *\n     * @param l\n     * @param t\n     * @param r\n     * @param b\n     * @param dirty\n     * @protected\n     */\n    onLayout(l: number, t: number = l, r: number = l, b: number = t, dirty = true): void\n    {\n        this.layoutMeasure.left = l;\n        this.layoutMeasure.top = t;\n        this.layoutMeasure.right = r;\n        this.layoutMeasure.bottom = b;\n\n        this._width = r - l;\n        this._height = b - t;\n\n        if (this.background)\n        {\n            this.background.x = 0;\n            this.background.y = 0;\n            this.background.width = r - l;\n            this.background.height = b - t;\n        }\n\n        // Update parallel PIXI node too!\n        this.insetContainer.x = l;\n        this.insetContainer.y = t;\n        this.contentContainer.x = this._paddingLeft;\n        this.contentContainer.y = this._paddingTop;\n\n        // Don't set width/height on inset, content because that would scale\n        // the contents (we don't want that).\n\n        this._layoutDirty = false;\n    }\n\n    layout(l: number, t: number = l, r: number = l, b: number = t, dirty = true): void\n    {\n        this.onLayout(l, t, r, b, dirty);\n    }\n\n    /**\n     * Use this to specify how you want to layout this widget w.r.t its parent.\n     * The specific layout options class depends on which layout you are\n     * using in the parent widget.\n     *\n     * @param {PUXI.LayoutOptions} lopt\n     * @returns {Widget} this\n     */\n    setLayoutOptions(lopt: LayoutOptions): Widget\n    {\n        this.layoutOptions = lopt;\n\n        return this;\n    }\n\n    /**\n     * The event broker for this widget that holds all the event managers. This can\n     * be used to start/stop clicks, drags, scrolls and configure how those events\n     * are handled/interpreted.\n     * @member PUXI.EventBroker\n     */\n    get eventBroker(): EventBroker\n    {\n        if (!this._eventBroker)\n        {\n            this._eventBroker = new EventBroker(this);\n        }\n\n        return this._eventBroker;\n    }\n\n    /**\n     * Padding on left side.\n     * @member {number}\n     */\n    get paddingLeft(): number\n    {\n        return this._paddingLeft;\n    }\n    set paddingLeft(val: number)\n    {\n        this._paddingLeft = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on top side.\n     * @member {number}\n     */\n    get paddingTop(): number\n    {\n        return this._paddingTop;\n    }\n    set paddingTop(val: number)\n    {\n        this._paddingTop = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on right side.\n     * @member {number}\n     */\n    get paddingRight(): number\n    {\n        return this._paddingRight;\n    }\n    set paddingRight(val: number)\n    {\n        this._paddingRight = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Padding on bottom side.\n     * @member {number}\n     */\n    get paddingBottom(): number\n    {\n        return this._paddingBottom;\n    }\n    set paddingBottom(val: number)\n    {\n        this._paddingBottom = val;\n        this.dirty = true;\n    }\n\n    /**\n     * Sum of left & right padding.\n     * @member {number}\n     * @readonly\n     */\n    get paddingHorizontal(): number\n    {\n        return this._paddingLeft + this._paddingRight;\n    }\n\n    /**\n     * Sum of top & bottom padding.\n     * @member {number}\n     * @readonly\n     */\n    get paddingVertical(): number\n    {\n        return this._paddingTop + this._paddingBottom;\n    }\n\n    /**\n     * Whether this widget is interactive in the PixiJS scene graph.\n     * @member {boolean}\n     */\n    get interactive(): boolean\n    {\n        return this.insetContainer.interactive;\n    }\n    set interactive(val: boolean)\n    {\n        this.insetContainer.interactive = true;\n        this.contentContainer.interactive = true;\n    }\n\n    /**\n     * Layout width of this widget.\n     * @member {number}\n     * @readonly\n     */\n    get width(): number\n    {\n        return this._width;\n    }\n\n    /**\n     * Layout height of this widget.\n     * @member {number}\n     * @readonly\n     */\n    get height(): number\n    {\n        return this._height;\n    }\n\n    /**\n     * Layout width of this widget's content, which is the width minus horizontal padding.\n     * @member {number}\n     * @readonly\n     */\n    get contentWidth(): number\n    {\n        return this._width - this.paddingHorizontal;\n    }\n\n    /**\n     * Layout height of this widget's content, which is the height minus vertical padding.\n     * @member {number}\n     * @readonly\n     */\n    get contentHeight(): number\n    {\n        return this._height - this.paddingVertical;\n    }\n\n    /**\n     * Alpha of this widget & its contents.\n     * @member {number}\n     */\n    get alpha(): number\n    {\n        return this.insetContainer.alpha;\n    }\n    set alpha(val: number)\n    {\n        this.insetContainer.alpha = val;\n    }\n\n    /**\n     * Sets the padding values.\n     *\n     * To set all paddings to one value:\n     * ```\n     * widget.setPadding(8);\n     * ```\n     *\n     * To set horizontal & vertical padding separately:\n     * ```\n     * widget.setPadding(4, 12);\n     * ```\n     *\n     * @param {number}[l=0] - left padding\n     * @param {number}[t=l] - top padding (default is equal to left padding)\n     * @param {number}[r=l] - right padding (default is equal to right padding)\n     * @param {number}[b=t] - bottom padding (default is equal to top padding)\n     */\n    setPadding(l: number, t: number = l, r: number = l, b: number = t): Widget\n    {\n        this._paddingLeft = l;\n        this._paddingTop = t;\n        this._paddingRight = r;\n        this._paddingBottom = b;\n        this.dirty = true;\n\n        return this;\n    }\n\n    /**\n     * @returns {PIXI.Container} - the background display-object\n     */\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    /**\n     * The background of a widget is a `PIXI.DisplayObject` that is rendered before\n     * all of its children.\n     *\n     * @param {PIXI.Container | number | string} bg - the background display-object or\n     *     a color that will be used to generate a `PIXI.Graphics` as the background.\n     */\n    setBackground(bg: PIXI.Container | number | string): Widget\n    {\n        if (this.background)\n        {\n            this.insetContainer.removeChild(this.background);\n        }\n\n        if (typeof bg === 'string')\n        {\n            bg = PIXI.utils.string2hex(bg);\n        }\n        if (typeof bg === 'number')\n        {\n            bg = new PIXI.Graphics()\n                .beginFill(bg)\n                .drawRect(0, 0, 1, 1)\n                .endFill();\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            bg.width = this.width;\n            bg.height = this.height;\n            this.insetContainer.addChildAt(bg, 0);\n        }\n\n        if (bg && this._elevation && this._dropShadow)\n        {\n            if (!this.background.filters)\n            {\n                this.background.filters = [];\n            }\n\n            this.background.filters.push(this._dropShadow);\n        }\n\n        return this;\n    }\n\n    /**\n     * @returns {number} the alpha on the background display-object.\n     */\n    getBackgroundAlpha(): number\n    {\n        return this.background ? this.background.alpha : 1;\n    }\n\n    /**\n     * This can be used to set the alpha on the _background_ of this widget. This\n     * does not affect the widget's contents nor individual components of the\n     * background display-object.\n     *\n     * @param {number} val - background alpha\n     */\n    setBackgroundAlpha(val: number): Widget\n    {\n        if (!this.background)\n        {\n            this.setBackground(0xffffff);\n        }\n\n        this.background.alpha = val;\n\n        return this;\n    }\n\n    /**\n     * @return {number} the elevation set on this widget\n     */\n    getElevation(): number\n    {\n        return this._elevation;\n    }\n\n    /**\n     * This can be used add a drop-shadow that will appear to raise this widget by\n     * the given elevation against its parent.\n     *\n     * @param {number} val - elevation to use. 2px is good for most widgets.\n     */\n    setElevation(val: number): Widget\n    {\n        this._elevation = val;\n\n        if (val === 0 && this._dropShadow)\n        {\n            if (!this.background)\n            {\n                return this;\n            }\n\n            const i = this.background.filters.indexOf(this._dropShadow);\n\n            if (i > 0)\n            {\n                this.background.filters.splice(i, 1);\n            }\n        }\n        else if (val > 0)\n        {\n            if (!this._dropShadow)\n            {\n                if (this.background && !this.background.filters)\n                {\n                    this.background.filters = [];\n                }\n\n                this._dropShadow = new DropShadowFilter({ distance: val });\n\n                if (this.background)\n                {\n                    this.background.filters.push(this._dropShadow);\n                }\n            }\n\n            this._dropShadow.distance = val;\n        }\n\n        return this;\n    }\n\n    /**\n     * Will trigger a full layout pass next animation frame.\n     */\n    requestLayout(): void\n    {\n        this._layoutDirty = true;\n    }\n\n    /**\n     * Adds the widgets as children of this one.\n     *\n     * @param {PUXI.Widget[]} widgets\n     * @returns {Widget} - this widget\n     */\n    addChild(...widgets: Widget[]): Widget\n    {\n        for (let i = 0; i < widgets.length; i++)\n        {\n            const widget = widgets[i];\n\n            if (widget.parent)\n            {\n                widget.parent.removeChild(widget);\n            }\n\n            widget.parent = this;\n            this.contentContainer.addChild(widget.insetContainer);\n            this.widgetChildren.push(widget);\n        }\n\n        return this;\n    }\n\n    /**\n     * Orphans the widgets that are children of this one.\n     *\n     * @param {PUXI.Widget[]} widgets\n     * @returns {Widget} - this widget\n     */\n    removeChild(...widgets: Widget[]): Widget\n    {\n        for (let i = 0; i < widgets.length; i++)\n        {\n            const widget = widgets[i];\n            const index = this.widgetChildren.indexOf(widget);\n\n            if (index !== -1)\n            {\n                widget.insetContainer.parent.removeChild(widget.insetContainer);\n                this.widgetChildren.splice(index, 1);\n                widget.parent = null;\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes this widget `draggable`.\n     */\n    makeDraggable(): Widget\n    {\n        this.draggable = true;\n\n        if (this.initialized)\n        {\n            this.initDraggable();\n        }\n\n        return this;\n    }\n\n    /**\n     * Makes this widget not `draggable`.\n     */\n    clearDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            this.dragInitialized = false;\n            (this.eventBroker.dnd as DragManager).stopEvent();\n        }\n    }\n\n    /**\n     * Widget initialization related to the stage. This method should always call\n     * `super.initialize()`.\n     *\n     * This method expects `stage` to be set before calling it. This is handled\n     * by the `Stage` itself.\n     *\n     * This will set `initialized` to true. If it was already set to true, it _should\n     * do nothing_.\n     *\n     * @protected\n     */\n    initialize(): void\n    {\n        if (this.initialized)\n        {\n            return;\n        }\n\n        if (this.draggable)\n        {\n            this.initDraggable();\n        }\n        if (this.droppable)\n        {\n            this.initDroppable();\n        }\n\n        this.initialized = true;\n    }\n\n    private initDraggable(): void\n    {\n        if (this.dragInitialized)\n        {\n            return;\n        }\n\n        this.dragInitialized = true;\n\n        const realPosition = new PIXI.Point();\n        const dragPosition = new PIXI.Point();\n\n        const dnd: DragManager = this.eventBroker.dnd as DragManager;\n        const { insetContainer } = this;\n\n        dnd.onDragStart = (e: PIXI.interaction.InteractionEvent): void =>\n        {\n            const added = DragDropController.add(this, e);\n\n            if (!this.isDragging && added)\n            {\n                this.isDragging = true;\n                insetContainer.interactive = false;\n                realPosition.copyFrom(insetContainer.position);\n\n                this.emit('draggablestart', e);\n            }\n        };\n\n        dnd.onDragMove = (e: PIXI.interaction.InteractionEvent, offset: PIXI.Point): void =>\n        {\n            if (this.isDragging)\n            {\n                dragPosition.set(realPosition.x + offset.x, realPosition.y + offset.y);\n\n                insetContainer.x = dragPosition.x;\n                insetContainer.y = dragPosition.y;\n\n                this.emit('draggablemove', e);\n            }\n        };\n\n        dnd.onDragEnd = (e: PIXI.interaction.InteractionEvent): void =>\n        {\n            if (this.isDragging)\n            {\n                this.isDragging = false;\n                DragDropController.getItem(this);\n\n                // Return to container after 0ms if not picked up by a droppable\n                setTimeout((): void =>\n                {\n                    this.insetContainer.interactive = true;\n                    this.insetContainer.position.copyFrom(realPosition);\n\n                    this.emit('draggableend', e);\n                }, 0);\n            }\n        };\n    }\n\n    /**\n     * Makes this widget `droppable`.\n     */\n    makeDroppable(): Widget\n    {\n        this.droppable = true;\n\n        if (this.initialized)\n        {\n            this.initDroppable();\n        }\n\n        return this;\n    }\n\n    protected onDrop: (e: PIXI.interaction.InteractionEvent) => void;\n\n    /**\n     * Makes this widget not `droppable`.\n     */\n    clearDroppable(): void\n    {\n        if (this.dropInitialized)\n        {\n            this.dropInitialized = false;\n            this.contentContainer.removeListener('mouseup', this.onDrop);\n            this.contentContainer.removeListener('touchend', this.onDrop);\n        }\n    }\n\n    private initDroppable(): void\n    {\n        if (!this.dropInitialized)\n        {\n            this.dropInitialized = true;\n            const container = this.contentContainer;\n\n            this.contentContainer.interactive = true;\n\n            this.onDrop = (event): void =>\n            {\n                const item = DragDropController.getEventItem(event, this.dropGroup);\n\n                if (item && item.isDragging)\n                {\n                    item.isDragging = false;\n                    item.insetContainer.interactive = true;\n                    const parent = this.droppableReparent !== null ? this.droppableReparent : self;\n\n                    parent.container.toLocal(item.container.position, item.container.parent, item);\n                    if (parent.container != item.container.parent) { parent.addChild(item); }\n                }\n            };\n\n            container.on('mouseup', this.onDrop);\n            container.on('touchend', this.onDrop);\n        }\n    }\n\n    /**\n     * Creates a widget that holds the display-object as its content. If `content` is\n     * a `PUXI.Widget`, then it will be returned.\n     * @param {PIXI.Container | Widget} content\n     * @static\n     */\n    static fromContent(content: PIXI.Container | Widget): Widget\n    {\n        if (content instanceof Widget)\n        {\n            return content;\n        }\n\n        const widget = new Widget();\n\n        widget.contentContainer.addChild(content);\n\n        return widget;\n    }\n\n    /**\n     * Easy utility to resolve measured dimension.\n     * @param {number} natural - your widget's natural dimension\n     * @param {number} limit - width/height limit passed by parent\n     * @param {PUXI.MeasureMode} mode - measurement mode passed by parent\n     */\n    static resolveMeasuredDimen(natural: number, limit: number, mode: MeasureMode): number\n    {\n        if (mode === MeasureMode.EXACTLY)\n        {\n            return limit;\n        }\n        else if (mode === MeasureMode.AT_MOST)\n        {\n            return Math.min(limit, natural);\n        }\n\n        return natural;\n    }\n}\n","/**\n * This are the base constraints that you can apply on a `PUXI.Widget` under any\n * layout manager. It specifies the dimensions of a widget, while the position\n * of the widget is left to the parent to decide. If a dimension (width or height)\n * is set to a value between -1 and 1, then it is interpreted as a percentage\n * of the parent's dimension.\n *\n * The following example will render a widget at 50% of the parent's width and 10px height:\n *\n * ```js\n * const widget = new PUXI.Widget();\n * const parent = new PUXI.Widget();\n *\n * widget.layoutOptions = new PUXI.LayoutOptions(\n *      .5,\n *      10\n * );\n * parent.addChild(widget);\n * ```\n *\n * @memberof PUXI\n * @class\n */\nexport class LayoutOptions\n{\n    public static FILL_PARENT = 0xfffffff1;\n    public static WRAP_CONTENT = 0xfffffff2;\n    public static MAX_DIMEN = 0xfffffff0;\n\n    public static DEFAULT = new LayoutOptions();\n\n    public width: number;\n    public height: number;\n    public cache: any;\n\n    private _marginLeft: number;\n    private _marginTop: number;\n    private _marginRight: number;\n    private _marginBottom: number;\n\n    /**\n     * @param {number}[width = LayoutOptions.WRAP_CONTENT]\n     * @param {number}[height = LayoutOptions.WRAP_CONTENT]\n     */\n    constructor(width: number | string = LayoutOptions.WRAP_CONTENT, height: number | string = LayoutOptions.WRAP_CONTENT)\n    {\n        this.setWidth(width);\n        this.setHeight(height);\n\n        /**\n         * Used by the layout manager to cache calculations.\n         * @member {object}\n         */\n        this.cache = {};\n    }\n\n    /**\n     * Utility method to store width that converts strings to their number format.\n     *\n     * @param {number | string} val\n     * @example\n     * ```\n     * lopt.setWidth('68.7%');// 68.7% of parent's width\n     * lopt.setWidth('96px');// 96px\n     * lopt.setWidth(34);// 34px\n     * lopt.setWidth(.45);// 45% of parent's width\n     * ```\n     */\n    setWidth(val: number | string): void\n    {\n        /**\n         * Preferred height of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's height.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.width = LayoutOptions.parseDimen(val);\n    }\n\n    /**\n     * Utility method to store height that converts strings to their number format.\n     *\n     * @param {number | string} val\n     * @example\n     * ```\n     * lopt.setHeight('68.7%');// 68.7% of parent's height\n     * lopt.setHeight('96px');// 96px\n     * lopt.setHeight(34);// 34px\n     * lopt.setHeight(.45);// 45% of parent's height\n     * ```\n     */\n    setHeight(val: number | string): void\n    {\n        /**\n         * Preferred width of the widget in pixels. If its value is between -1 and 1, it\n         * is interpreted as a percentage of the parent's width.\n         * @member {number}\n         * @default {PUXI.LayoutOptions.WRAP_CONTENT}\n         */\n        this.height = LayoutOptions.parseDimen(val);\n    }\n\n    /**\n     * @member {boolean} - whether the specified width is a constant\n     *      (not a percentage, `WRAP_CONTENT`, or `FILL_PARENT`)\n     */\n    get isWidthPredefined(): boolean\n    {\n        return this.width > 1 && this.width <= LayoutOptions.MAX_DIMEN;\n    }\n\n    /**\n     * @member {boolean} - whether the specified height is a constant\n     *      (not a percentage, `WRAP_CONTENT`, or `FILL_PARENT`)\n     */\n    get isHeightPredefined(): boolean\n    {\n        return this.height > 1 && this.height <= LayoutOptions.MAX_DIMEN;\n    }\n\n    /**\n     * The left margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginLeft(): number\n    {\n        return this._marginLeft || 0;\n    }\n    set marginLeft(val: number)\n    {\n        this._marginLeft = val;\n    }\n\n    /**\n     * This top margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginTop(): number\n    {\n        return this._marginTop || 0;\n    }\n    set marginTop(val: number)\n    {\n        this._marginTop = val;\n    }\n\n    /**\n     * The right margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginRight(): number\n    {\n        return this._marginRight || 0;\n    }\n    set marginRight(val: number)\n    {\n        this._marginRight = val;\n    }\n\n    /**\n     * The bottom margin in pixels of the widget.\n     * @member {number}\n     * @default 0\n     */\n    get marginBottom(): number\n    {\n        return this._marginBottom || 0;\n    }\n    set marginBottom(val: number)\n    {\n        this._marginBottom = val;\n    }\n\n    /**\n     * @param left\n     * @param top\n     * @param right\n     * @param bottom\n     */\n    setMargin(left: number, top: number, right: number, bottom: number): void\n    {\n        this._marginLeft = left;\n        this._marginTop = top;\n        this._marginRight = right;\n        this._marginBottom = bottom;\n    }\n\n    static parseDimen(val: number | string): number\n    {\n        if (typeof val === 'string')\n        {\n            if (val.endsWith('%'))\n            {\n                val = parseFloat(val.replace('%', '')) / 100;\n            }\n            else if (val.endsWith('px'))\n            {\n                val = parseFloat(val.replace('px', ''));\n            }\n\n            if (typeof val === 'string' || isNaN(val))\n            {\n                throw new Error('Width could not be parsed!');\n            }\n        }\n\n        return val;\n    }\n}\n","import { LayoutOptions } from './LayoutOptions';\nimport * as PIXI from 'pixi.js';\n\nexport interface IFastLayoutParams\n{\n    width?: number | string;\n    height?: number | string;\n    x?: number;\n    y?: number;\n    anchor?: PIXI.Point;\n}\n\n/**\n * @memberof PUXI\n * @interface\n * @property {number} width\n * @property {number} height\n * @property {number} x\n * @property {number} y\n * @property {PIXI.Point} anchor\n */\n\n/**\n * `PUXI.FastLayoutOptions` is an extension to `PUXI.LayoutOptions` that also\n * defines the x & y coordinates. It is accepted by the stage and `PUXI.FastLayout`.\n *\n * If x or y is between -1 and 1, then that dimension will be interpreted as a\n * percentage of the parent's width or height.\n *\n * @memberof PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class FastLayoutOptions extends LayoutOptions\n{\n    static DEFAULT_ANCHOR = new PIXI.Point(0, 0);\n    static CENTER_ANCHOR = new PIXI.Point(0.5, 0.5);// fragile, shouldn't be modified\n\n    x: number;\n    y: number;\n    anchor: PIXI.Point;\n\n    constructor(options: IFastLayoutParams)\n    {\n        super(options.width, options.height);\n\n        /**\n         * X-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's width.\n         * @member {number}\n         * @default 0\n         */\n        this.x = options.x || 0;\n\n        /**\n         * Y-coordinate of the widget in its parent's reference frame. If it is\n         * absolutely less than 1, then it will be interpreted as a percent of\n         * the parent's height.\n         * @member {number}\n         * @default 0\n         */\n        this.y = options.y || 0;\n\n        /**\n         * The anchor is a normalized point telling where the (x,y) position of the\n         * widget lies inside of it. By default, it is (0, 0), which means that the\n         * top-left corner of the widget will be at (x,y); however, setting it to\n         * (.5,.5) will make the _center of the widget_ be at (x,y) in the parent's\n         * reference frame.\n         * @member {PIXI.Point}\n         * @default PUXI.FastLayoutOptions.DEFAULT_ANCHOR\n         */\n        this.anchor = options.anchor || FastLayoutOptions.DEFAULT_ANCHOR.clone();\n    }\n}\n","import { LayoutOptions } from './LayoutOptions';\nimport { ALIGN } from './Align';\n\nexport interface IBorderLayoutParams\n{\n    width?: number;\n    height?: number;\n    region?: number;\n    horizontalAlign?: ALIGN;\n    verticalAlign?: ALIGN;\n}\n\n/**\n * @memberof PUXI\n * @interface IBorderLayoutParams\n * @property {number} width\n * @property {number} height\n * @property {number} region\n * @property {number} horizontalAlign\n * @property {number} verticalAlign\n */\n\n/**\n * `PUXI.BorderLayoutOptions` defines a simple layout with five regions - the center and\n * four regions along each border. The top and bottom regions span the full width of\n * the parent widget-group. The left and right regions span the height of the layout\n * minus the top and bottom region heights.\n *\n * ```\n * ------------------------------------------------\n * |                 TOP REGION                   |\n * ------------------------------------------------\n * |        |                            |        |\n * |  LEFT  |          CENTER            | RIGHT  |\n * | REGION |          REGION            | REGION |\n * |        |                            |        |\n * ------------------------------------------------\n * |                BOTTOM REGION                 |\n * ------------------------------------------------\n * ```\n *\n * The height of the layout is measured as the sum of the heights of the top, center, and bottom\n * regions. Similarly, the width of the layout is measured as the width of the left, center, and\n * right regions.\n *\n * As of now, border layout doesn't support percent widths and heights.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.LayoutOptions\n */\nexport class BorderLayoutOptions extends LayoutOptions\n{\n    /**\n     * Positions a widget inside the left border of the layout.\n     * @static\n     * @member {number}\n     */\n    static REGION_LEFT = 0xeff1;\n\n    /**\n     * Positions a widget below the top border of the layout.\n     * @static\n     * @member {number}\n     */\n    static REGION_TOP = 0xeff2;\n\n    /**\n     * Positions a widget below the right border of the layout.\n     * @static\n     * @member {number}\n     */\n    static REGION_RIGHT = 0xeff3;\n\n    /**\n     * Positions a widget below the top border of the layout.\n     * @static\n     * @member {number}\n     */\n    static REGION_BOTTOM = 0xeff4;\n\n    /**\n     * Positions a widget in the center of the layout. The main content of the layout\n     * should be in the center.\n     * @static\n     * @member {number}\n     */\n    static REGION_CENTER = 0xeff5;\n\n    region: number;\n    horizontalAlign: number;\n    verticalAlign: number;\n\n    constructor(options: IBorderLayoutParams)\n    {\n        super(options.width, options.height);\n\n        /**\n         * The border along which the widget is to be placed. This can be one of `POS_LEFT`,\n         * `POS_TOP`, `POS_RIGHT`, `POS_BOTTOM`.\n         * @member {number}\n         * @default {PUXI.BorderLayoutOptions#REGION_CENTER}\n         */\n        this.region = options.region || BorderLayoutOptions.REGION_CENTER;\n\n        /**\n         * Alignment of the widget horizontally in its region.\n         * @member {PUXI.ALIGN}\n         * @default {PUXI.ALIGN.LEFT}\n         */\n        this.horizontalAlign = options.horizontalAlign || ALIGN.LEFT;\n\n        /**\n         * Alignment of the widget vertically in its region.\n         * @member {PUXI.ALIGN}\n         * @default {PUXI.ALIGN.TOP}\n         */\n        this.verticalAlign = options.verticalAlign || ALIGN.TOP;\n    }\n}\n","import { MeasureMode } from '../IMeasurable';\nimport { ILayoutManager } from './ILayoutManager';\nimport { LayoutOptions, FastLayoutOptions } from '../layout-options';\nimport { WidgetGroup } from '../WidgetGroup';\n\n/**\n * `PUXI.FastLayout` is used in conjunction with `PUXI.FastLayoutOptions`. It is the\n * default layout for most widget groups.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.ILayoutManager\n * @example\n * ```\n * parent.useLayout(new PUXI.FastLayout())\n * ```\n */\nexport class FastLayout implements ILayoutManager\n{\n    private host: WidgetGroup;\n    private _measuredWidth: number;\n    private _measuredHeight: number;\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { contentWidth: width, contentHeight: height, widgetChildren: children } = parent;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight());\n        }\n    }\n\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        // TODO: Passthrough optimization pass, if there is only one child with FILL_PARENT width or height\n        // then don't measure twice.\n\n        this._measuredWidth = maxWidth;\n        this._measuredHeight = maxHeight;\n\n        const children = this.host.widgetChildren;\n\n        // Measure children\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * maxWidth : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * maxHeight : lopt.height;\n            const widthMeasureMode = this.getChildMeasureMode(lopt.width, widthMode);\n            const heightMeasureMode = this.getChildMeasureMode(lopt.height, heightMode);\n\n            widget.measure(loptWidth, loptHeight, widthMeasureMode, heightMeasureMode);\n        }\n\n        this._measuredWidth = this.measureWidthReach(maxWidth, widthMode);\n        this._measuredHeight = this.measureHeightReach(maxHeight, heightMode);\n\n        this.measureChildFillers();\n    }\n\n    private getChildMeasureMode(dimen: number, parentMeasureMode: MeasureMode): MeasureMode\n    {\n        if (dimen === LayoutOptions.WRAP_CONTENT)\n        {\n            // No MeasureMode.EXACTLY!\n            return parentMeasureMode === MeasureMode.UNBOUNDED ? MeasureMode.UNBOUNDED : MeasureMode.AT_MOST;\n        }\n\n        return parentMeasureMode;\n    }\n\n    private measureWidthReach(parentWidthLimit: number, widthMode: MeasureMode): number\n    {\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            return parentWidthLimit;\n        }\n\n        const children = this.host.widgetChildren;\n        let measuredWidth = 0;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const childWidth = widget.getMeasuredWidth();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            const x = lopt.x ? lopt.x : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n\n            // If lopt.x is %, then (1 - lopt.x)% of parent width should be as large\n            // as (1 - anchor.x)% child's width.\n            const minr = (Math.abs(x) < 1 ? (1 - anchor.x) * childWidth / (1 - x) : x + childWidth);\n\n            measuredWidth = Math.max(measuredWidth, minr);\n        }\n\n        if (widthMode === MeasureMode.AT_MOST)\n        {\n            measuredWidth = Math.min(parentWidthLimit, measuredWidth);\n        }\n\n        return measuredWidth;\n    }\n\n    private measureHeightReach(parentHeightLimit: number, heightMode: MeasureMode): number\n    {\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            return parentHeightLimit;\n        }\n\n        const children = this.host.widgetChildren;\n        let measuredHeight = 0;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const childHeight = widget.getMeasuredHeight();\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            const y = lopt.y ? lopt.y : 0;\n            const anchor = lopt.anchor ? lopt.anchor : FastLayoutOptions.DEFAULT_ANCHOR;\n\n            const minb = (Math.abs(y) < 1 ? (1 - anchor.y) * childHeight / (1 - y) : y + childHeight);\n\n            measuredHeight = Math.max(measuredHeight, minb);\n        }\n\n        if (heightMode === MeasureMode.AT_MOST)\n        {\n            measuredHeight = Math.min(parentHeightLimit, measuredHeight);\n        }\n\n        return measuredHeight;\n    }\n\n    private measureChildFillers(): void\n    {\n        const children = this.host.widgetChildren;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n            let loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this._measuredWidth : lopt.width;\n            let loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this._measuredHeight : lopt.height;\n\n            if (loptWidth === LayoutOptions.WRAP_CONTENT)\n            {\n                loptWidth = widget.getMeasuredWidth();\n            }\n            if (loptHeight === LayoutOptions.WRAP_CONTENT)\n            {\n                loptHeight = widget.getMeasuredHeight();\n            }\n\n            if (lopt.width === LayoutOptions.FILL_PARENT || lopt.height === LayoutOptions.FILL_PARENT)\n            {\n                widget.measure(\n                    lopt.width === LayoutOptions.FILL_PARENT ? this._measuredWidth : loptWidth,\n                    lopt.height === LayoutOptions.FILL_PARENT ? this._measuredHeight : loptHeight,\n                    MeasureMode.EXACTLY,\n                    MeasureMode.EXACTLY,\n                );\n            }\n        }\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this._measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this._measuredHeight;\n    }\n}\n","import { Widget } from './Widget';\nimport { ILayoutManager } from './layout-manager/ILayoutManager';\nimport { MeasureMode } from './IMeasurable';\nimport { FastLayout } from './layout-manager/FastLayout';\n\n/**\n * A widget group is a layout owner that can position its children according\n * to the layout given to it.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n * @example\n * ```\n * const group = new PUXI.InteractiveGroup();\n *\n * group.useLayout(new PUXI.AnchorLayout());\n *\n * group.addChild(new PUXI.Button({ text: \"Hey\" })\n *  .setLayoutOptions(\n *      new PUXI.AnchorLayoutOptions({\n *             anchorLeft: 100,\n *             anchorTop: 300,\n *             anchorRight: .4,\n *             anchorBottom: 500,\n *             horizontalAlign: PUXI.ALIGN.CENTER\n *      })\n *  )\n * )\n * ```\n */\nexport class WidgetGroup extends Widget\n{\n    public layoutMgr: ILayoutManager;// lazily initialized (via useLayout(), useDefaultLayout())\n\n    /**\n     * Will set the given layout-manager to be used for positioning child widgets.\n     *\n     * @param {PUXI.ILayoutManager} layoutMgr\n     */\n    useLayout(layoutMgr: ILayoutManager): WidgetGroup\n    {\n        if (this.layoutMgr)\n        {\n            this.layoutMgr.onDetach();\n        }\n\n        this.layoutMgr = layoutMgr;\n\n        if (layoutMgr)\n        {\n            this.layoutMgr.onAttach(this);\n        }\n\n        return this;\n    }\n\n    /**\n     * Sets the widget-recommended layout manager. By default (if not overriden by widget\n     * group class), this is a fast-layout.\n     */\n    useDefaultLayout(): void\n    {\n        this.useLayout(new FastLayout());\n    }\n\n    onMeasure(width: number, height: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        super.onMeasure(width, height, widthMode, heightMode);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onMeasure(width - this.paddingHorizontal, height - this.paddingVertical, widthMode, heightMode);\n\n        this._measuredWidth = Math.max(this.measuredWidth, this.layoutMgr.getMeasuredWidth());\n        this._measuredHeight = Math.max(this.measuredHeight, this.layoutMgr.getMeasuredHeight());\n    }\n\n    onLayout(l: number, t: number, r: number, b: number, dirty = true): void\n    {\n        super.onLayout(l, t, r, b, dirty);\n\n        if (this.widgetChildren.length === 0)\n        {\n            return;\n        }\n        if (!this.layoutMgr)\n        {\n            this.useDefaultLayout();\n        }\n\n        this.layoutMgr.onLayout();// layoutMgr is attached to this\n    }\n}\n","import { WidgetGroup } from './WidgetGroup';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An interactive container.\n *\n * @class\n * @extends PUXI.WidgetGroup\n * @memberof PUXI\n */\nexport class InteractiveGroup extends WidgetGroup\n{\n    private hitArea: PIXI.Rectangle;\n\n    constructor()\n    {\n        super();\n        this.hitArea = new PIXI.Rectangle();\n        this.insetContainer.hitArea = this.hitArea;\n    }\n\n    update(): void\n    {\n        super.update();\n    }\n\n    layout(l: number, t: number, r: number, b: number, dirty: boolean): void\n    {\n        super.layout(l, t, r, b, dirty);\n\n        this.hitArea.width = this.width;\n        this.hitArea.height = this.height;\n    }\n}\n\n","import * as PIXI from 'pixi.js';\nimport { TabGroup } from './ctl/FocusController';\nimport { InteractiveGroup } from './InteractiveGroup';\n\n/**\n * @namespace PUXI\n * @interface\n * @property {PIXI.Container}[background]\n * @property {number}[tabIndex]\n * @property {PUXI.TabGroup}[tabGroup]\n */\nexport interface IFocusableOptions\n{\n    background?: PIXI.Container;\n    tabIndex?: number;\n    tabGroup?: any;\n}\n\n/**\n * Represents a view that can gain or loose focus. It is primarily subclassed by\n * input/form widgets.\n *\n * Generally, it is a good idea not use layouts on these types of widgets.\n *\n * @class\n * @extends PUXI.Widget\n * @memberof PUXI\n */\nexport abstract class FocusableWidget extends InteractiveGroup\n{\n    _isFocused: boolean;\n    _isMousePressed: boolean;\n\n    tabIndex: number;\n    tabGroup: TabGroup;\n\n    /**\n     * @param {PUXI.IInputBaseOptions} options\n     * @param {PIXI.Container}[options.background]\n     * @param {number}[options.tabIndex]\n     * @param {any}[options.tabGroup]\n     */\n    constructor(options: IFocusableOptions = {})\n    {\n        super();\n\n        if (options.background)\n        {\n            super.setBackground(options.background);\n        }\n\n        // Prevents double focusing/blurring.\n        this._isFocused = false;\n\n        // Used to lose focus when mouse-down outside widget.\n        this._isMousePressed = false;\n\n        this.interactive = true;\n\n        /**\n         * @member {number}\n         * @readonly\n         */\n        this.tabIndex = options.tabIndex;\n\n        /**\n         * The name of the tab group in which this widget's focus will move on\n         * pressing tab.\n         * @member {PUXI.TabGroup}\n         * @readonly\n         */\n        this.tabGroup = options.tabGroup;\n\n        this.insetContainer.on('pointerdown', () =>\n        {\n            this.focus();\n            this._isMousePressed = true;\n        });\n\n        this.insetContainer.on('pointerup', () => { this._isMousePressed = false; });\n        this.insetContainer.on('pointerupoutside', () => { this._isMousePressed = false; });\n    }\n\n    /**\n     * Brings this widget into focus.\n     */\n    focus(): void\n    {\n        if (this.isFocused)\n        {\n            return;\n        }\n\n        this.stage.focusController.notifyFocus(this);\n\n        this._isFocused = true;\n        this.bindEvents();\n\n        this.emit('focusChanged', true);\n        this.emit('focus');\n    }\n\n    /**\n     * Brings this widget out of focus.\n     */\n    blur(): void\n    {\n        if (!this._isFocused)\n        {\n            return;\n        }\n\n        this.stage.focusController.notifyBlur();\n\n        this._isFocused = false;\n        this.clearEvents();\n\n        this.emit('focusChanged', false);\n        this.emit('blur');\n    }\n\n    /**\n     * Whether this widget is in focus.\n     * @member {boolean}\n     * @readonly\n     */\n    get isFocused(): boolean\n    {\n        return this._isFocused;\n    }\n\n    private bindEvents = (): void =>\n    {\n        this.stage.on('pointerdown', this.onDocumentPointerDownImpl);\n        document.addEventListener('keydown', this.onKeyDownImpl);\n    };\n\n    private clearEvents = (): void =>\n    {\n        this.stage.off('pointerdown', this.onDocumentPointerDownImpl);\n        document.removeEventListener('keydown', this.onKeyDownImpl);\n    };\n\n    protected onKeyDownImpl = (e: any): void =>\n    {\n        const focusCtl = this.stage.focusController;\n\n        if (e.which === 9 && focusCtl.useTab)\n        {\n            focusCtl.onTab();\n            e.preventDefault();\n        }\n        else if (e.which === 38 && focusCtl.useBack)\n        {\n            focusCtl.onBack();\n            e.preventDefault();\n        }\n        else if (e.which === 40 && focusCtl.useForward)\n        {\n            focusCtl.onForward();\n            e.preventDefault();\n        }\n\n        this.emit('keydown');\n    };\n\n    private onDocumentPointerDownImpl = (): void =>\n    {\n        if (!this._isMousePressed)\n        {\n            this.blur();\n        }\n    };\n\n    initialize(): void\n    {\n        super.initialize();\n        this.stage.focusController.in(this, this.tabIndex, this.tabGroup);\n    }\n\n    /**\n     * Fired when the widget comes into focus.\n     * @event focus\n     */\n\n    /**\n     * Fired when the widget goes out of focus.\n     * @event blur\n     */\n\n    /**\n     * Fired when the widgets comes into or goes out of focus.\n     * @event focusChanged\n     * @param {boolean} isFocused - whether the widget is in focus.\n     */\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A static text widget. It cannot retain children.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class TextWidget extends Widget\n{\n    private textDisplay: PIXI.Text;\n\n    /**\n     * @param {string} text - text content\n     * @param {PIXI.TextStyle} textStyle - styled used for text\n     */\n    constructor(text: string, textStyle: PIXI.TextStyle)\n    {\n        super();\n\n        this.textDisplay = new PIXI.Text(text, textStyle);\n        this.contentContainer.addChild(this.textDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.textDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.textDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    get value(): string\n    {\n        return this.textDisplay.text;\n    }\n    set value(val: string)\n    {\n        this.textDisplay.text = val;\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(val: string)\n    {\n        this.value = val;\n    }\n}\n","class EaseBase\n{\n    getPosition(p)\n    {\n        return p;\n    }\n}\n\nexport { EaseBase };\n","import { EaseBase } from './EaseBase';\n\nfunction ExponentialEase(power, easeIn, easeOut)\n{\n    const pow = power;\n    const t = easeIn && easeOut ? 3 : easeOut ? 1 : 2;\n\n    this.getPosition = function (p)\n    {\n        let r = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\n        if (pow === 1)\n        {\n            r *= r;\n        }\n        else if (pow === 2)\n        {\n            r *= r * r;\n        }\n        else if (pow === 3)\n        {\n            r *= r * r * r;\n        }\n        else if (pow === 4)\n        {\n            r *= r * r * r * r;\n        }\n\n        return (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n    };\n}\n\nExponentialEase.prototype = Object.create(EaseBase.prototype);\nExponentialEase.prototype.constructor = ExponentialEase;\n\nexport { ExponentialEase };\n\n","import { EaseBase } from './EaseBase';\nimport { ExponentialEase } from './ExponentialEase';\n\nconst Ease = {};\n\nconst HALF_PI = Math.PI * 0.5;\n\nexport function create(fn)\n{\n    const e = Object.create(EaseBase.prototype);\n\n    e.getPosition = fn;\n\n    return e;\n}\n\nconst Linear = new EaseBase();\n\n// Liear\nEase.Linear = Linear;\n\n// Exponetial Eases\nexport function wrapEase(easeInFunction, easeOutFunction, easeInOutFunction)\n{\n    return {\n        easeIn: easeInFunction,\n        easeOut: easeOutFunction,\n        easeInOut: easeInOutFunction,\n    };\n}\n\nEase.Power0 = {\n    easeNone: Linear,\n};\n\nEase.Power1 = Ease.Quad = wrapEase(\n    new ExponentialEase(1, 1, 0),\n    new ExponentialEase(1, 0, 1),\n    new ExponentialEase(1, 1, 1));\n\nEase.Power2 = Ease.Cubic = wrapEase(\n    new ExponentialEase(2, 1, 0),\n    new ExponentialEase(2, 0, 1),\n    new ExponentialEase(2, 1, 1));\n\nEase.Power3 = Ease.Quart = wrapEase(\n    new ExponentialEase(3, 1, 0),\n    new ExponentialEase(3, 0, 1),\n    new ExponentialEase(3, 1, 1));\n\nEase.Power4 = Ease.Quint = wrapEase(\n    new ExponentialEase(4, 1, 0),\n    new ExponentialEase(4, 0, 1),\n    new ExponentialEase(4, 1, 1));\n\n// Bounce\nEase.Bounce = {\n    BounceIn: create(function (p)\n    {\n        if ((p = 1 - p) < 1 / 2.75)\n        {\n            return 1 - (7.5625 * p * p);\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n        }\n\n        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n    }),\n    BounceOut: create(function (p)\n    {\n        if (p < 1 / 2.75)\n        {\n            return 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            return 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            return 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n\n        return 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n    }),\n    BounceInOut: create(function (p)\n    {\n        const invert = (p < 0.5);\n\n        if (invert)\n        {\n            p = 1 - (p * 2);\n        }\n        else\n        {\n            p = (p * 2) - 1;\n        }\n        if (p < 1 / 2.75)\n        {\n            p = 7.5625 * p * p;\n        }\n        else if (p < 2 / 2.75)\n        {\n            p = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n        }\n        else if (p < 2.5 / 2.75)\n        {\n            p = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n        }\n        else\n        {\n            p = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n        }\n\n        return invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n    }),\n};\n\n// Circ\nEase.Circ = {\n    CircIn: create(function (p)\n    {\n        return -(Math.sqrt(1 - (p * p)) - 1);\n    }),\n    CircOut: create(function (p)\n    {\n        return Math.sqrt(1 - (p = p - 1) * p);\n    }),\n    CircInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n    }),\n};\n\n// Expo\nEase.Expo = {\n    ExpoIn: create(function (p)\n    {\n        return Math.pow(2, 10 * (p - 1)) - 0.001;\n    }),\n    ExpoOut: create(function (p)\n    {\n        return 1 - Math.pow(2, -10 * p);\n    }),\n    ExpoInOut: create(function (p)\n    {\n        return ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n    }),\n};\n\n// Sine\nEase.Sine = {\n    SineIn: create(function (p)\n    {\n        return -Math.cos(p * HALF_PI) + 1;\n    }),\n    SineOut: create(function (p)\n    {\n        return Math.sin(p * HALF_PI);\n    }),\n    SineInOut: create(function (p)\n    {\n        return -0.5 * (Math.cos(Math.PI * p) - 1);\n    }),\n};\n\nexport { Ease };\n","export const Helpers = {\n    Lerp(start: number, stop: number, amt: number): number\n    {\n        if (amt > 1) amt = 1;\n        else if (amt < 0) amt = 0;\n\n        return start + (stop - start) * amt;\n    },\n    Round(number: number, decimals: number): number\n    {\n        const pow = Math.pow(10, decimals);\n\n        return Math.round(number * pow) / pow;\n    },\n    componentToHex(c: any): string\n    {\n        const hex = c.toString(16);\n\n        return hex.length == 1 ? `0${hex}` : hex;\n    },\n    rgbToHex(r: number, g: number, b: number): string\n    {\n        return `#${this.componentToHex(r)}${this.componentToHex(g)}${this.componentToHex(b)}`;\n    },\n    rgbToNumber(r: number, g: number, b: number): number\n    {\n        return r * 65536 + g * 256 + b;\n    },\n    numberToRgb(c: number): any\n    {\n        return {\n            r: Math.floor(c / (256 * 256)),\n            g: Math.floor(c / 256) % 256,\n            b: c % 256,\n        };\n    },\n    hexToRgb(hex: any): any\n    {\n        if (hex === null)\n        {\n            hex = 0xffffff;\n        }\n        if (!isNaN(hex))\n        {\n            return this.numberToRgb(hex);\n        }\n\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n\n        hex = hex.replace(shorthandRegex, function (m, r, g, b)\n        {\n            return r + r + g + g + b + b;\n        });\n\n        const result = (/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i).exec(hex);\n\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16),\n        } : null;\n    },\n};\n","import { Widget } from './Widget';\nimport { DragManager } from './event/DragManager';\nimport { Tween } from './Tween';\nimport { Ease } from './Ease/Ease';\nimport { Helpers } from './Helpers';\nimport { Sprite } from './Sprite';\nimport * as PIXI from 'pixi.js';\nimport { MeasureMode } from './IMeasurable';\n\nexport interface ISliderOptions\n{\n    track?: PIXI.Container | Widget;\n    handle?: PIXI.Container | Widget;\n    fill?: Sprite;\n    orientation?: number;\n    value?: number;\n    minValue?: number;\n    maxValue?: number;\n    decimals?: number;\n    onValueChange?: () => void;\n    onValueChanging?: () => void;\n}\n\n/**\n * @memberof PUXI\n * @interface ISliderOptions\n * @property {PIXI.Container}[track]\n * @property {PIXI.Container}[handle]\n */\n\n/**\n * These options are used to configure a `PUXI.Slider`.\n *\n * @memberof PUXI\n * @interface ISliderOptions\n * @property {PIXI.Container}[track]\n * @property {PIXI.Container}[fill]\n * @property {boolean}[vertical]\n * @property {number}[value]\n * @property {number}[minValue]\n * @property {number}[maxValue]\n * @property {number}[decimals]\n * @property {Function}[onValueChange]\n * @property {Function}[onValueChanging]\n */\n\n/**\n * A slider is a form of input to set a variable to a value in a continuous\n * range. It cannot have its own children.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class Slider extends Widget\n{\n    protected _disabled: boolean;\n\n    track: Widget;\n    handle: Widget;\n    fill: Sprite;\n\n    public readonly orientation: number;\n\n    protected percentValue: number;\n    protected _minValue: number;\n    protected _maxValue: number;\n\n    private _localCursor: PIXI.Point;\n\n    decimals: number;\n    vertical: boolean;\n\n    _lastChange: number;\n    _lastChanging: number;\n\n    onValueChange: (n: number) => void;\n    onValueChanging: (n: number) => void;\n\n    /**\n     * @param options {Object} Slider settings\n     * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the slider track\n     * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as slider handle\n     * @param [options.fill=null] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used for slider fill\n     * @param [options.vertical=false] {boolean} Direction of the slider\n     * @param [options.value=0] {number} value of the slider\n     * @param [options.minValue=0] {number} minimum value\n     * @param [options.maxValue=100] {number} max value\n     * @param [options.decimals=0] {boolean} the decimal precision (use negative to round tens and hundreds)\n     * @param [options.onValueChange=null] {callback} Callback when the value has changed\n     * @param [options.onValueChanging=null] {callback} Callback while the value is changing\n     */\n    constructor(options: ISliderOptions)\n    {\n        super();\n\n        /**\n         * The value expressed as a percentage from min. to max. This will always\n         * be between 0 and 1.\n         *\n         * The actual value is: `this.minValue + this.percentValue * (this.maxValue - this.minValue`).\n         *\n         * @member {number}\n         */\n        this.percentValue = 0;\n        this._disabled = false;\n\n        this.fill = options.fill || null;\n        this.percentValue = this._minValue;\n        this._minValue = options.minValue || 0;\n        this._maxValue = options.maxValue || 100;\n        this.decimals = options.decimals || 0;\n        this.orientation = options.orientation || Slider.HORIZONTAL;\n        this.onValueChange = options.onValueChange || null;\n        this.onValueChanging = options.onValueChanging || null;\n        this.value = options.value || 50;\n\n        // set options\n        this.track = Widget.fromContent(options.track\n            || (this.orientation === Slider.HORIZONTAL\n                ? Slider.DEFAULT_HORIZONTAL_TRACK.clone()\n                : Slider.DEFAULT_VERTICAL_TRACK.clone()));\n        this.handle = Widget.fromContent(options.handle || Slider.DEFAULT_HANDLE.clone());\n\n        this.addChild(this.track, this.handle);// initialize(), update() usage\n\n        this._localCursor = new PIXI.Point();\n        this.handle.contentContainer.buttonMode = true;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        let startValue = 0;\n        let trackSize;\n\n        const triggerValueChange = (): void =>\n        {\n            this.emit('change', this.value);\n\n            if (this._lastChange != this.value)\n            {\n                this._lastChange = this.value;\n\n                if (typeof this.onValueChange === 'function')\n                {\n                    this.onValueChange(this.value);\n                }\n            }\n        };\n\n        const triggerValueChanging = (): void =>\n        {\n            this.emit('changing', this.value);\n\n            if (this._lastChanging != this.value)\n            {\n                this._lastChanging = this.value;\n\n                if (typeof this.onValueChanging === 'function')\n                {\n                    this.onValueChanging(this.value);\n                }\n            }\n        };\n\n        const updatePositionToMouse = (mousePosition, soft): void =>\n        {\n            this.percentValue = this.getValueAtPhysicalPosition(mousePosition);\n            this.layoutHandle();\n            triggerValueChanging();\n        };\n\n        // Handles dragging\n        const handleDrag: DragManager = this.handle.eventBroker.dnd as DragManager;\n\n        handleDrag.onPress = (event: PIXI.interaction.InteractionEvent): void =>\n        {\n            event.stopPropagation();\n        };\n\n        handleDrag.onDragStart = (): void =>\n        {\n            startValue = this.percentValue;\n            trackSize = this.orientation === Slider.HORIZONTAL\n                ? this.track.width\n                : this.track.height;\n        };\n\n        handleDrag.onDragMove = (event, offset: PIXI.Point): void =>\n        {\n            this.percentValue = Math.max(0, Math.min(\n                1,\n                startValue + ((this.orientation === Slider.HORIZONTAL ? offset.x : offset.y) / trackSize\n                )));\n\n            triggerValueChanging();\n            this.layoutHandle();\n        };\n\n        handleDrag.onDragEnd = (): void =>\n        {\n            triggerValueChange();\n            this.layoutHandle();\n        };\n\n        // Bar pressing/dragging\n        const trackDrag: DragManager = this.track.eventBroker.dnd as DragManager;\n\n        trackDrag.onPress = (event, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                updatePositionToMouse(event.data.global, true);\n            }\n\n            event.stopPropagation();\n        };\n\n        trackDrag.onDragMove = (event: PIXI.interaction.InteractionEvent): void =>\n        {\n            updatePositionToMouse(event.data.global, false);\n        };\n\n        trackDrag.onDragEnd = (): void =>\n        {\n            triggerValueChange();\n        };\n\n        this.layoutHandle();\n    }\n\n    get value(): number\n    {\n        return Helpers.Round(Helpers.Lerp(this._minValue, this._maxValue, this.percentValue), this.decimals);\n    }\n    set value(val: number)\n    {\n        if (val === this.value)\n        {\n            return;\n        }\n        if (isNaN(val))\n        {\n            throw new Error('Cannot use NaN as a value');\n        }\n\n        this.percentValue = (Math.max(this._minValue, Math.min(this._maxValue, val)) - this._minValue) / (this._maxValue - this._minValue);\n\n        if (typeof this.onValueChange === 'function')\n        {\n            this.onValueChange(this.value);\n        }\n        if (typeof this.onValueChanging === 'function')\n        {\n            this.onValueChanging(this.value);\n        }\n\n        if (this.handle && this.initialized)\n        {\n            this.layoutHandle();\n        }\n    }\n\n    get minValue(): number\n    {\n        return this._minValue;\n    }\n    set minValue(val: number)\n    {\n        this._minValue = val;\n        this.update();\n    }\n\n    get maxValue(): number\n    {\n        return this._maxValue;\n    }\n    set maxValue(val: number)\n    {\n        this._maxValue = val;\n        this.update();\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (val !== this._disabled)\n        {\n            this._disabled = val;\n            this.handle.contentContainer.buttonMode = !val;\n            this.handle.contentContainer.interactive = !val;\n            this.track.contentContainer.interactive = !val;\n        }\n    }\n\n    /**\n     * @protected\n     * @returns the amount of the freedom that handle has in physical units, i.e. pixels. This\n     *      is the width of the track minus the handle's size.\n     */\n    protected getPhysicalRange(): number\n    {\n        return this.orientation === Slider.HORIZONTAL\n            ? this.contentWidth - this.handle.getMeasuredWidth()\n            : this.contentHeight - this.handle.getMeasuredHeight();\n    }\n\n    /**\n     * @protected\n     * @param {PIXI.Point} cursor\n     * @returns the value of the slider if the handle's center were (globally)\n     *      positioned at the given point.\n     */\n    protected getValueAtPhysicalPosition(cursor: PIXI.Point): number\n    {\n        // Transform position\n        const localCursor = this.contentContainer.toLocal(cursor, null, this._localCursor, true);\n\n        let offset: number;\n        let range: number;\n\n        if (this.orientation === Slider.HORIZONTAL)\n        {\n            const handleWidth = this.handle.getMeasuredWidth();\n\n            offset = localCursor.x - this.paddingLeft - (handleWidth / 4);\n            range = this.contentWidth - handleWidth;\n        }\n        else\n        {\n            const handleHeight = this.handle.getMeasuredHeight();\n\n            offset = localCursor.y - this.paddingTop - (handleHeight / 4);\n            range = this.contentHeight - handleHeight;\n        }\n\n        return offset / range;\n    }\n\n    /**\n     * Re-positions the handle. This should be called after `_value` has been changed.\n     */\n    protected layoutHandle(): void\n    {\n        const handle = this.handle;\n\n        const handleWidth = handle.getMeasuredWidth();\n        const handleHeight = handle.getMeasuredHeight();\n        let width = this.width - this.paddingHorizontal;\n        let height = this.height - this.paddingVertical;\n\n        let handleX: number;\n        let handleY: number;\n\n        if (this.orientation === Slider.HORIZONTAL)\n        {\n            width -= handleWidth;\n\n            handleY = (height - handleHeight) / 2;\n            handleX = (width * this.percentValue);\n        }\n        else\n        {\n            height -= handleHeight;\n\n            handleX = (width - handleWidth) / 2;\n            handleY = (height * this.percentValue);\n        }\n\n        handle.layout(handleX, handleY, handleX + handleWidth, handleY + handleHeight);\n    }\n\n    /**\n     * Slider measures itself using the track's natural dimensions in its non-oriented\n     * direction. The oriented direction will be the equal the range's size times\n     * the track's resolution.\n     *\n     * @param width\n     * @param height\n     * @param widthMode\n     * @param heightMode\n     */\n    onMeasure(width: number, height: number, widthMode: number, heightMode: number): void\n    {\n        const naturalWidth = ((this.orientation === Slider.HORIZONTAL)\n            ? this._maxValue - this._minValue\n            : Math.max(this.handle.contentContainer.width, this.track.contentContainer.width))\n                + this.paddingHorizontal;\n        const naturalHeight = ((this.orientation === Slider.VERTICAL)\n            ? this._maxValue - this._minValue\n            : Math.max(this.handle.contentContainer.height, this.track.contentContainer.height))\n                + this.paddingVertical;\n\n        switch (widthMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredWidth = width;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredWidth = naturalWidth;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredWidth = Math.min(width, naturalWidth);\n                break;\n        }\n\n        switch (heightMode)\n        {\n            case MeasureMode.EXACTLY:\n                this._measuredHeight = height;\n                break;\n            case MeasureMode.UNBOUNDED:\n                this._measuredHeight = naturalHeight;\n                break;\n            case MeasureMode.AT_MOST:\n                this._measuredHeight = Math.min(height, naturalHeight);\n                break;\n        }\n    }\n\n    /**\n     * `Slider` lays the track to fill all of its width and height. The handle is aligned\n     * in the middle in the non-oriented direction.\n     *\n     * @param l\n     * @param t\n     * @param r\n     * @param b\n     * @param dirty\n     * @override\n     */\n    onLayout(l: number, t: number, r: number, b: number, dirty: boolean): void\n    {\n        super.onLayout(l, t, r, b, dirty);\n        const { handle, track } = this;\n\n        track.layout(0, 0, this.width - this.paddingHorizontal, this.height - this.paddingVertical);\n\n        // Layout doesn't scale the widget\n        // TODO: Create a Track widget, this won't work for custom tracks that don't wanna\n        // scale (and it looks ugly.)\n        track.insetContainer.width = track.width;\n        track.insetContainer.height = track.height;\n\n        handle.measure(this.width, this.height, MeasureMode.AT_MOST, MeasureMode.AT_MOST);\n\n        this.layoutHandle();\n    }\n\n    /**\n     * The default track for horizontally oriented sliders.\n     * @static\n     */\n    static DEFAULT_HORIZONTAL_TRACK: PIXI.Graphics = new PIXI.Graphics()\n        .beginFill(0xffffff, 1)\n        .drawRect(0, 0, 16, 16) // natural width & height = 16\n        .endFill()\n        .lineStyle(1, 0x000000, 0.7, 1, true) // draw line in middle\n        .moveTo(1, 8)\n        .lineTo(15, 8);\n\n    /**\n     * The default track for vertically oriented sliders.\n     * @static\n     */\n    static DEFAULT_VERTICAL_TRACK: PIXI.Graphics = new PIXI.Graphics()\n        .beginFill(0xffffff, 1)\n        .drawRect(0, 0, 16, 16) // natural width & height = 16\n        .endFill()\n        .lineStyle(1, 0x000000, 0.7, 1, true) // draw line in middle\n        .moveTo(8, 1)\n        .lineTo(8, 15);\n\n    /**\n     * @static\n     */\n    static DEFAULT_HANDLE: PIXI.Graphics = new PIXI.Graphics()\n        .beginFill(0x000000)\n        .drawCircle(16, 16, 8)\n        .endFill()\n        .beginFill(0x000000, 0.5)\n        .drawCircle(16, 16, 16)\n        .endFill();\n    /**\n     * Horizontal orientation\n     * @static\n     */\n    static HORIZONTAL = 0xff5;\n\n    /**\n     * Vertical orientation\n     * @static\n     */\n    static VERTICAL = 0xffe;\n}\n","﻿import { Helpers } from './Helpers';\nconst _tweenItemCache = [];\nconst _callbackItemCache = [];\nconst _tweenObjects = {};\nconst _activeTweenObjects = {};\nlet _currentId = 1;\n\nclass TweenObject<T>\n{\n    public object: T;\n    public tweens: Record<string, T>;\n    public active: boolean;\n    public onUpdate: () => void;\n\n    constructor(object: T)\n    {\n        this.object = object;\n        this.tweens = {};\n        this.active = false;\n        this.onUpdate = null;\n    }\n}\n\nclass CallbackItem\n{\n    key: string;\n    obj: any;\n    parent: any;\n    time: number;\n    callback: Function;\n    currentTime: number;\n\n    private _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.obj = null;\n        this.parent = null;\n        this.key = '';\n        this.time = 0;\n        this.callback = null;\n        this.currentTime = 0;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            this.parent.onUpdate = null;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj, callback, time): void\n    {\n        this.obj = obj.object;\n\n        if (!this.obj._currentCallbackID)\n        { this.obj._currentCallbackID = 1; }\n        else\n        { this.obj._currentCallbackID++; }\n\n        this.time = time;\n        this.parent = obj;\n        this.callback = callback;\n        this._ready = false;\n        this.key = `cb_${this.obj._currentCallbackID}`;\n        this.currentTime = 0;\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n            this.callback.call(this.parent);\n        }\n    }\n}\n\nclass TweenItem\n{\n    key: string;\n    parent: any;\n    obj: any;\n\n    from: any;\n    to: any;\n    time: number;\n    ease: any;\n    currentTime: number;\n    t: number;\n    isColor: boolean;\n    currentColor: any;\n    surfix: any;\n\n    _ready: boolean;\n\n    constructor()\n    {\n        this._ready = false;\n        this.parent = null;\n        this.obj = null;\n        this.key = '';\n        this.from = 0;\n        this.to = 0;\n        this.time = 0;\n        this.ease = 0;\n        this.currentTime = 0;\n        this.t = 0;\n        this.isColor = false;\n    }\n\n    remove(): void\n    {\n        this._ready = true;\n        delete this.parent.tweens[this.key];\n        if (!Object.keys(this.parent.tweens).length)\n        {\n            this.parent.active = false;\n            delete _activeTweenObjects[this.obj._tweenObjectId];\n        }\n    }\n\n    set(obj: any, key: string, from: any, to: any, time: number, ease: any): void\n    {\n        this.isColor = isNaN(from) && from[0] === '#' || isNaN(to) && to[0] === '#';\n        this.parent = obj;\n        this.obj = obj.object;\n        this.key = key;\n        this.surfix = getSurfix(to);\n\n        if (this.isColor)\n        {\n            this.to = Helpers.hexToRgb(to);\n            this.from = Helpers.hexToRgb(from);\n            this.currentColor = { r: this.from.r, g: this.from.g, b: this.from.b };\n        }\n        else\n        {\n            this.to = getToValue(to);\n            this.from = getFromValue(from, to, this.obj, key);\n        }\n\n        this.time = time;\n        this.currentTime = 0;\n        this.ease = ease;\n        this._ready = false;\n\n        if (!this.parent.active)\n        {\n            this.parent.active = true;\n            _activeTweenObjects[this.obj._tweenObjectId] = this.parent;\n        }\n    }\n\n    update(delta: number): void\n    {\n        this.currentTime += delta;\n        this.t = Math.min(this.currentTime, this.time) / this.time;\n        if (this.ease)\n        { this.t = this.ease.getPosition(this.t); }\n\n        if (this.isColor)\n        {\n            this.currentColor.r = Math.round(Helpers.Lerp(this.from.r, this.to.r, this.t));\n            this.currentColor.g = Math.round(Helpers.Lerp(this.from.g, this.to.g, this.t));\n            this.currentColor.b = Math.round(Helpers.Lerp(this.from.b, this.to.b, this.t));\n            this.obj[this.key] = Helpers.rgbToNumber(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        }\n        else\n        {\n            const val = Helpers.Lerp(this.from, this.to, this.t);\n\n            this.obj[this.key] = this.surfix ? val + this.surfix : val;\n        }\n\n        if (this.currentTime >= this.time)\n        {\n            this.remove();\n        }\n    }\n}\n\nconst widthKeys = ['width', 'minWidth', 'maxWidth', 'anchorLeft', 'anchorRight', 'left', 'right', 'x'];\nconst heightKeys = ['height', 'minHeight', 'maxHeight', 'anchorTop', 'anchorBottom', 'top', 'bottom', 'y'];\n\nfunction getFromValue(from, to, obj, key): number\n{\n    // both number\n    if (!isNaN(from) && !isNaN(to))\n    { return from; }\n\n    // both percentage\n    if (isNaN(from) && isNaN(to) && from.indexOf('%') !== -1 && to.indexOf('%') !== -1)\n    { return parseFloat(from.replace('%', '')); }\n\n    // convert from to px\n    if (isNaN(from) && !isNaN(to) && from.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return obj.parent._width * (parseFloat(from.replace('%', '')) * 0.01); }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return obj.parent._height * (parseFloat(from.replace('%', '')) * 0.01); }\n\n        return 0;\n    }\n\n    // convert from to percentage\n    if (!isNaN(from) && isNaN(to) && to.indexOf('%') !== -1)\n    {\n        if (widthKeys.indexOf(key) !== -1)\n        { return from / obj.parent._width * 100; }\n        else if (heightKeys.indexOf(key) !== -1)\n        { return from / obj.parent._height * 100; }\n\n        return 0;\n    }\n\n    return 0;\n}\n\nfunction getSurfix(to: number | string): any\n{\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return '%'; }\n}\n\nfunction getToValue(to: number | string): any\n{\n    if (!isNaN(to))\n    { return to; }\n    if (isNaN(to) && to.indexOf('%') !== -1)\n    { return parseFloat(to.replace('%', '')); }\n}\n\nfunction getObject(obj: any): any\n{\n    if (!obj._tweenObjectId)\n    {\n        obj._tweenObjectId = _currentId;\n        _currentId++;\n    }\n    let object = _tweenObjects[obj._tweenObjectId];\n\n    if (!object)\n    {\n        object = _tweenObjects[obj._tweenObjectId] = new TweenObject(obj);\n    }\n\n    return object;\n}\n\nfunction getTweenItem(): TweenItem\n{\n    for (let i = 0; i < _tweenItemCache.length; i++)\n    {\n        if (_tweenItemCache[i]._ready)\n        { return _tweenItemCache[i]; }\n    }\n\n    const tween = new TweenItem();\n\n    _tweenItemCache.push(tween);\n\n    return tween;\n}\n\nfunction getCallbackItem(): CallbackItem\n{\n    for (let i = 0; i < _callbackItemCache.length; i++)\n    {\n        if (_callbackItemCache[i]._ready)\n        { return _callbackItemCache[i]; }\n    }\n\n    const cb = new CallbackItem();\n\n    _callbackItemCache.push(cb);\n\n    return cb;\n}\n\nexport const Tween = {\n    to(obj, time, params, ease?)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] === obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, obj[key], params[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    from(obj, time, params, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in params)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, params[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = params[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = params[key] == obj[key];\n\n                if (typeof obj[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    { object.tweens[key] = getTweenItem(); }\n                    object.tweens[key].set(object, key, params[key], obj[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, params);\n    },\n    fromTo(obj, time, paramsFrom, paramsTo, ease)\n    {\n        const object = getObject(obj);\n        let onUpdate = null;\n\n        for (const key in paramsTo)\n        {\n            if (key === 'onComplete')\n            {\n                const cb = getCallbackItem();\n\n                cb.set(object, paramsTo[key], time);\n                object.tweens[cb.key] = cb;\n                continue;\n            }\n\n            if (key === 'onUpdate')\n            {\n                onUpdate = paramsTo[key];\n                continue;\n            }\n\n            if (time)\n            {\n                const match = paramsFrom[key] == paramsTo[key];\n\n                if (typeof obj[key] === 'undefined' || typeof paramsFrom[key] === 'undefined') continue;\n\n                if (match)\n                {\n                    if (object.tweens[key]) object.tweens[key].remove();\n                    obj[key] = paramsTo[key];\n                }\n                else\n                {\n                    if (!object.tweens[key])\n                    {\n                        object.tweens[key] = getTweenItem();\n                    }\n                    object.tweens[key].set(object, key, paramsFrom[key], paramsTo[key], time, ease);\n                }\n            }\n        }\n\n        if (time)\n        { object.onUpdate = onUpdate; }\n        else this.set(obj, paramsTo);\n    },\n    set(obj, params)\n    {\n        const object = getObject(obj);\n\n        for (const key in params)\n        {\n            if (typeof obj[key] === 'undefined') continue;\n            if (object.tweens[key]) object.tweens[key].remove();\n            obj[key] = params[key];\n        }\n    },\n    _update(delta)\n    {\n        for (const id in _activeTweenObjects)\n        {\n            const object = _activeTweenObjects[id];\n\n            for (const key in object.tweens)\n            {\n                object.tweens[key].update(delta);\n            }\n            if (object.onUpdate)\n            {\n                object.onUpdate.call(object.object, delta);\n            }\n        }\n    },\n};\n","import { Slider, ISliderOptions } from './Slider';\nimport { Tween } from './Tween';\nimport { Sprite } from './Sprite';\nimport { ScrollWidget } from './ScrollWidget';\nimport * as PIXI from 'pixi.js';\n\ninterface IScrollBarOptions extends ISliderOptions\n{\n    track?: Sprite;\n    handle?: Sprite;\n    scrollingContainer: ScrollWidget;\n    orientation: number;\n    autohide?: boolean;\n}\n\n/**\n * @memberof PUXI\n * @interface IScrollBarOptions\n * @property {PUXI.Sprite} track\n * @property {PUXI.Sprite} handle\n */\n\n/**\n * An UI scrollbar to control a ScrollingContainer\n *\n * @class\n * @extends PUXI.Slider\n * @memberof PUXI\n * @param options {Object} ScrollBar settings\n * @param options.track {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)}  Any type of UIOBject, will be used for the scrollbar track\n * @param options.handle {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as scrollbar handle\n * @param options.scrollingContainer {PIXI.UI.ScrollingContainer} The container to control\n * @param [options.vertical=false] {boolean} Direction of the scrollbar\n * @param [options.autohide=false] {boolean} Hides the scrollbar when not needed\n */\nexport class ScrollBar extends Slider\n{\n    scrollingContainer: ScrollWidget;\n    autohide: boolean;\n    _hidden: boolean;\n\n    constructor(options: IScrollBarOptions)\n    {\n        super({\n            track: options.track || ScrollBar.DEFAULT_TRACK.clone(),\n            handle: options.handle || ScrollBar.DEFAULT_HANDLE.clone(),\n            fill: null,\n            orientation: options.orientation,\n            minValue: 0,\n            maxValue: 1,\n        });\n\n        this.scrollingContainer = options.scrollingContainer;\n        this.autohide = options.autohide;\n        this._hidden = false;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.decimals = 3; // up decimals to trigger ValueChanging more often\n\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.on('changing', (): void =>\n        {\n            this.scrollingContainer.forcePctPosition(\n                this.orientation === Slider.HORIZONTAL ? 'x' : 'y',\n                this.percentValue);\n        });\n\n        this.on('change', (): void =>\n        {\n            this.scrollingContainer.setScrollPosition();\n        });\n    }\n\n    toggleHidden(hidden: boolean): void\n    {\n        if (this.autohide)\n        {\n            if (hidden && !this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 0 });\n                this._hidden = true;\n            }\n            else if (!hidden && this._hidden)\n            {\n                Tween.to(this, 0.2, { alpha: 1 });\n                this._hidden = false;\n            }\n        }\n    }\n\n    /**\n     * @static\n     */\n    static DEFAULT_TRACK = new PIXI.Graphics()\n        .beginFill(0xffffff)\n        .drawRect(0, 0, 8, 8)\n        .endFill();\n\n    /**\n     * @static\n     */\n    static DEFAULT_HANDLE: PIXI.Graphics = new PIXI.Graphics()\n        .beginFill(0x000000)\n        .drawCircle(8, 8, 4)\n        .endFill()\n        .beginFill(0x000000, 0.5)\n        .drawCircle(8, 8, 8)\n        .endFill();\n}\n\n","import { ILayoutManager } from './ILayoutManager';\nimport { WidgetGroup } from '../WidgetGroup';\nimport { Widget } from '../Widget';\nimport { LayoutOptions, ALIGN } from '../layout-options';\nimport { BorderLayoutOptions } from '../layout-options/BorderLayoutOptions';\nimport { MeasureMode } from '../IMeasurable';\n\nconst {\n    REGION_LEFT,\n    REGION_TOP,\n    REGION_RIGHT,\n    REGION_BOTTOM,\n    REGION_CENTER,\n} = BorderLayoutOptions;\n\nconst {\n    FILL_PARENT,\n} = LayoutOptions;\n\nconst {\n    EXACTLY,\n    AT_MOST,\n} = MeasureMode;\n\n/**\n * `PUXI.BorderLayout` is used in conjunction with `PUXI.BorderLayoutOptions`.\n *\n * This layout guarantees that the \"center\" region will always be in the center of\n * the widget-group.\n *\n * WARNING: This layout may have some bugs in edge cases that haven't been reported.\n *\n * @memberof PUXI\n * @class\n * @implements PUXI.ILayoutManager\n */\nexport class BorderLayout implements ILayoutManager\n{\n    protected host: WidgetGroup;\n\n    protected leftWidgets: Widget[];\n    protected topWidgets: Widget[];\n    protected rightWidgets: Widget[];\n    protected bottomWidgets: Widget[];\n    protected centerWidgets: Widget[];\n\n    protected measuredLeftWidth: number;\n    protected measuredRightWidth: number;\n    protected measuredCenterWidth: number;\n    protected measuredWidth: number;\n\n    protected measuredTopHeight: number;\n    protected measuredBottomHeight: number;\n    protected measuredCenterHeight: number;\n    protected measuredHeight: number;\n\n    constructor()\n    {\n        this.leftWidgets = [];\n        this.topWidgets = [];\n        this.rightWidgets = [];\n        this.bottomWidgets = [];\n        this.centerWidgets = [];\n    }\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n        this.clearMeasureCache();\n        this.clearRegions();\n    }\n\n    onLayout(): void\n    {\n        this.layoutChildren(\n            this.leftWidgets,\n            0,\n            this.measuredTopHeight,\n            this.measuredLeftWidth,\n            this.measuredCenterHeight);\n        this.layoutChildren(this.topWidgets, 0, 0, this.measuredWidth, this.measuredTopHeight);\n        this.layoutChildren(\n            this.rightWidgets,\n            this.measuredWidth - this.measuredRightWidth,\n            this.measuredTopHeight,\n            this.measuredRightWidth,\n            this.measuredCenterHeight,\n        );\n        this.layoutChildren(\n            this.bottomWidgets,\n            0,\n            this.measuredTopHeight + this.measuredCenterHeight,\n            this.measuredWidth,\n            this.measuredBottomHeight,\n        );\n        this.layoutChildren(\n            this.centerWidgets,\n            this.measuredLeftWidth,\n            this.measuredTopHeight,\n            this.measuredCenterWidth,\n            this.measuredCenterHeight,\n        );\n    }\n\n    layoutChildren(\n        widgets: Widget[],\n        regionX: number,\n        regionY: number,\n        regionWidth: number,\n        regionHeight: number,\n    ): void\n    {\n        for (let i = 0, j = widgets.length; i < j; i++)\n        {\n            const widget = widgets[i];\n\n            let x = 0;\n            let y = 0;\n\n            switch ((widget.layoutOptions as BorderLayoutOptions)?.horizontalAlign)\n            {\n                case ALIGN.CENTER: x = (regionWidth - widget.getMeasuredWidth()) / 2; break;\n                case ALIGN.RIGHT: x = regionWidth - widget.getMeasuredWidth(); break;\n                default: x = 0; break;\n            }\n\n            switch ((widget.layoutOptions as BorderLayoutOptions)?.verticalAlign)\n            {\n                case ALIGN.CENTER: y = (regionHeight - widget.getMeasuredHeight()) / 2; break;\n                case ALIGN.BOTTOM: y = regionHeight - widget.getMeasuredHeight(); break;\n                default: y = 0; break;\n            }\n\n            x += regionX;\n            y += regionY;\n\n            widget.layout(x, y, x + widget.getMeasuredWidth(), y + widget.getMeasuredHeight(), true);\n        }\n    }\n\n    /**\n     * @param {number} maxWidth\n     * @param {number} maxHeight\n     * @param {PUXI.MeasureMode} widthMode\n     * @param {PUXI.MeasureMode} heightMode\n     * @override\n     */\n    onMeasure(maxWidth: number, maxHeight: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        this.indexRegions();\n        this.clearMeasureCache();\n\n        // Children can be aligned inside region if smaller\n        const childWidthMode = widthMode === MeasureMode.EXACTLY ? MeasureMode.AT_MOST : widthMode;\n        const childHeightMode = heightMode === MeasureMode.EXACTLY ? MeasureMode.AT_MOST : widthMode;\n\n        // Measure top, bottom, and center. The max. of each row's width will be our \"reference\".\n        let [tw, th, , thmin] = this.measureChildren(// eslint-disable-line prefer-const\n            this.topWidgets,\n            maxWidth,\n            maxHeight,\n            childWidthMode, childHeightMode,\n        );\n        let [bw, bh,, bhmin] = this.measureChildren(// eslint-disable-line prefer-const\n            this.bottomWidgets,\n            maxWidth,\n            maxHeight,\n            childWidthMode, childHeightMode,\n        );\n        let [cw, ch, cwmin, chmin] = this.measureChildren(// eslint-disable-line prefer-const\n            this.centerWidgets,\n            maxWidth,\n            maxHeight,\n            childWidthMode,\n            heightMode);\n\n        // Measure left & right regions. Their heights will equal center's height.\n        let [lw, , lwmin] = this.measureChildren(// eslint-disable-line prefer-const\n            this.leftWidgets,\n            maxWidth,\n            ch,\n            childWidthMode, MeasureMode.AT_MOST);\n        let [rw, , rwmin] = this.measureChildren(// eslint-disable-line prefer-const\n            this.rightWidgets,\n            maxWidth,\n            ch,\n            childWidthMode, MeasureMode.AT_MOST);\n\n        // Check if total width/height is greater than our limit. If so, then downscale\n        // each row's height or each column's (in middle row) width.\n\n        const middleRowWidth = lw + rw + cw;\n        const netWidth = Math.max(tw, bw, middleRowWidth);\n        const netHeight = th + bh + ch;\n\n        // Resolve our limits.\n        if (widthMode === MeasureMode.EXACTLY)\n        {\n            this.measuredWidth = maxWidth;\n        }\n        else if (widthMode === MeasureMode.AT_MOST)\n        {\n            this.measuredWidth = Math.min(netWidth, maxWidth);\n        }\n        else\n        {\n            this.measuredWidth = netWidth;\n        }\n\n        if (heightMode === MeasureMode.EXACTLY)\n        {\n            this.measuredHeight = maxHeight;\n        }\n        else if (heightMode === MeasureMode.AT_MOST)\n        {\n            this.measuredHeight = Math.min(netHeight, maxHeight);\n        }\n        else\n        {\n            this.measuredHeight = netHeight;\n        }\n\n        tw = this.measuredWidth;\n        bw = this.measuredWidth;\n\n        if (netHeight > this.measuredHeight)\n        {\n            const hmin = (thmin + chmin + bhmin);\n\n            // Redistribute heights minus min-heights.\n            if (hmin < this.measuredHeight)\n            {\n                const downscale = (this.measuredHeight - hmin) / (netHeight - hmin);\n\n                th = thmin + ((th - thmin) * downscale);\n                bh = bhmin + ((bh - bhmin) * downscale);\n                ch = chmin + ((ch - chmin) * downscale);\n            }\n            // Redistribute full heights.\n            else\n            {\n                const downscale = this.measuredHeight / netHeight;\n\n                th *= downscale;\n                bh *= downscale;\n                ch *= downscale;\n            }\n        }\n\n        if (netWidth > this.measuredWidth)\n        {\n            const wmin = lwmin + cwmin + rwmin;\n\n            // Redistribute widths minus min. widths\n            if (wmin < this.measuredWidth)\n            {\n                const downscale = (this.measuredWidth - wmin) / (netWidth - wmin);\n\n                lw = lwmin + ((lw - lwmin) * downscale);\n                cw = cwmin + ((cw - cwmin) * downscale);\n                rw = rwmin + ((rw - rwmin) * downscale);\n            }\n            // Redistribute full widths\n            else\n            {\n                const downscale = this.measuredWidth / netWidth;\n\n                lw *= downscale;\n                cw *= downscale;\n                rw *= downscale;\n            }\n        }\n\n        // Useful to know!\n        this.measuredLeftWidth = lw;\n        this.measuredRightWidth = rw;\n        this.measuredCenterWidth = cw;\n        this.measuredTopHeight = th;\n        this.measuredBottomHeight = bh;\n        this.measuredCenterHeight = ch;\n\n        this.fitChildren(this.leftWidgets, this.measuredLeftWidth, this.measuredCenterHeight);\n        this.fitChildren(this.topWidgets, this.measuredWidth, this.measuredTopHeight);\n        this.fitChildren(this.rightWidgets, this.measuredRightWidth, this.measuredCenterHeight);\n        this.fitChildren(this.bottomWidgets, this.measuredWidth, this.measuredBottomHeight);\n        this.fitChildren(this.centerWidgets, this.measuredCenterWidth, this.measuredCenterHeight);\n    }\n\n    /**\n     * This measures the list of widgets given the constraints. The max width and\n     * height amongst the children is returned.\n     *\n     * @param {PUXI.Widget[]} list\n     * @param {number} maxWidth\n     * @param {number} maxHeight\n     * @param {PUXI.MeasureMode} widthMode\n     * @param {PUXI.MeasureMode} heightMode\n     * @returns {number[]} - [width, height, widthFixedLowerBound, heightFixedLowerBound] -\n     *    the max. width and height amongst children. Also, the minimum required width/height\n     *    for the region (as defined in layout-options).\n     */\n    protected measureChildren(\n        list: Widget[],\n        maxWidth: number,\n        maxHeight: number,\n        widthMode: MeasureMode,\n        heightMode: MeasureMode,\n    ): number[]\n    {\n        let width = 0;\n        let height = 0;\n        let widthFixedLowerBound = 0;\n        let heightFixedLowerBound = 0;\n\n        for (let i = 0, j = list.length; i < j; i++)\n        {\n            const widget = list[i];\n            const lopt = widget.layoutOptions || LayoutOptions.DEFAULT;\n\n            let w = maxWidth;\n            let h = maxHeight;\n            let wmd = widthMode;\n            let hmd = heightMode;\n\n            if (lopt.width <= LayoutOptions.MAX_DIMEN)\n            {\n                w = lopt.width;\n                wmd = EXACTLY;\n\n                widthFixedLowerBound = Math.max(widthFixedLowerBound, w);\n            }\n            if (lopt.height <= LayoutOptions.MAX_DIMEN)\n            {\n                h = lopt.height;\n                hmd = EXACTLY;\n\n                heightFixedLowerBound = Math.max(heightFixedLowerBound, h);\n            }\n\n            widget.measure(w, h, wmd, hmd);\n\n            width = Math.max(width, widget.getMeasuredWidth());\n            height = Math.max(height, widget.getMeasuredHeight());\n        }\n\n        return [width, height, widthFixedLowerBound, heightFixedLowerBound];\n    }\n\n    /**\n     * Ensures all widgets in the list measured their dimensions below the region\n     * width & height. Widgets that are too large are remeasured in the those\n     * limits (using `MeasureMode.AT_MOST`).\n     *\n     * This will handle widgets that have \"FILL_PARENT\" width or height.\n     *\n     * @param {PUXI.Widget[]} list\n     * @param {number} measuredRegionWidth\n     * @param {number} measuredRegionHeight\n     */\n    protected fitChildren(\n        list: Widget[],\n        measuredRegionWidth: number,\n        measuredRegionHeight: number,\n    ): void\n    {\n        for (let i = 0, j = list.length; i < j; i++)\n        {\n            const widget = list[i];\n\n            if (widget.getMeasuredWidth() <= measuredRegionWidth\n                && widget.getMeasuredHeight() <= measuredRegionHeight\n                && widget.getMeasuredWidth() > 0\n                && widget.getMeasuredHeight() > 0\n                && widget.layoutOptions?.width !== FILL_PARENT\n                && widget.layoutOptions?.height !== FILL_PARENT)\n            {\n                continue;\n            }\n\n            if (measuredRegionWidth > 0 && measuredRegionHeight > 0)\n            {\n                const wm = widget.layoutOptions?.width === FILL_PARENT ? EXACTLY : AT_MOST;\n                const hm = widget.layoutOptions?.height === FILL_PARENT ? EXACTLY : AT_MOST;\n\n                widget.measure(measuredRegionWidth, measuredRegionHeight, wm, hm);\n            }\n        }\n    }\n\n    /**\n     * Indexes the list of left, top, right, bottom, and center widget lists.\n     */\n    protected indexRegions(): void\n    {\n        this.clearRegions();\n        const { widgetChildren: children } = this.host;\n\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as BorderLayoutOptions;\n\n            const region = lopt.region || REGION_CENTER;\n\n            switch (region)\n            {\n                case REGION_LEFT: this.leftWidgets.push(widget); break;\n                case REGION_TOP: this.topWidgets.push(widget); break;\n                case REGION_RIGHT: this.rightWidgets.push(widget); break;\n                case REGION_BOTTOM: this.bottomWidgets.push(widget); break;\n                default: this.centerWidgets.push(widget);\n            }\n        }\n    }\n\n    /**\n     * Clears the left, top, right, bottom, and center widget lists.\n     */\n    protected clearRegions(): void\n    {\n        this.leftWidgets.length = 0;\n        this.topWidgets.length = 0;\n        this.rightWidgets.length = 0;\n        this.bottomWidgets.length = 0;\n    }\n\n    /**\n     * Zeros the measured dimensions.\n     */\n    protected clearMeasureCache(): void\n    {\n        this.measuredLeftWidth = 0;\n        this.measuredRightWidth = 0;\n        this.measuredCenterWidth = 0;\n        this.measuredTopHeight = 0;\n        this.measuredBottomHeight = 0;\n        this.measuredCenterHeight = 0;\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this.measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this.measuredHeight;\n    }\n}\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Helpers }  from './Helpers';\nimport { DragManager } from './event/DragManager';\nimport { ScrollManager } from './event/ScrollManager';\nimport * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\nimport { WidgetGroup } from './WidgetGroup';\nimport { BorderLayout } from './layout-manager';\nimport { ScrollBar } from './ScrollBar';\nimport { ALIGN, BorderLayoutOptions, LayoutOptions } from './layout-options';\nimport { Slider } from './Slider';\n\n/**\n * @namespace PUXI\n * @interface\n */\ninterface IScrollingContainerOptions\n{\n    scrollX?: boolean;\n    scrollY?: boolean;\n    dragScrolling?: boolean;\n    softness?: number;\n    radius?: number;\n    expandMask?: number;\n    overflowY?: number;\n    overflowX?: number;\n    scrollBars?: boolean;\n}\n\n/**\n * `ScrollWidget` masks its contents to its layout bounds and translates\n * its children when scrolling. It uses the anchor layout.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.InteractiveGroup\n */\nexport class ScrollWidget extends InteractiveGroup\n{\n    private mask: PIXI.Graphics;\n    public readonly innerContainer: WidgetGroup;\n    private innerBounds: PIXI.Rectangle;\n\n    scrollX: boolean;\n    scrollY: boolean;\n    dragScrolling: boolean;\n    softness: number;\n    radius: number;\n    expandMask: number;\n    overflowY: number;\n    overflowX: number;\n\n    animating: boolean;\n    scrolling: boolean;\n\n    protected scrollBars: ScrollBar[];\n    protected scrollPosition: PIXI.Point;\n    protected scrollVelocity: PIXI.Point;\n    protected targetPosition: PIXI.Point;\n    protected lastPosition: PIXI.Point;\n    protected stop: boolean;\n\n    private boundCached: number;\n    private lastWidth: number;\n    private lastHeight: number;\n\n    /**\n     * @param {PUXI.IScrollingContainerOptions} options\n     * @param [options.scrollX=false] {Boolean} Enable horizontal scrolling\n     * @param [options.scrollY=false] {Boolean} Enable vertical scrolling\n     * @param [options.dragScrolling=true] {Boolean} Enable mousedrag scrolling\n     * @param [options.softness=0.5] {Number} (0-1) softness of scrolling\n     * @param [options.width=0] {Number|String} container width\n     * @param [options.height=0] {Number} container height\n     * @param [options.radius=0] {Number} corner radius of clipping mask\n     * @param [options.expandMask=0] {Number} mask expand (px)\n     * @param [options.overflowY=0] {Number} how much can be scrolled past content dimensions\n     * @param [options.overflowX=0] {Number} how much can be scrolled past content dimensions\n     */\n    constructor(options: IScrollingContainerOptions = {})\n    {\n        super();\n\n        this.mask = new PIXI.Graphics();\n        this.innerContainer = new InteractiveGroup();\n        this.innerBounds = new PIXI.Rectangle();\n        super.addChild(this.innerContainer);\n        this.contentContainer.addChild(this.mask);\n        this.contentContainer.mask = this.mask;\n\n        this.scrollX = options.scrollX !== undefined ? options.scrollX : false;\n        this.scrollY = options.scrollY !== undefined ? options.scrollY : false;\n        this.dragScrolling = options.dragScrolling !== undefined ? options.dragScrolling : true;\n        this.softness = options.softness !== undefined ? Math.max(Math.min(options.softness || 0, 1), 0) : 0.5;\n        this.radius = options.radius || 0;\n        this.expandMask = options.expandMask || 0;\n        this.overflowY = options.overflowY || 0;\n        this.overflowX = options.overflowX || 0;\n\n        this.scrollVelocity = new PIXI.Point();\n\n        /**\n         * Widget's position in a scroll.\n         * @member {PIXI.Point}\n         * @private\n         */\n        this.scrollPosition = new PIXI.Point();\n\n        /**\n         * Position that the cursor is at, i.e. our scroll \"target\".\n         * @member {PIXI.Point}\n         * @private\n         */\n        this.targetPosition = new PIXI.Point();\n        this.lastPosition = new PIXI.Point();\n\n        this.useLayout(new BorderLayout());\n\n        this.animating = false;\n        this.scrolling = false;\n        this.scrollBars = [];\n\n        if (options.scrollBars && this.scrollX)\n        {\n            const horizontalScrollBar: ScrollBar = new ScrollBar({\n                orientation: ScrollBar.HORIZONTAL,\n                scrollingContainer: this,\n                minValue: 0,\n                maxValue: 1,\n            })\n                .setLayoutOptions(\n                    new BorderLayoutOptions({\n                        width: LayoutOptions.FILL_PARENT,\n                        height: LayoutOptions.WRAP_CONTENT,\n                        region: BorderLayoutOptions.REGION_BOTTOM,\n                        horizontalAlign: ALIGN.CENTER,\n                        verticalAlign: ALIGN.BOTTOM,\n                    }),\n                )\n                .setBackground(0xff)\n                .setBackgroundAlpha(0.8) as ScrollBar;\n\n            super.addChild(horizontalScrollBar);\n            this.scrollBars.push(horizontalScrollBar);\n        }\n        if (options.scrollBars && this.scrollY)\n        {\n            const verticalScrollBar: ScrollBar = new ScrollBar({\n                orientation: ScrollBar.VERTICAL,\n                scrollingContainer: this,\n                minValue: 0,\n                maxValue: 1,\n            })\n                .setLayoutOptions(\n                    new BorderLayoutOptions({\n                        width: LayoutOptions.WRAP_CONTENT,\n                        height: LayoutOptions.FILL_PARENT,\n                        region: BorderLayoutOptions.REGION_RIGHT,\n                        horizontalAlign: ALIGN.RIGHT,\n                        verticalAlign: ALIGN.CENTER,\n                    }),\n                )\n                .setBackground(0xff)\n                .setBackgroundAlpha(0.8) as ScrollBar;\n\n            super.addChild(verticalScrollBar);\n            this.scrollBars.push(verticalScrollBar);\n        }\n\n        this.boundCached = 0;\n    }\n\n    /**\n     * Updates the mask and scroll position before rendering.\n     *\n     * @override\n     */\n    update(): void\n    {\n        super.update();\n\n        if (this.lastWidth !== this.width || this.lastHeight !== this.height)\n        {\n            const of = this.expandMask;\n\n            this.mask.clear();\n            this.mask.lineStyle(0);\n            this.mask.beginFill(0xFFFFFF, 1);\n\n            if (this.radius === 0)\n            {\n                this.mask.drawRect(-of, -of, this.width + of, this.height + of);\n            }\n            else\n            {\n                this.mask.drawRoundedRect(-of, -of, this.width + of, this.height + of, this.radius);\n            }\n\n            this.mask.endFill();\n\n            this.lastWidth = this.width;\n            this.lastHeight = this.height;\n        }\n    }\n\n    /**\n     * Adds this scrollbar. It is expected that the given scrollbar has been\n     * given proper border-layout options.\n     *\n     * @todo This only works for TOP, LEFT scrollbars as BOTTOM, RIGHT are occupied.\n     * @param {PUXI.ScrollBar} scrollBar\n     */\n    addScrollBar(scrollBar: ScrollBar): ScrollWidget\n    {\n        super.addChild(scrollBar);\n        this.scrollBars.push(scrollBar);\n\n        return this;\n    }\n\n    /**\n     * @param {PUXI.Widget[]} newChildren\n     * @returns {ScrollWidget} this widget\n     */\n    addChild(...newChildren: Widget[]): Widget\n    {\n        for (let i = 0; i < newChildren.length; i++)\n        {\n            this.innerContainer.addChild(newChildren[i]);\n        }\n\n        this.getInnerBounds(true); // make sure bounds is updated instantly when a child is added\n\n        return this;\n    }\n\n    /**\n     * Updates the scroll bar values, and should be called when scrolled.\n     */\n    updateScrollBars(): void\n    {\n        for (let i = 0, j = this.scrollBars.length; i < j; i++)\n        {\n            const scrollBar = this.scrollBars[i];\n\n            if (scrollBar.orientation === Slider.HORIZONTAL)\n            {\n                const x = this.getPercentPosition('x');\n\n                scrollBar.value = x;\n            }\n            else if (scrollBar.orientation === Slider.VERTICAL)\n            {\n                const y = this.getPercentPosition('y');\n\n                scrollBar.value = y;\n            }\n        }\n    }\n\n    getInnerBounds(force?: boolean): PIXI.Rectangle\n    {\n        // this is a temporary fix, because we cant rely on innercontainer height if the children is positioned > 0 y.\n        if (force || performance.now() - this.boundCached > 1000)\n        {\n            this.innerContainer.insetContainer.getLocalBounds(this.innerBounds);\n\n            this.innerBounds.height = this.innerBounds.y + this.innerContainer.height || 0;\n            this.innerBounds.width = this.innerBounds.x + this.innerContainer.width || 0;\n            this.boundCached = performance.now();\n        }\n\n        return this.innerBounds;\n    }\n\n    /**\n     * @override\n     */\n    initialize(): void\n    {\n        super.initialize();\n\n        if (this.scrollX || this.scrollY)\n        {\n            this.initScrolling();\n        }\n    }\n\n    private initScrolling(): void\n    {\n        const container = this.innerContainer.insetContainer;\n        const realPosition = new PIXI.Point();\n        const {\n            scrollPosition,\n            targetPosition,\n        } = this;\n\n        // Drag scroll\n        if (this.dragScrolling)\n        {\n            const drag: DragManager = this.eventBroker.dnd as DragManager;\n\n            drag.onDragStart = (e): void =>\n            {\n                if (!this.scrolling)\n                {\n                    realPosition.copyFrom(container.position);\n                    scrollPosition.copyFrom(container.position);\n                    this.scrolling = true;\n                    this.setScrollPosition();\n\n                    this.emit('scrollstart', e);\n                }\n            };\n\n            drag.onDragMove = (_, offset): void =>\n            {\n                if (this.scrollX)\n                {\n                    targetPosition.x = realPosition.x + offset.x;\n                }\n                if (this.scrollY)\n                {\n                    targetPosition.y = realPosition.y + offset.y;\n                }\n\n                this.setScrollPosition();\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            drag.onDragEnd = (e): void =>\n            {\n                if (this.scrolling)\n                {\n                    this.scrolling = false;\n                    this.emit('scrollend', e);\n                }\n            };\n        }\n\n        // Mouse scroll\n        const scrollSpeed = new PIXI.Point();\n        const scroll = new ScrollManager(this, true);\n\n        scroll.onMouseScroll = (e, delta: PIXI.Point): void =>\n        {\n            scrollSpeed.set(-delta.x * 0.2, -delta.y * 0.2);\n            this.setScrollPosition(scrollSpeed);\n        };\n\n        this.updateScrollBars();\n    }\n\n    /**\n     * @param {string} direction - `'x'` or `'y'`\n     * @returns {number} a value between 0 and 1 indicating how scrolling\n     *      has occured in that direction (called percent position).\n     */\n    getPercentPosition(direction: 'x' | 'y'): number\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        if (direction === 'x')\n        {\n            return container.x / (this.width - bounds.width);\n        }\n        else if (direction === 'y')\n        {\n            return container.y / (this.height - bounds.height);\n        }\n\n        return 0;\n    }\n\n    forcePctPosition = (direction: string, pct: number): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        if (this.scrollX && direction === 'x')\n        {\n            container.position[direction] = -((bounds.width - this.width) * pct);\n        }\n        if (this.scrollY && direction === 'y')\n        {\n            container.position[direction] = -((bounds.height - this.height) * pct);\n        }\n\n        this.scrollPosition[direction] = this.targetPosition[direction] = container.position[direction];\n    };\n\n    focusPosition = (pos: PIXI.Point): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const container = this.innerContainer.insetContainer;\n\n        let dif;\n\n        if (this.scrollX)\n        {\n            const x = Math.max(0, (Math.min(bounds.width, pos.x)));\n\n            if (x + container.x > this.width)\n            {\n                dif = x - this.width;\n                container.x = -dif;\n            }\n            else if (x + container.x < 0)\n            {\n                dif = x + container.x;\n                container.x -= dif;\n            }\n        }\n        if (this.scrollY)\n        {\n            const y = Math.max(0, (Math.min(bounds.height, pos.y)));\n\n            if (y + container.y > this.height)\n            {\n                dif = y - this.height;\n                container.y = -dif;\n            }\n            else if (y + container.y < 0)\n            {\n                dif = y + container.y;\n                container.y -= dif;\n            }\n        }\n\n        this.lastPosition.copyFrom(container.position);\n        this.targetPosition.copyFrom(container.position);\n        this.scrollPosition.copyFrom(container.position);\n\n        this.updateScrollBars();\n    };\n\n    /**\n     * @param {PIXI.Point}[velocity]\n     */\n    setScrollPosition = (velocity?: PIXI.Point): void =>\n    {\n        if (velocity)\n        {\n            this.scrollVelocity.copyFrom(velocity);\n        }\n\n        const container = this.innerContainer.insetContainer;\n\n        if (!this.animating)\n        {\n            this.animating = true;\n            this.lastPosition.copyFrom(container.position);\n            this.targetPosition.copyFrom(container.position);\n\n            PIXI.Ticker.shared.add(this.updateScrollPosition);\n        }\n    };\n\n    /**\n     * @param {number} delta\n     * @protected\n     */\n    protected updateScrollPosition = (delta: number): void =>\n    {\n        this.stop = true;\n\n        if (this.scrollX)\n        {\n            this.updateDirection('x', delta);\n        }\n        if (this.scrollY)\n        {\n            this.updateDirection('y', delta);\n        }\n\n        if (this.stop)\n        {\n            PIXI.Ticker.shared.remove(this.updateScrollPosition);\n            this.animating = false;\n        }\n\n        this.updateScrollBars();\n    };\n\n    /**\n     * @param {'x' | 'y'} direction\n     * @param {number} delta\n     * @protected\n     */\n    protected updateDirection = (direction: string, delta: number): void =>\n    {\n        const bounds = this.getInnerBounds();\n        const {\n            scrollPosition,\n            scrollVelocity,\n            targetPosition,\n            lastPosition,\n        } = this;\n        const container = this.innerContainer.insetContainer;\n\n        let min;\n\n        if (direction === 'y')\n        {\n            min = Math.round(Math.min(0, this.height - bounds.height));\n        }\n        else\n        {\n            min = Math.round(Math.min(0, this.width - bounds.width));\n        }\n\n        if (!this.scrolling && Math.round(scrollVelocity[direction]) !== 0)\n        {\n            targetPosition[direction] += scrollVelocity[direction];\n            scrollVelocity[direction] = Helpers.Lerp(\n                scrollVelocity[direction],\n                0,\n                (5 + 2.5 / Math.max(this.softness, 0.01)) * delta);\n\n            if (targetPosition[direction] > 0)\n            {\n                targetPosition[direction] = 0;\n            }\n            else if (targetPosition[direction] < min)\n            {\n                targetPosition[direction] = min;\n            }\n        }\n\n        if (!this.scrolling\n            && Math.round(scrollVelocity[direction]) === 0\n            && (container[direction] > 0\n            || container[direction] < min))\n        {\n            const target = this.scrollPosition[direction] > 0 ? 0 : min;\n\n            scrollPosition[direction] = Helpers.Lerp(\n                scrollPosition[direction],\n                target,\n                (40 - (30 * this.softness)) * delta);\n            this.stop = false;\n        }\n        else if (this.scrolling || Math.round(scrollVelocity[direction]) !== 0)\n        {\n            if (this.scrolling)\n            {\n                scrollVelocity[direction] = this.scrollPosition[direction] - lastPosition[direction];\n                lastPosition.copyFrom(scrollPosition);\n            }\n            if (targetPosition[direction] > 0)\n            {\n                scrollVelocity[direction] = 0;\n                scrollPosition[direction] = 100 * this.softness * (1 - Math.exp(targetPosition[direction] / -200));\n            }\n            else if (targetPosition[direction] < min)\n            {\n                scrollVelocity[direction] = 0;\n                scrollPosition[direction] = min - (100 * this.softness * (1 - Math.exp((min - targetPosition[direction]) / -200)));\n            }\n            else\n            {\n                scrollPosition[direction] = targetPosition[direction];\n            }\n\n            this.stop = false;\n        }\n\n        container.position[direction] = Math.round(scrollPosition[direction]);\n    };\n\n    /**\n     * This is fired when the user starts scrolling.\n     * @event scrollstart\n     */\n\n    /**\n     * This is fired when the user stops scrolling.\n     * @event scrollend\n     */\n}\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * An UI sprite object\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n */\nexport class Sprite extends Widget\n{\n    private spriteDisplay: PIXI.Sprite;\n\n    constructor(texture: PIXI.Texture)\n    {\n        super();\n\n        this.spriteDisplay = new PIXI.Sprite(texture);\n        this.contentContainer.addChild(this.spriteDisplay);\n    }\n\n    update(): void\n    {\n        if (this.tint !== null)\n        {\n            this.spriteDisplay.tint = this.tint;\n        }\n\n        if (this.blendMode !== null)\n        {\n            this.spriteDisplay.blendMode = this.blendMode;\n        }\n    }\n\n    static fromImage(imageUrl): Sprite\n    {\n        return new Sprite(new PIXI.Texture(new PIXI.BaseTexture(imageUrl)));\n    }\n}\n\n","import { Stage } from '../Stage';\nimport { Widget } from '../Widget';\nimport * as PIXI from 'pixi.js';\n\nexport abstract class Controller<T> extends PIXI.utils.EventEmitter\n{\n    stage: Stage;\n\n    constructor(stage: Stage)\n    {\n        super();\n        this.stage = stage;\n    }\n\n    abstract in(widget: T): any;\n\n    abstract out(widget: T): any;\n}\n\n/**\n * A controller handles a stage-level state that can be held by wigets. For example,\n * `PUXI.FocusController` handles which widget is focused.\n *\n * @memberof PUXI\n * @class Controller\n */\n\n/**\n * Enables the widget to enter the controller's state.\n *\n * @memberof PUXI.Controller#\n * @method in\n * @param {PUXI.Widget} widget\n */\n\n/**\n * Disables the widget from the controller's state.\n *\n * @memberof PUXI.Controller#\n * @method out\n * @param {PUXI.Widget} widget\n */\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\nimport { MeasureMode } from './IMeasurable';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\nimport { FocusController, Controller, CheckBoxGroupController } from './ctl';\n\n/**\n * The stage is the root node in the PUXI scene graph. It does not provide a\n * sophisticated layout model; however, it will accept constraints defined by\n * `PUXI.FastLayoutOptions` or `PUXI.LayoutOptions` in its children.\n *\n * The stage is not a `PUXI.Widget` and its dimensions are always fixed.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.Container\n */\nexport class Stage extends PIXI.Container\n{\n    __width: number;\n    __height: number;\n    minWidth: number;\n    minHeight: number;\n    initialized: boolean;\n    widgetChildren: Widget[];\n\n    stage: any;\n\n    private _checkBoxGroupCtl: CheckBoxGroupController;\n    private _focusCtl: FocusController;\n\n    protected background: PIXI.Container;\n\n    /**\n     * @param {number} width - width of the stage\n     * @param {number} height - height of the stage\n     */\n    constructor(width: number, height: number)\n    {\n        super();\n\n        this.__width = width;\n        this.__height = height;\n        this.minWidth = 0;\n        this.minHeight = 0;\n\n        this.widgetChildren = [];\n        this.interactive = true;\n        this.stage = this;\n        this.hitArea = new PIXI.Rectangle(0, 0, 0, 0);\n        this.initialized = true;\n        this.resize(width, height);\n\n        this._checkBoxGroupCtl = new Stage.CHECK_BOX_GROUP_CONTROLLER(this);\n        this._focusCtl = new Stage.FOCUS_CONTROLLER(this);\n    }\n\n    public measureAndLayout(): void\n    {\n        if (this.background)\n        {\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n\n        for (let i = 0, j = this.widgetChildren.length; i < j; i++)\n        {\n            const widget = this.widgetChildren[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as FastLayoutOptions;\n\n            const widthMeasureMode = lopt.width < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const heightMeasureMode = lopt.height < LayoutOptions.MAX_DIMEN\n                ? MeasureMode.EXACTLY\n                : MeasureMode.AT_MOST;\n            const loptWidth = (Math.abs(lopt.width) < 1) ? lopt.width * this.width : lopt.width;\n            const loptHeight = (Math.abs(lopt.height) < 1) ? lopt.height * this.height : lopt.height;\n\n            widget.measure(\n                widthMeasureMode === MeasureMode.EXACTLY ? loptWidth : this.width,\n                heightMeasureMode === MeasureMode.EXACTLY ? loptHeight : this.height,\n                widthMeasureMode,\n                heightMeasureMode);\n\n            let x = lopt.x ? lopt.x : 0;\n            let y = lopt.y ? lopt.y : 0;\n\n            if (Math.abs(x) < 1)\n            {\n                x *= this.width;\n            }\n            if (Math.abs(y) < 1)\n            {\n                y *= this.height;\n            }\n\n            const anchor = lopt.anchor || FastLayoutOptions.DEFAULT_ANCHOR;\n            const l = x - (anchor.x * widget.getMeasuredWidth());\n            const t = y - (anchor.y * widget.getMeasuredHeight());\n\n            widget.layout(l, t,\n                l + widget.getMeasuredWidth(),\n                t + widget.getMeasuredHeight(),\n                true);\n        }\n    }\n\n    getBackground(): PIXI.Container\n    {\n        return this.background;\n    }\n\n    setBackground(bg: PIXI.Container): void\n    {\n        if (this.background)\n        {\n            super.removeChild(this.background);\n        }\n\n        this.background = bg;\n\n        if (bg)\n        {\n            super.addChildAt(bg, 0);\n\n            this.background.width = this.width;\n            this.background.height = this.height;\n        }\n    }\n\n    private update(widgets: Widget[]): void\n    {\n        this.emit('preupdate', this);\n\n        for (let i = 0, j = widgets.length; i < j; i++)\n        {\n            const widget = widgets[i];\n\n            widget.stage = this;\n\n            if (!widget.initialized)\n            {\n                widget.initialize();\n            }\n\n            this.update(widget.widgetChildren);\n            widget.update();\n        }\n\n        this.emit('postupdate', this);\n    }\n\n    render(renderer: PIXI.Renderer): void\n    {\n        this.update(this.widgetChildren);\n        super.render(renderer);\n    }\n\n    addChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.addChild(arguments[i]);\n            }\n        }\n        else\n        {\n            if (UIObject.parent)\n            {\n                UIObject.parent.removeChild(UIObject);\n            }\n\n            UIObject.parent = this;\n            this.widgetChildren.push(UIObject);\n            super.addChild(UIObject.insetContainer);\n            // UIObject.updatesettings(true);\n        }\n\n        this.measureAndLayout();\n    }\n\n    removeChild(UIObject: Widget): void\n    {\n        const argumentLenght = arguments.length;\n\n        if (argumentLenght > 1)\n        {\n            for (let i = 0; i < argumentLenght; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject.insetContainer);\n\n            const index = this.widgetChildren.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.children.splice(index, 1);\n                UIObject.parent = null;\n            }\n        }\n\n        this.measureAndLayout();\n    }\n\n    resize(width?: number, height?: number): void\n    {\n        if (!isNaN(height)) this.__height = height;\n        if (!isNaN(width)) this.__width = width;\n\n        if (this.minWidth || this.minHeight)\n        {\n            let rx = 1;\n            let ry = 1;\n\n            if (width && width < this.minWidth)\n            {\n                rx = this.minWidth / width;\n            }\n\n            if (height && height < this.minHeight)\n            {\n                ry = this.minHeight / height;\n            }\n\n            if (rx > ry && rx > 1)\n            {\n                this.scale.set(1 / rx);\n                this.__height *= rx;\n                this.__width *= rx;\n            }\n            else if (ry > 1)\n            {\n                this.scale.set(1 / ry);\n                this.__width *= ry;\n                this.__height *= ry;\n            }\n            else if (this.scale.x !== 1)\n            {\n                this.scale.set(1);\n            }\n        }\n\n        if (this.hitArea)\n        {\n            this.hitArea.width = this.__width;\n            this.hitArea.height = this.__height;\n        }\n\n        for (let i = 0; i < this.widgetChildren.length; i++)\n        {\n            this.widgetChildren[i].updatesettings(true, false);\n        }\n\n        this.measureAndLayout();\n    }\n\n    get width(): number\n    {\n        return this.__width;\n    }\n    set width(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__width = val;\n            this.resize();\n        }\n    }\n\n    get height(): number\n    {\n        return this.__height;\n    }\n    set height(val: number)\n    {\n        if (!isNaN(val))\n        {\n            this.__height = val;\n            this.resize();\n        }\n    }\n\n    /**\n     * The check box group controller for check boxes in this stage.\n     *\n     * @member {PUXI.CheckBoxGroupController}\n     */\n    get checkBoxGroupController(): CheckBoxGroupController\n    {\n        return this._checkBoxGroupCtl;\n    }\n\n    /**\n     * The focus controller for widgets in this stage. You can use this to bring a\n     * widget into focus.\n     *\n     * @member {PUXI.FocusController}\n     */\n    get focusController(): FocusController\n    {\n        return this._focusCtl;\n    }\n\n    /**\n     * Use this to override which class is used for the check box group controller. It\n     * should extend from `PUXI.CheckBoxGroupController`.\n     *\n     * @static\n     */\n    static CHECK_BOX_GROUP_CONTROLLER: typeof CheckBoxGroupController = CheckBoxGroupController;\n\n    /**\n     * Use this to override which class is used for the focus controller. It should\n     * extend from `PUXI.FocusController`.\n     *\n     * @static\n     */\n    static FOCUS_CONTROLLER: typeof FocusController = FocusController;\n}\n","import { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { ScrollWidget } from './ScrollWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions } from './layout-options';\nimport { DragManager } from './event/DragManager';\n\n/**\n * @memberof PUXI\n * @interface\n */\ninterface ITextInputOptions extends IFocusableOptions\n{\n    multiLine?: boolean;\n    style?: PIXI.TextStyle;\n    background?: PIXI.Container;\n    selectedColor?: string | number[];\n    selectedBackgroundColor?: string;\n    width?: number;\n    height?: number;\n    padding?: number;\n    paddingTop?: number;\n    paddingBottom?: number;\n    paddingLeft?: number;\n    paddingRight?: number;\n    tabIndex?: number;\n    tabGroup?: number;\n    maxLength?: number;\n    caretWidth?: number;\n    lineHeight?: number;\n    value?: string;\n}\n\n// Dummy <input> element created for mobile keyboards\nlet mockDOMInput: any;\n\nfunction initMockDOMInput(): void\n{\n    // create temp input (for mobile keyboard)\n    if (typeof mockDOMInput === 'undefined')\n    {\n        mockDOMInput = document.createElement('INPUT');\n        mockDOMInput.setAttribute('type', 'text');\n        mockDOMInput.setAttribute('id', '_pui_tempInput');\n        mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n        document.body.appendChild(mockDOMInput);\n    }\n}\n\n/**\n * An UI text object\n *\n * @class\n * @extends PIXI.UI.InputBase\n * @memberof PIXI.UI\n */\nexport class TextInput extends FocusableWidget\n{\n    private options: ITextInputOptions;\n\n    private _dirtyText: boolean;\n    private _value: string;\n    private _lastValue: string;\n\n    private _lastWidth: number;\n    private _lastHeight: number;\n\n    private selection: PIXI.Graphics;\n    private textContainer: ScrollWidget;\n\n    public maxLength: number;\n\n    private chars: any[];\n    private multiLine: boolean;\n    private color: string;\n    private selectedColor: string;\n    private selectedBackgroundColor: string;\n    private tempText: PIXI.Text;\n    private textHeight: number;\n    private lineHeight: number;\n\n    private caret: PIXI.Graphics;\n    private caretInterval: NodeJS.Timeout;\n    private si: number; // startIndex\n    private sie: boolean; // startIndexEnd\n    private ei: number; // endIndex\n    private eie: boolean; // endIndexEnd\n    private sp: PIXI.Point; // startposition\n    private ds: PIXI.Point; // dragStart\n    private de: PIXI.Point; // dragend\n    private rdd: boolean; // Reverse drag direction\n    private vrdd: boolean; // vertical Reverse drag direction\n\n    private selectionStart: number;\n    private selectionEnd: number;\n    private hasSelection: boolean;\n    private t: number; // timestamp\n    private cc: number; // click counter\n    private textLengthPX: number;\n    private textHeightPX: number;\n    private lineIndexMax: number;\n\n    private ctrlDown: boolean;\n    private shiftDown: boolean;\n    private shiftKey: number;\n    private ctrlKey: number;\n    private cmdKey: number;\n\n    private _sp: PIXI.Point;\n\n    /**\n     * @param {PUXI.ITextInputOptions} options\n     * @param {string} options.value Text content\n     * @param {boolean} [options.multiLine=false] Multiline input\n     * @param options.style {PIXI.TextStyle} Style used for the Text\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for input\n     * @param [options.selectedColor='#ffffff'] {String|Array} Fill color of selected text\n     * @param [options.selectedBackgroundColor='#318cfa'] {String} BackgroundColor of selected text\n     * @param [options.width=150] {Number} width of input\n     * @param [options.height=20] {Number} height of input\n     * @param [options.padding=3] {Number} input padding\n     * @param [options.paddingTop=0] {Number} input padding\n     * @param [options.paddingBottom=0] {Number} input padding\n     * @param [options.paddingLeft=0] {Number} input padding\n     * @param [options.paddingRight=0] {Number} input padding\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.maxLength=0] {Number} 0 = unlimited\n     * @param [options.caretWidth=1] {Number} width of the caret\n     * @param [options.lineHeight=0] {Number} 0 = inherit from text\n     */\n    constructor(options: ITextInputOptions)\n    {\n        super(options);\n        initMockDOMInput();\n\n        this.options = options;\n\n        this._dirtyText = true;\n        this.maxLength = options.maxLength || 0;\n        this._value = this._lastValue = options.value || '';\n\n        if (this.maxLength)\n        {\n            this._value = this._value.slice(0, this.maxLength);\n        }\n\n        this.chars = [];\n        this.multiLine = options.multiLine !== undefined ? options.multiLine : false;\n        this.color = options.style && options.style.fill ? options.style.fill : '#000000';\n        this.selectedColor = options.selectedColor || '#ffffff';\n        this.selectedBackgroundColor = options.selectedBackgroundColor || '#318cfa';\n        this.tempText = new PIXI.Text('1', options.style);\n        this.textHeight = this.tempText.height;\n        this.lineHeight = options.lineHeight || this.textHeight || this._height;\n\n        this.tempText.destroy();\n\n        // set cursor\n        // this.container.cursor = \"text\";\n\n        // selection graphics\n        this.selection = new PIXI.Graphics();\n        this.selection.visible = false;\n        this.selection._startIndex = 0;\n        this.selection._endIndex = 0;\n\n        // caret graphics\n        this.caret = new PIXI.Graphics();\n        this.caret.visible = false;\n        this.caret._index = 0;\n        this.caret.lineStyle(options.caretWidth || 1, '#ffffff', 1);\n        this.caret.moveTo(0, 0);\n        this.caret.lineTo(0, this.textHeight);\n\n        // var padding\n        const paddingLeft = options.paddingLeft !== undefined ? options.paddingLeft : options.padding;\n        const paddingRight = options.paddingRight !== undefined ? options.paddingRight : options.padding;\n        const paddingBottom = options.paddingBottom !== undefined ? options.paddingBottom : options.padding;\n        const paddingTop = options.paddingTop !== undefined ? options.paddingTop : options.padding;\n\n        // insert text container (scrolling container)\n        this.textContainer = new ScrollWidget({\n            scrollX: !this.multiLine,\n            scrollY: this.multiLine,\n            dragScrolling: this.multiLine,\n            expandMask: 2,\n            softness: 0.2,\n            overflowX: 40,\n            overflowY: 40,\n        }).setPadding(\n            paddingLeft || 3,\n            paddingTop || 3,\n            paddingRight || 3,\n            paddingBottom || 3,\n        ).setLayoutOptions(\n            new LayoutOptions(\n                LayoutOptions.FILL_PARENT,\n                LayoutOptions.FILL_PARENT,\n            ),\n        ) as ScrollWidget;\n\n        this.addChild(this.textContainer);\n\n        if (this.multiLine)\n        {\n            this._useNext = this._usePrev = false;\n            this.textContainer.dragRestrictAxis = 'y';\n            this.textContainer.dragThreshold = 5;\n            this.dragRestrictAxis = 'x';\n            this.dragThreshold = 5;\n        }\n\n        // selection Vars\n        this.sp = new PIXI.Point(); // startposition\n        this._sp = new PIXI.Point();\n        this.ds = new PIXI.Point(); // dragStart\n        this.de = new PIXI.Point(); // dragend\n        this.rdd = false; // Reverse drag direction\n        this.vrdd = false; // vertical Reverse drag direction\n        this.selectionStart = -1;\n        this.selectionEnd = -1;\n        this.hasSelection = false;\n        this.t = performance.now(); // timestamp\n        this.cc = 0; // click counter\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n        this.ctrlDown = false;\n        this.shiftDown = false;\n        this.shiftKey = 16;\n        this.ctrlKey = 17;\n        this.cmdKey = 91;\n\n        this.setupDrag();\n    }\n\n    setupDrag(): void\n    {\n        const event = new DragManager(this);\n\n        event.onPress = (e, mouseDown): void =>\n        {\n            if (mouseDown)\n            {\n                const timeSinceLast = performance.now() - this.t;\n\n                this.t = performance.now();\n                if (timeSinceLast < 250)\n                {\n                    this.cc++;\n                    if (this.cc > 1)\n                    {\n                        this.select();\n                    }\n                    else\n                    {\n                        this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n                        this.updateClosestIndex(this.ds, true);\n                        const c = this.chars[this.si];\n\n                        if (c)\n                        {\n                            if (c.wordIndex != -1)\n                            {\n                                this.selectWord(c.wordIndex);\n                            }\n                            else\n                            {\n                                this.selectRange(this.si, this.si);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    this.cc = 0;\n                    this.sp.copyFrom(e.data.global);\n                    this.innerContainer.toLocal(this.sp, undefined, this.ds, true);\n\n                    if (this.chars.length)\n                    {\n                        this.updateClosestIndex(this.ds, true);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                }\n            }\n            e.data.originalEvent.preventDefault();\n        };\n\n        event.onDragMove = (e, offset: PIXI.Point): void =>\n        {\n            if (!this.chars.length || !this._isFocused)\n            {\n                return;\n            }\n\n            this.de.x = this.sp.x + offset.x;\n            this.de.y = this.sp.y + offset.y;\n            this.innerContainer.toLocal(this.de, undefined, this.de, true);\n            this.updateClosestIndex(this.de, false);\n\n            if (this.si < this.ei)\n            {\n                this.selectRange(this.sie ? this.si + 1 : this.si, this.eie ? this.ei : this.ei - 1);\n                this.caret._index = this.eie ? this.ei : this.ei - 1;\n            }\n            else if (this.si > this.ei)\n            {\n                this.selectRange(this.ei, this.sie ? this.si : this.si - 1);\n                this.caret._index = this.ei;\n            }\n            else if (this.sie === this.eie)\n            {\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            else\n            {\n                this.selectRange(this.si, this.ei);\n                this.caret._index = this.ei;\n            }\n\n            this.caret._forward = this.si <= this.ei;\n            this.caret._down = offset.y > 0;\n\n            this.scrollToPosition(this.de);\n        };\n    }\n\n    private get innerContainer(): PIXI.Container\n    {\n        return this.textContainer.innerContainer.insetContainer;\n    }\n\n    update(): void\n    {\n        if (this.width !== this._lastWidth)\n        {\n            this._lastWidth = this._width;\n\n            if (this.multiLine)\n            {\n                this.updateText();\n\n                if (this.caret.visible)\n                {\n                    this.setCaretIndex(this.caret._index);\n                }\n                if (this.hasSelection)\n                {\n                    this.updateSelectionGraphics();\n                }\n            }\n        }\n\n        // update text\n        if (this._dirtyText)\n        {\n            this.updateText();\n            this._dirtyText = false;\n        }\n    }\n\n    updateText(): void\n    {\n        this.textLengthPX = 0;\n        this.textHeightPX = 0;\n        this.lineIndexMax = 0;\n\n        let lineIndex = 0;\n        const length = this._value.length;\n        let x = 0;\n        let y = (this.lineHeight - this.textHeight) * 0.5;\n        let i = 0;\n\n        // destroy excess chars\n        if (this.chars.length > length)\n        {\n            for (i = this.chars.length - 1; i >= length; i--)\n            {\n                this.innerContainer.removeChild(this.chars[i]);\n                this.chars[i].destroy();\n            }\n\n            this.chars.splice(length, this.chars.length - length);\n        }\n\n        // update and add chars\n        let whitespace = false;\n        let newline = false;\n        let wordIndex = 0;\n        let lastWordIndex = -1;\n        let wrap = false;\n\n        for (i = 0; i < this._value.length; i++)\n        {\n            if (whitespace || newline)\n            {\n                lastWordIndex = i;\n                wordIndex++;\n            }\n\n            let c = this._value[i];\n\n            whitespace = c === ' ';\n            newline = c === '\\n';\n\n            if (newline)\n            { // newline \"hack\". webgl render errors if \\n is passed to text\n                c = '';\n            }\n\n            let charText = this.chars[i];\n\n            if (!charText)\n            {\n                charText = new PIXI.Text(c, this.options.style);\n                this.innerContainer.addChild(charText);\n                this.chars.push(charText);\n            }\n            else\n            {\n                charText.text = c;\n            }\n\n            charText.scale.x = newline ? 0 : 1;\n            charText.wrapped = wrap;\n            wrap = false;\n\n            if (newline || (this.multiLine && x + charText.width >= this._width - this.paddingLeft - this.paddingRight))\n            {\n                lineIndex++;\n                x = 0;\n                y += this.lineHeight;\n\n                if (lastWordIndex !== -1 && !newline)\n                {\n                    i = lastWordIndex - 1;\n                    lastWordIndex = -1;\n                    wrap = true;\n                    continue;\n                }\n            }\n\n            charText.lineIndex = lineIndex;\n            charText.x = x;\n            charText.y = y;\n            charText.wordIndex = whitespace || newline ? -1 : wordIndex;\n            x += charText.width;\n\n            if (x > this.textLengthPX)\n            {\n                this.textLengthPX = x;\n            }\n            if (y > this.textHeightPX)\n            {\n                this.textHeightPX = y;\n            }\n        }\n\n        this.lineIndexMax = lineIndex;\n\n        // put caret on top\n        this.innerContainer.addChild(this.caret);\n\n        // recache\n        if (this.innerContainer.cacheAsBitmap)\n        {\n            this.innerContainer.cacheAsBitmap = false;\n            this.innerContainer.cacheAsBitmap = true;\n        }\n\n        this.textContainer.update();\n    }\n\n    updateClosestIndex(point: PIXI.Point, start: boolean): void\n    {\n        let currentDistX = 99999;\n        let currentIndex = -1;\n        let atEnd = false;\n\n        let closestLineIndex = 0;\n\n        if (this.lineIndexMax > 0)\n        {\n            closestLineIndex = Math.max(0, Math.min(\n                this.lineIndexMax,\n                Math.floor(point.y / this.lineHeight)));\n        }\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            const char = this.chars[i];\n\n            if (char.lineIndex !== closestLineIndex)\n            {\n                continue;\n            }\n\n            const distX = Math.abs(point.x - (char.x + (char.width * 0.5)));\n\n            if (distX < currentDistX)\n            {\n                currentDistX = distX;\n                currentIndex = i;\n                atEnd = point.x > char.x + (char.width * 0.5);\n            }\n        }\n\n        if (start)\n        {\n            this.si = currentIndex;\n            this.sie = atEnd;\n        }\n        else\n        {\n            this.ei = currentIndex;\n            this.eie = atEnd;\n        }\n    }\n\n    deleteSelection(): boolean\n    {\n        if (this.hasSelection)\n        {\n            this.value = this.value.slice(0, this.selectionStart) + this.value.slice(this.selectionEnd + 1);\n            this.setCaretIndex(this.selectionStart);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    updateSelectionColors(): void\n    {\n        // Color charecters\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (i >= this.selectionStart && i <= this.selectionEnd)\n            {\n                this.chars[i].style.fill = this.selectedColor;\n            }\n            else\n            {\n                this.chars[i].style.fill = this.color;\n            }\n        }\n    }\n\n    scrollToPosition(pos: PIXI.Point): void\n    {\n        this._sp.x = pos.x;\n        this._sp.y = pos.y;\n\n        if (this.multiLine && this._sp.y >= this.lineHeight)\n        {\n            this._sp.y += this.lineHeight;\n        }\n\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    resetScrollPosition(): void\n    {\n        this._sp.set(0, 0);\n        this.textContainer.focusPosition(this._sp);\n    }\n\n    hideCaret(): void\n    {\n        this.caret.visible = false;\n        clearInterval(this.caretInterval);\n    }\n\n    showCaret(): void\n    {\n        this.clearSelection();\n        clearInterval(this.caretInterval);\n\n        this.caret.alpha = 1;\n        this.caret.visible = true;\n\n        this.caretInterval = setInterval(() =>\n        {\n            this.caret.alpha = this.caret.alpha === 0 ? 1 : 0;\n        }, 500);\n    }\n\n    insertTextAtCaret(c: string): void\n    {\n        if (!this.multiLine && c.indexOf('\\n') !== -1)\n        {\n            c = c.replace(/\\n/g, '');\n        }\n\n        if (this.hasSelection)\n        {\n            this.deleteSelection();\n        }\n\n        if (!this.maxLength || this.chars.length < this.maxLength)\n        {\n            if (this.caret._atEnd)\n            {\n                this.valueEvent += c;\n                this.setCaretIndex(this.chars.length);\n            }\n            else\n            {\n                const index = Math.min(this.chars.length - 1, this.caret._index);\n\n                this.valueEvent = this.value.slice(0, index) + c + this.value.slice(index);\n                this.setCaretIndex(index + c.length);\n            }\n        }\n    }\n\n    onKeyDown = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey)\n        {\n            this.ctrlDown = true;\n        }\n        if (e.which === this.shiftKey)\n        {\n            this.shiftDown = true;\n        }\n\n        // FocusableWidget.onKeyDownImpl should've been called before this.\n\n        if (e.defaultPrevented)\n        {\n            return;\n        }\n\n        if (e.which === 13)\n        { // enter\n            this.insertTextAtCaret('\\n');\n            e.preventDefault();\n\n            return;\n        }\n\n        if (this.ctrlDown)\n        {\n            // Handle Ctrl+<?> commands\n\n            if (e.which === 65)\n            {\n                // Ctrl+A (Select all)\n                this.select();\n                e.preventDefault();\n\n                return;\n            }\n            else if (e.which === 90)\n            {\n                // Ctrl+Z (Undo)\n                if (this.value != this._lastValue)\n                {\n                    this.valueEvent = this._lastValue;\n                }\n\n                this.setCaretIndex(this._lastValue.length + 1);\n                e.preventDefault();\n\n                return;\n            }\n        }\n        if (e.which === 8)\n        {\n            // Handle backspace\n            if (!this.deleteSelection())\n            {\n                if (this.caret._index > 0 || (this.chars.length === 1 && this.caret._atEnd))\n                {\n                    if (this.caret._atEnd)\n                    {\n                        this.valueEvent = this.value.slice(0, this.chars.length - 1);\n                        this.setCaretIndex(this.caret._index);\n                    }\n                    else\n                    {\n                        this.valueEvent = this.value.slice(0, this.caret._index - 1) + this.value.slice(this.caret._index);\n                        this.setCaretIndex(this.caret._index - 1);\n                    }\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n\n        if (e.which === 46)\n        {\n            // Delete selection\n            if (!this.deleteSelection())\n            {\n                if (!this.caret._atEnd)\n                {\n                    this.valueEvent = this.value.slice(0, this.caret._index) + this.value.slice(this.caret._index + 1);\n                    this.setCaretIndex(this.caret._index);\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (e.which === 37 || e.which === 39)\n        {\n            this.rdd = e.which === 37;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    const caretAtStart = this.selectionStart === this.caret._index;\n\n                    if (caretAtStart)\n                    {\n                        if (this.selectionStart === this.selectionEnd && this.rdd === this.caret._forward)\n                        {\n                            this.setCaretIndex(this.caret._forward ? this.caret._index : this.caret._index + 1);\n                        }\n                        else\n                        {\n                            const startindex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                            this.selectRange(startindex, this.selectionEnd);\n                            this.caret._index = Math.min(this.chars.length - 1, Math.max(0, startindex));\n                        }\n                    }\n                    else\n                    {\n                        const endIndex = this.rdd ? this.caret._index - 1 : this.caret._index + 1;\n\n                        this.selectRange(this.selectionStart, endIndex);\n                        this.caret._index = Math.min(this.chars.length - 1, Math.max(0, endIndex));\n                    }\n                }\n                else\n                {\n                    const _i = this.caret._atEnd ? this.caret._index + 1 : this.caret._index;\n                    const selectIndex = this.rdd ? _i - 1 : _i;\n\n                    this.selectRange(selectIndex, selectIndex);\n                    this.caret._index = selectIndex;\n                    this.caret._forward = !rdd;\n                }\n            }\n            else\n            {\n                // Navigation\n                // eslint-disable-next-line no-lonely-if\n                if (this.hasSelection)\n                {\n                    this.setCaretIndex(this.rdd ? this.selectionStart : this.selectionEnd + 1);\n                }\n                else\n                {\n                    this.setCaretIndex(this.caret._index + (this.rdd ? this.caret._atEnd ? 0 : -1 : 1));\n                }\n            }\n\n            e.preventDefault();\n\n            return;\n        }\n        else if (this.multiLine && (e.which === 38 || e.which === 40))\n        {\n            this.vrdd = e.which === 38;\n\n            if (this.shiftDown)\n            {\n                if (this.hasSelection)\n                {\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    // console.log(si, ei);\n                    if (Math.abs(this.si - this.ei) <= 1)\n                    {\n                    // console.log(si, ei);\n                        this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n                    }\n                    else\n                    {\n                        this.caret._index = (this.eie ? this.ei + 1 : this.ei) + (this.caret._down ? -1 : 0);\n                        this.selectRange(this.caret._down ? this.si : this.si - 1, this.caret._index);\n                    }\n                }\n                else\n                {\n                    this.si = this.caret._index;\n                    this.sie = false;\n                    this.de.copyFrom(this.caret);\n                    this.de.y = Math.max(0, Math.min(\n                        this.textHeightPX,\n                        this.de.y + (this.vrdd ? -this.lineHeight : this.lineHeight)));\n                    this.updateClosestIndex(this.de, false);\n\n                    this.caret._index = (this.eie ? this.ei + 1 : ei) - (this.vrdd ? 0 : 1);\n                    this.selectRange(this.vrdd ? this.si - 1 : this.si, this.caret._index);\n                    this.caret._down = !this.vrdd;\n                }\n            }\n            else if (this.hasSelection)\n            {\n                this.setCaretIndex(this.vrdd ? this.selectionStart : this.selectionEnd + 1);\n            }\n            else\n            {\n                this.ds.copyFrom(this.caret);\n                this.ds.y += this.vrdd ? -this.lineHeight : this.lineHeight;\n                this.ds.x += 1;\n                this.updateClosestIndex(this.ds, true);\n                this.setCaretIndex(this.sie ? this.si + 1 : this.si);\n            }\n            e.preventDefault();\n\n            return;\n        }\n    };\n\n    keyUpEvent = (e): void =>\n    {\n        if (e.which === this.ctrlKey || e.which === this.cmdKey) this.ctrlDown = false;\n        if (e.which === this.shiftKey) this.shiftDown = false;\n\n        this.emit('keyup', e);\n\n        if (e.defaultPrevented)\n        { return; }\n    };\n\n    copyEvent = (e): void =>\n    {\n        this.emit('copy', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            const clipboardData = e.clipboardData || window.clipboardData;\n\n            clipboardData.setData('Text', this.value.slice(this.selectionStart, this.selectionEnd + 1));\n        }\n\n        e.preventDefault();\n    };\n\n    cutEvent = (e): void =>\n    {\n        this.emit('cut', e);\n\n        if (e.defaultPrevented)\n        { return; }\n\n        if (this.hasSelection)\n        {\n            this.copyEvent(e);\n            this.deleteSelection();\n        }\n\n        e.preventDefault();\n    };\n\n     pasteEvent = (e): void =>\n     {\n         this.emit('paste', e);\n\n         if (e.defaultPrevented)\n         { return; }\n\n         const clipboardData = e.clipboardData || window.clipboardData;\n\n         this.insertTextAtCaret(clipboardData.getData('Text'));\n         e.preventDefault();\n     };\n\n    inputEvent = (e): void =>\n    {\n        const c = mockDOMInput.value;\n\n        if (c.length)\n        {\n            this.insertTextAtCaret(c);\n            mockDOMInput.value = '';\n        }\n\n        e.preventDefault();\n    };\n\n    inputBlurEvent = (e): void =>\n    {\n        this.blur();\n    };\n\n    public focus = (): void =>\n    {\n        if (!this._isFocused)\n        {\n            super.focus();\n\n            const l = `${this.contentContainer.worldTransform.tx}px`;\n            const t = `${this.contentContainer.worldTransform.ty}px`;\n            const h = `${this.contentContainer.height}px`;\n            const w = `${this.contentContainer.width}px`;\n\n            mockDOMInput.setAttribute('style', `position:fixed; left:${l}; top:${t}; height:${h}; width:${w};`);\n            mockDOMInput.value = '';\n            mockDOMInput.focus();\n            mockDOMInput.setAttribute('style', 'position:fixed; left:-10px; top:-10px; width:0px; height: 0px;');\n\n            this.innerContainer.cacheAsBitmap = false;\n            mockDOMInput.addEventListener('blur', this.inputBlurEvent, false);\n            document.addEventListener('keydown', this.onKeyDown, false);\n            document.addEventListener('keyup', this.keyUpEvent, false);\n            document.addEventListener('paste', this.pasteEvent, false);\n            document.addEventListener('copy', this.copyEvent, false);\n            document.addEventListener('cut', this.cutEvent, false);\n            mockDOMInput.addEventListener('input', this.inputEvent, false);\n\n            setTimeout(() =>\n            {\n                if (!this.caret.visible && !this.selection.visible && !this.multiLine)\n                {\n                    this.setCaretIndex(this.chars.length);\n                }\n            }, 0);\n        }\n    };\n\n    public blur = (): void =>\n    {\n        if (this._isFocused)\n        {\n            super.blur();\n            this.ctrlDown = false;\n            this.shiftDown = false;\n\n            this.hideCaret();\n            this.clearSelection();\n\n            if (this.chars.length > 1)\n            {\n                this.innerContainer.cacheAsBitmap = true;\n            }\n\n            mockDOMInput.removeEventListener('blur', this.inputBlurEvent);\n            document.removeEventListener('keydown', this.onKeyDown);\n            document.removeEventListener('keyup', this.keyUpEvent);\n            document.removeEventListener('paste', this.pasteEvent);\n            document.removeEventListener('copy', this.copyEvent);\n            document.removeEventListener('cut', this.cutEvent);\n            mockDOMInput.removeEventListener('input', this.inputEvent);\n            mockDOMInput.blur();\n        }\n\n        if (!this.multiLine)\n        {\n            this.resetScrollPosition();\n        }\n    };\n\n    setCaretIndex = (index: number): void =>\n    {\n        this.caret._atEnd = index >= this.chars.length;\n        this.caret._index = Math.max(0, Math.min(this.chars.length - 1, index));\n\n        if (this.chars.length && index > 0)\n        {\n            let i = Math.max(0, Math.min(index, this.chars.length - 1));\n            let c = this.chars[i];\n\n            if (c && c.wrapped)\n            {\n                this.caret.x = c.x;\n                this.caret.y = c.y;\n            }\n            else\n            {\n                i = Math.max(0, Math.min(index - 1, this.chars.length - 1));\n                c = this.chars[i];\n                this.caret.x = this.chars[i].x + this.chars[i].width;\n                this.caret.y = (this.chars[i].lineIndex * this.lineHeight) + (this.lineHeight - this.textHeight) * 0.5;\n            }\n        }\n        else\n        {\n            this.caret.x = 0;\n            this.caret.y = (this.lineHeight - this.textHeight) * 0.5;\n        }\n\n        this.scrollToPosition(this.caret);\n        this.showCaret();\n    };\n\n    select = (): void =>\n    {\n        this.selectRange(0, this.chars.length - 1);\n    };\n\n    selectWord = (wordIndex: number): void =>\n    {\n        let startIndex = this.chars.length;\n        let endIndex = 0;\n\n        for (let i = 0; i < this.chars.length; i++)\n        {\n            if (this.chars[i].wordIndex !== wordIndex)\n            {\n                continue;\n            }\n\n            if (i < startIndex)\n            {\n                startIndex = i;\n            }\n            if (i > endIndex)\n            {\n                endIndex = i;\n            }\n        }\n\n        this.selectRange(startIndex, endIndex);\n    };\n\n    selectRange = (startIndex: number, endIndex: number): void =>\n    {\n        if (startIndex > -1 && endIndex > -1)\n        {\n            const start = Math.min(startIndex, endIndex, this.chars.length - 1);\n            const end = Math.min(Math.max(startIndex, endIndex), this.chars.length - 1);\n\n            if (start !== this.selectionStart || end !== this.selectionEnd)\n            {\n                this.hasSelection = true;\n                this.selection.visible = true;\n                this.selectionStart = start;\n                this.selectionEnd = end;\n\n                this.hideCaret();\n                this.updateSelectionGraphics();\n                this.updateSelectionColors();\n            }\n\n            this.focus();\n        }\n        else\n        {\n            this.clearSelection();\n        }\n    };\n\n    clearSelection = (): void =>\n    {\n        if (this.hasSelection)\n        {\n            // Remove color\n            this.hasSelection = false;\n            this.selection.visible = false;\n            this.selectionStart = -1;\n            this.selectionEnd = -1;\n            this.updateSelectionColors();\n        }\n    };\n\n    updateSelectionGraphics = () =>\n    {\n        const c1 = this.chars[this.selectionStart];\n\n        if (c1 !== undefined)\n        {\n            let cx = c1.x;\n            let cy = c1.y;\n            let w = 0;\n            const h = this.textHeight;\n            let cl = c1.lineIndex;\n\n            this.selection.clear();\n            for (let i = this.selectionStart; i <= this.selectionEnd; i++)\n            {\n                const c = this.chars[i];\n\n                if (c.lineIndex != cl)\n                {\n                    this.drawSelectionRect(cx, cy, w, h);\n                    cx = c.x;\n                    cy = c.y;\n                    cl = c.lineIndex;\n                    w = 0;\n                }\n\n                w += c.width;\n            }\n\n            this.drawSelectionRect(cx, cy, w, h);\n            this.innerContainer.addChildAt(this.selection, 0);\n        }\n    };\n\n    drawSelectionRect = (x: number, y: number, w: number, h: number): void =>\n    {\n        this.selection.beginFill(`0x${this.selectedBackgroundColor.slice(1)}`, 1);\n        this.selection.moveTo(x, y);\n        this.selection.lineTo(x + w, y);\n        this.selection.lineTo(x + w, y + h);\n        this.selection.lineTo(x, y + h);\n        this.selection.endFill();\n    };\n\n    get valueEvent(): string\n    {\n        return this._value;\n    }\n    set valueEvent(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this.value = val;\n            this.emit('change');\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        if (this.maxLength)\n        {\n            val = val.slice(0, this.maxLength);\n        }\n\n        if (this._value != val)\n        {\n            this._lastValue = this._value;\n            this._value = val;\n            this._dirtyText = true;\n            this.update();\n        }\n    }\n\n    get text(): string\n    {\n        return this.value;\n    }\n    set text(value: string)\n    {\n        this.value = value;\n    }\n}\n\n/*\n * Features:\n * multiLine, shift selection, Mouse Selection, Cut, Copy, Paste, Delete, Backspace, Arrow navigation, tabIndex\n *\n * Methods:\n * blur()\n * focus()\n * select() - selects all text\n * selectRange(startIndex, endIndex)\n * clearSelection()\n * setCaretIndex(index) moves caret to index\n *\n *\n * Events:\n * \"change\"\n * \"blur\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\" param: [bool]focus\n * \"keyup\" param: Event\n * \"keydown\" param: Event\n * \"copy\" param: Event\n * \"paste\" param: Event\n * \"cut\" param: Event\n * \"keyup\" param: Event\n */\n","import { Controller } from './Controller';\nimport { CheckBox } from '../CheckBox';\nimport { Stage } from '../Stage';\n\nexport type CheckGroup = string;\n\n/**\n * @memberof PUXI\n * @typedef {string} CheckGroup\n */\n\ninterface CBGroup\n{\n    checks: Array<CheckBox>;\n    selected: CheckBox;\n}\n\n/**\n * Check boxes use this controller to deselect other checkboxes in the group when\n * they are selected.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Controller\n */\nexport class CheckBoxGroupController extends Controller<CheckBox>\n{\n    protected checkGroups: Map<CheckGroup, CBGroup>;\n\n    constructor(stage: Stage)\n    {\n        super(stage);\n        this.checkGroups = new Map<CheckGroup, CBGroup>();\n    }\n\n    /**\n     * @param {PUXI.CheckBox} widget\n     * @param {PUXI.CheckGroup} checkGroup\n     * @override\n     */\n    in(widget: CheckBox, checkGroup?: CheckGroup): void\n    {\n        if (!checkGroup)\n        {\n            throw new Error('Default check groups don\\'t exist!');\n        }\n\n        const group = this.checkGroups.get(checkGroup) || this.initGroup(checkGroup);\n\n        group.checks.push(widget);\n        widget.checkGroup = checkGroup;\n    }\n\n    /**\n     * @override\n     */\n    out(widget: CheckBox): void\n    {\n        const group = this.checkGroups.get(widget.checkGroup);\n        const i = group.checks.indexOf(widget);\n\n        if (i > 0)\n        {\n            group.checks.splice(i, 1);\n        }\n\n        widget.checkGroup = null;\n    }\n\n    /**\n     * Called when a checkbox is selected. Do not call from outside.\n     *\n     * @param {CheckBox} widget\n     */\n    notifyCheck(widget: CheckBox): void\n    {\n        const group = this.checkGroups.get(widget.checkGroup);\n\n        if (!group)\n        {\n            return;\n        }\n\n        const { checks } = group;\n\n        for (let i = 0, j = checks.length; i < j; i++)\n        {\n            if (checks[i] !== widget)\n            {\n                checks[i].checked = false;\n            }\n        }\n\n        group.selected = widget;\n    }\n\n    /**\n     * @param {PUXI.CheckGroup} group\n     * @returns {CheckBox} the selected checkbox in the group\n     */\n    getSelected(group: CheckGroup): CheckBox\n    {\n        return this.checkGroups.get(group)?.selected;\n    }\n\n    /**\n     * Ensures that the check group exists in `this.checkGroups`.\n     *\n     * @param {PUXI.CheckGroup} id\n     * @protected\n     */\n    protected initGroup(id: CheckGroup): CBGroup\n    {\n        const cgroup: CBGroup = {\n            checks: [],\n            selected: null,\n        };\n\n        this.checkGroups.set(id, cgroup);\n\n        return cgroup;\n    }\n}\n","import { Controller } from './Controller';\nimport { Stage } from '../Stage';\nimport { FocusableWidget } from '../FocusableWidget';\n\nexport type TabGroup = string;\n\n/**\n * Pressing tab on a focused widget will make the next widget its tab group\n * focused. If no tab group is specified for a focusable widget, then it\n * has the `'default'` tab group.\n *\n * @memberof PUXI\n * @typedef {string} TabGroup\n */\n\n/**\n * @memberof PUXI\n * @class\n * @extends PUXI.Controller\n */\nexport class FocusController extends Controller<FocusableWidget>\n{\n    stage: Stage;\n\n    protected tabGroups: Map<TabGroup, FocusableWidget[]>;\n    protected currentItem: FocusableWidget;\n\n    useTab: boolean;\n    useForward: boolean;\n    useBack: boolean;\n\n    constructor(stage: Stage)\n    {\n        super(stage);\n\n        /**\n         * Map of tab-group names to the widgets in those groups.\n         * @member {Map<PUXI.TabGroup, PUXI.FocusableWidget[]>}\n         * @protected\n         */\n        this.tabGroups = new Map<TabGroup, FocusableWidget[]>();\n\n        /**\n         * Whether to enable tab-based focus movement.\n         * @member {boolean}\n         */\n        this.useTab = true;\n\n        /**\n         * Whether to enable forward arrow key focus movement.\n         * @member {boolean}\n         */\n        this.useForward = true;\n\n        /**\n         * Whether to enable back arrow key focus movement.\n         * @member {boolean}\n         */\n        this.useBack = true;\n    }\n\n    /**\n     * Adds the (focusable) widget to the tab group so that pressing tab repeatedly\n     * will eventually bring it into focus.\n     *\n     * @param {PUXI.FocusableWidget} widget - the widget to add\n     * @param {number}[tabIndex=0] - unique index for the widget in tab group used for ordering\n     * @param {PUXI.TabGroup}[tabGroup='default'] - tab group name\n     */\n    in(widget: FocusableWidget, tabIndex = 0, tabGroup = 'default'): void\n    {\n        let widgets = this.tabGroups.get(tabGroup);\n\n        if (!widgets)\n        {\n            widgets = [];\n            this.tabGroups.set(tabGroup, widgets);\n        }\n\n        const i = widgets.indexOf(widget);\n\n        // Push widget into tab group list if not present already.\n        if (i === -1)\n        {\n            widget.tabIndex = tabIndex !== undefined ? tabIndex : -1;\n            widget.tabGroup = tabGroup;\n\n            widgets.push(widget);\n            widgets.sort((a, b) => a.tabIndex - b.tabIndex);\n        }\n    }\n\n    /**\n     * @param {PUXI.FocusableWidget} widget\n     * @override\n     */\n    out(widget: FocusableWidget): void\n    {\n        const widgets = this.tabGroups.get(widget.tabGroup);\n\n        if (!widgets)\n        {\n            return;\n        }\n\n        const i = widgets.indexOf(widget);\n\n        if (i !== -1)\n        {\n            // Widgets should already be sorted & so deleting should not unsort it.\n            widgets.splice(i, 1);\n        }\n    }\n\n    /**\n     * Called when a widget comes into focus. Do not call this yourself.\n     *\n     * @param {FocusableWidget} widget\n     */\n    notifyFocus(widget: FocusableWidget): void\n    {\n        const lastItem = this.currentItem;\n\n        if (lastItem)\n        {\n            lastItem.blur();\n            this.emit('blur', lastItem);\n        }\n\n        this.currentItem = widget;\n\n        this.emit('focus', widget);\n        this.emit('focusChanged', widget, lastItem);\n    }\n\n    /**\n     * Clears the currently focused item without blurring it. It is called\n     * when a widget goes out of focus.\n     */\n    notifyBlur(): void\n    {\n        this.emit('blur', this.currentItem);\n        this.emit('focusChanged', null, this.currentItem);\n\n        this.currentItem = null;\n    }\n\n    /**\n     * Brings the widget into focus.\n     *\n     * @param {FocusableWidget} item\n     */\n    focus(item: FocusableWidget): void\n    {\n        const lastItem = this.currentItem;\n\n        if (lastItem)\n        {\n            lastItem.blur();\n            this.emit('blur', lastItem);\n        }\n\n        item.focus();\n\n        this.emit('focus', item);\n        this.emit('focusChanged', item, lastItem);\n    }\n\n    /**\n     * Blurs the currently focused widget out of focus.\n     */\n    blur(): void\n    {\n        if (this.currentItem)\n        {\n            this.currentItem.blur();\n\n            this.emit('blur', this.currentItem);\n            this.emit('focusChanged', null, this.currentItem);\n\n            this.currentItem = null;\n        }\n    }\n\n    /**\n     * Called when tab is pressed on a focusable widget.\n     */\n    onTab(): void\n    {\n        const { tabGroups, currentItem } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n\n            let i = tabGroup.indexOf(currentItem) + 1;\n\n            if (i >= tabGroup.length)\n            {\n                i = 0;\n            }\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Focuses the next item without wrapping, i.e. it does not go to the first\n     * item if the current one is the last item. This is called when the user\n     * presses the forward arrow key.\n     */\n    onForward(): void\n    {\n        if (!this.useForward)\n        {\n            return;\n        }\n\n        const { currentItem, tabGroups } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n\n            let i = tabGroup.indexOf(currentItem) + 1;\n\n            if (i >= tabGroup.length)\n            {\n                i = tabGroup.length - 1;\n            }\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Focuses the last item without wrapping, i.e. it does not go to the last\n     * item if the current item is the first one. This is called when the user\n     * presses the back arrow button.\n     */\n    onBack(): void\n    {\n        const { currentItem, tabGroups } = this;\n\n        if (currentItem)\n        {\n            const tabGroup = tabGroups.get(currentItem.tabGroup);\n            let i = tabGroup.indexOf(currentItem) - 1;\n\n            if (i < 0) i = 0;\n\n            this.focus(tabGroup[i]);\n        }\n    }\n\n    /**\n     * Fired when a widget gains focus.\n     * @event focus\n     * @param {PUXI.FocusableWidget} widget - the widget that gained focus.\n     */\n\n    /**\n     * Fired when a widget looses focus.\n     * @event blur\n     * @param {PUXI.FocusableWidget} widget - the widget that lost focus.\n     */\n\n    /**\n     * Fired when a new widget comes into focus or one looses focus.\n     * @event focusChanged\n     * @param {PUXI.FocusableWidget}[newFocus] - the widget that came into focus. It may\n     *      be null if only a blur occured.\n     * @param {PUXI.FocusableWidget}[oldFocus] - the widget that lost focus. It may be\n     *      null if a widget gained focused for the first time.\n     */\n}\n","import { Tween } from './Tween';\nimport * as PIXI from 'pixi.js';\n\n/**\n * This ticker is an event-emitter that can be used for running periodic tasks\n * in the rendering loop. It emits the `update` event every animation frame.\n *\n * @memberof PUXI\n * @class\n * @extends PIXI.utils.EventEmitter\n */\nexport class Ticker extends PIXI.utils.EventEmitter\n{\n    private _disabled: boolean;\n    private _now: number;\n\n    DeltaTime: number;\n    Time: number;\n    Ms: number;\n\n    constructor(autoStart: boolean)\n    {\n        super();\n\n        this._disabled = true;\n        this._now = 0;\n\n        this.DeltaTime = 0;\n        this.Time = performance.now();\n        this.Ms = 0;\n\n        if (autoStart)\n        {\n            this.disabled = false;\n        }\n\n        Ticker.shared = this;\n    }\n\n    get disabled(): boolean\n    {\n        return this._disabled;\n    }\n    set disabled(val: boolean)\n    {\n        if (!this._disabled)\n        {\n            this._disabled = true;\n        }\n        else\n        {\n            this._disabled = false;\n            Ticker.shared = this;\n\n            this.update(performance.now(), true);\n        }\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(time: number): void\n    {\n        Ticker.shared._now = time;\n        Ticker.shared.Ms = Ticker.shared._now - Ticker.shared.Time;\n        Ticker.shared.Time = Ticker.shared._now;\n        Ticker.shared.DeltaTime = Ticker.shared.Ms * 0.001;\n        Ticker.shared.emit('update', Ticker.shared.DeltaTime);\n        Tween._update(Ticker.shared.DeltaTime);\n\n        if (!Ticker.shared._disabled)\n        {\n            requestAnimationFrame(Ticker.shared.update);\n        }\n    }\n\n    /**\n     * The update event is fired periodically and it can be used to for a rendering\n     * loop.\n     * @event update\n     * @param {DOMHighResTimeStamp} deltaTime - milliseconds since last update\n     */\n\n    static shared: Ticker;\n\n    static on(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.on(event, fn, context);\n    }\n\n    static once(event: any, fn: Function, context: any): void\n    {\n        Ticker.shared.once(event, fn, context);\n    }\n\n    static removeListener(event: any, fn: Function): void\n    {\n        Ticker.shared.removeListener(event, fn);\n    }\n}\n\nTicker.shared = new Ticker(true);\n","import { Ease } from './Ease';\nimport { Erp } from './Interpolator';\nimport * as PIXI from 'pixi.js';\nimport { TweenManager } from './TweenManager';\n\nexport interface TweenTarget<T>\n{\n    [key: string]: T;\n}\n\n/**\n * Holds the information needed to perform a tweening operation. It is used internally\n * by `PUXI.tween.TweenManager`.\n *\n * @memberof PUXI.tween\n * @class\n * @template T\n */\nexport class Tween<T> extends PIXI.utils.EventEmitter\n{\n    startValue: T;\n    endValue: T;\n    erp: Erp<T>;\n    ease: Ease;\n\n    startTime: DOMHighResTimeStamp;\n    endTime: DOMHighResTimeStamp;\n\n    manager: TweenManager;\n    key: number;\n    observedValue: T;\n\n    autoCreated: boolean;\n\n    protected _repeat: number;\n    protected _flip: boolean;\n    protected _next: Tween<any>;\n\n    protected _target: TweenTarget<T>;\n    protected _observedProperty: string;\n\n    constructor( // eslint-disable-line max-params\n        manager?: TweenManager,\n        key?: number,\n        startValue?: T,\n        endValue?: T,\n        erp?: Erp<T>,\n        ease?: Ease,\n        observedValue?: T,\n        startTime?: DOMHighResTimeStamp,\n        endTime?: DOMHighResTimeStamp,\n        repeat = 1,\n        flip = true)\n    {\n        super();\n\n        /**\n         * The tween-manager whose update loop handles this tween.\n         * @member {PUXI.TweenManager}\n         */\n        this.manager = manager;\n\n        /**\n         * Unique id for this tweening operation\n         * @member {string}\n         */\n        this.key = key;\n\n        /**\n         * Start value of interpolation\n         * @member {T}\n         */\n        this.startValue = startValue;\n\n        /**\n         * End value of interpolation\n         * @member {T}\n         */\n        this.endValue = endValue;\n\n        /**\n         * Linear interpolator on tween property.\n         * @member {Erp}\n         */\n        this.erp = erp;\n\n        /**\n         * Easing function\n         * @member {Ease}\n         */\n        this.ease = ease;\n\n        /**\n         * Object that is observed and the interpolated value to be stored in.\n         * @member {T}\n         */\n        this.observedValue = observedValue;\n\n        /**\n         * @member {DOMHighResTimeStamp}\n         * @readonly\n         */\n        this.startTime = startTime;\n\n        /**\n         * @member {DOMHighResTimeStamp}\n         * @readonly\n         */\n        this.endTime = endTime;\n\n        this._repeat = repeat;\n        this._flip = flip;\n        this._next = null;\n        this._target = null;\n        this._observedProperty = null;\n\n        this.autoCreated = false;\n    }\n\n    /**\n     * Updates the observed value.\n     *\n     * @param {DOMHighResTimeStamp} t - current time\n     */\n    update(t: DOMHighResTimeStamp = performance.now()): void\n    {\n        t = (t - this.startTime) / (this.endTime - this.startTime);\n        t = Math.min(Math.max(t, 0), 1);\n\n        if (this.ease)\n        {\n            t = this.ease(t);\n        }\n\n        // Update observed value\n        this.observedValue = this.erp(\n            this.startValue,\n            this.endValue,\n            Math.min(Math.max(t, 0), 1),\n            this.observedValue,\n        );\n\n        // Emit update event\n        this.emit('update', this.observedValue, this.key);\n\n        // Update target object (if any)\n        if (this._target)\n        {\n            this._target[this._observedProperty] = this.observedValue;\n        }\n\n        // If cycle completed...\n        if (t >= 1)\n        {\n            --this._repeat;\n\n            this.emit('cycle', this);\n\n            // Repeat tween if required\n            if (this._repeat > 0)\n            {\n                if (this._flip)\n                {\n                    const { startValue: s, endValue: e } = this;\n\n                    this.endValue = s;\n                    this.startValue = e;\n                }\n\n                const duration = this.endTime - this.startTime;\n\n                this.startTime += duration;\n                this.endTime += duration;\n\n                return;\n            }\n\n            // Initiate chained tween\n            if (this._next)\n            {\n                this.manager.queue(this._next);\n            }\n\n            this.reset();\n\n            // Cleanup after completion\n            this.emit('complete', this);\n            this.removeAllListeners();\n        }\n    }\n\n    /**\n     * Configures this tween to update the observed-property on a tween target object\n     * each animation frame.\n     * @template T\n     * @param {PUXI.TweenTarget<T>} target - object on which property is being tweened\n     * @param {string} observedProperty - name of property on target\n     */\n    target(target: TweenTarget<T>, observedProperty: string): Tween<T>\n    {\n        this._target = target;\n        this._observedProperty = observedProperty;\n\n        return this;\n    }\n\n    /**\n     * Repeats this tween `repeat` no. of times again. If the tween is still running,\n     * then this is no. of times it will again (not added to the previous repeat\n     * count).\n     *\n     * Each time the tween is repeated, a `cycle` event is fired.\n     *\n     * By default, the repeat count of any tween is 1.\n     *\n     * @param {number} repeat - the repeat count\n     * @param {boolean}[flip=true] - whether to switch start/end values each cycle\n     * @returns {Tween<T>} - this tween, useful for method chaining\n     */\n    repeat(repeat: number, flip = true): Tween<T>\n    {\n        this._repeat = repeat;\n        this._flip = flip;\n\n        return this;\n    }\n\n    /**\n     * Chains a tween that will run after this one finishes.\n     *\n     * @template W\n     * @param {W} startValue\n     * @param {W} endValue\n     * @param {DOMHighResTimeStamp} duration\n     * @param {PUXI.Erp<W>} erp\n     * @param {PUXI.Ease}[ease]\n     */\n    chain<W>(startValue: W, endValue: W, duration: DOMHighResTimeStamp, erp: Erp<W>, ease: Ease): Tween<W>\n    {\n        const next = (Tween.pool.pop() || new Tween<W>()) as Tween<W>;\n\n        next.manager = this.manager;\n        next.key = 0;\n        next.startValue = startValue;\n        next.endValue = endValue;\n        next.startTime = this.endTime;\n        next.endTime = next.startTime + duration;\n        next.erp = erp;\n        next.ease = ease;\n\n        this._next = next;\n\n        return next;\n    }\n\n    /**\n     * Clears the tween's extra properties.\n     */\n    reset(): void\n    {\n        this.ease = null;\n        this._repeat = 0;\n        this._next = null;\n        this._target = null;\n        this._observedProperty = null;\n    }\n\n    /**\n     * Called when a tween is complete and no references to it are held. This\n     * will pool it (if auto-created).\n     *\n     * Custom tweens should override this.\n     */\n    destroy(): void\n    {\n        this.reset();\n\n        if (this.autoCreated)\n        {\n            Tween.pool.push(this);\n        }\n    }\n\n    /**\n     * Fired whenever the observed value is updated.\n     * @event update\n     * @param {T} observedValue\n     * @param {number} key\n     */\n\n    /**\n     * Fired whenever the tween has \"repeated\" once.\n     * @event cycle\n     * @param {Tween} cxt\n     */\n\n    /**\n     * Fired when tween has finished. References to this tween should be removed.\n     * @event complete\n     * @param {Tween} cxt\n     */\n\n    /**\n     * Used for pooling.\n     * @member {Array<TweenContext>}\n     * @static\n     */\n    static pool: Array<Tween<any>> = [];\n}\n","import { Tween } from './Tween';\nimport { Ease } from './Ease';\nimport { Erp } from './Interpolator';\nimport { Ticker } from 'pixi.js';\n\n// TODO: Prevent update loop from starting if there are no queued tweens.\n\nexport let nextTweenKey = 0;\n\n/**\n * @memberof PUXI.tween\n * @class\n */\nexport class TweenManager\n{\n    protected tweenMap: Map<number, Tween<any>>;\n\n    private isRunning: boolean;\n\n    constructor(autoStart = true)\n    {\n        this.tweenMap = new Map<number, Tween<any>>();\n\n        if (autoStart)\n        {\n            this.start();\n        }\n    }\n\n    /**\n     * Initiates a tween from `startValue` to `endValue` for the given duration\n     * using an interpolator.\n     *\n     * @template {T}\n     * @param {T} startValue - value of tween property at start\n     * @param {T} endValue - value of tween property at finish\n     * @param {DOMHighResTimeStamp | number} duration - duration of tween in milliseconds\n     * @param {PUXI.Erp<T>} erp - interpolator on tween property\n     * @param {PUXI.Ease}[ease] - easing function\n     */\n    tween<T>(\n        startValue: T,\n        endValue: T,\n        duration: DOMHighResTimeStamp,\n        erp: Erp<T>,\n        ease?: Ease,\n    ): Tween<T>\n    {\n        const tweenCxt = (Tween.pool.pop() || new Tween()) as Tween<T>;\n\n        tweenCxt.autoCreated = true;\n        tweenCxt.reset();\n\n        tweenCxt.manager = this;\n        tweenCxt.key = nextTweenKey++;\n        tweenCxt.startValue = startValue;\n        tweenCxt.endValue = endValue;\n        tweenCxt.erp = erp;\n        tweenCxt.ease = ease;\n        tweenCxt.startTime = performance.now();\n        tweenCxt.endTime = tweenCxt.startTime + duration;\n\n        this.tweenMap.set(tweenCxt.key, tweenCxt);\n        tweenCxt.on('complete', this.onTweenComplete);\n\n        return tweenCxt;\n    }\n\n    /**\n     * Queues the tween context so that it is updated every frame.\n     *\n     * @param {PUXI.Tween} context\n     * @returns {PUXI.TweenManager} this manager, useful for method chaining\n     */\n    queue(context: Tween<any>): TweenManager\n    {\n        context.key = nextTweenKey++;\n\n        this.tweenMap.set(context.key, context);\n        context.on('complete', this.onTweenComplete);\n\n        return this;\n    }\n\n    /**\n     * Starts the update loop.\n     */\n    start(): void\n    {\n        if (this.isRunning)\n        {\n            return;\n        }\n\n        Ticker.shared.add(this.onUpdate);\n        this.isRunning = true;\n    }\n\n    /**\n     * Stops the update loop. This will prevent tweens from getting updated.\n     */\n    stop(): void\n    {\n        if (!this.isRunning)\n        {\n            return;\n        }\n\n        Ticker.shared.remove(this.onUpdate);\n        this.isRunning = false;\n    }\n\n    onUpdate = (): void =>\n    {\n        for (const [, cxt] of this.tweenMap)\n        {\n            cxt.update();\n        }\n    };\n\n    protected onTweenComplete = (cxt: Tween<any>): void =>\n    {\n        this.tweenMap.delete(cxt.key);\n\n        cxt.destroy();\n    };\n}\n","export type Ease = (t: number) => number;\n\n/**\n * @memberof PUXI\n * @typedef {Function} Ease\n * @param {number} t - interpolation parameter (b/w 0 and 1) that increases linearly\n * @returns {numeber} - output interpolation parameter (b/w 0 and 1)\n */\n\n/**\n * Quadratic ease-in\n *\n * @memberof PUXI\n * @type Ease\n * @param {number} t\n * @returns {number}\n */\nexport const EaseIn: Ease = (t: number) => t * t;\n\n/**\n * Quadratic ease-out\n *\n * @memberof PUXI\n * @type Ease\n * @param {number} t\n * @returns {number}\n */\nexport const EaseOut: Ease = (t: number) => (1 - t) * (1 - t);\n\n/**\n * Quadratic ease-in & ease-out mixed!\n *\n * @memberof PUXI\n * @type Ease\n * @param {number} t\n * @returns {number}\n */\nexport const EaseBoth: Ease = (t: number) => ((t <= 0.5)\n    ? 2 * t * t\n    : ((2 * ((t - 0.5) * (1.5 - t))) + 0.5));\n","import * as PIXI from 'pixi.js';\n\nexport type Erp<T> = (startValue: T, endValue: T, t: number, observedValue?: T) => T;\n\n/**\n * Defines a (linear) interpolator on a type `T`.\n *\n * @memberof PUXI\n * @typedef {Function} Erp\n * @template T\n * @param {T} startValue\n * @param {T} endValue\n * @param {number} t - interpolation parameter between 0 and 1\n * @param {T}[observedValue]\n */\n\n/**\n * Interpolation function for number properties like alpha, rotation, component\n * position/scale/skew, elevation, etc.\n *\n * @memberof PUXI\n * @extends PUXI.Erp<number>\n * @param {number} startValue\n * @param {number} endValue\n * @param {number} t\n */\nexport const NumberErp: Erp<number> = (startValue: number, endValue: number, t: number) =>\n    ((1 - t) * startValue) + (t * endValue);\n\n/**\n * Interpolation function for 2D vector properties like position, scale, skew, etc.\n *\n * @memberof PUXI\n * @extends PUXI.Erp<PIXI.Point>\n * @param {PIXI.Point} startValue\n * @param {PIXI.Point} endValue\n * @param {number} t\n * @param {PIXI.Point} observedValue\n */\nexport const PointErp: Erp<PIXI.Point> = (\n    startValue: PIXI.Point,\n    endValue: PIXI.Point,\n    t: number,\n    observedValue: PIXI.Point,\n): PIXI.Point =>\n{\n    if (!observedValue)\n    {\n        observedValue = new PIXI.Point();\n    }\n\n    observedValue.x = ((1 - t) * startValue.x) + (t * endValue.x);\n    observedValue.y = ((1 - t) * startValue.y) + (t * endValue.y);\n\n    return observedValue;\n};\n\n","import { ILayoutManager } from './ILayoutManager';\nimport { Widget } from '../Widget';\nimport { AnchorLayoutOptions, ALIGN, LayoutOptions } from '../layout-options';\nimport { MeasureMode } from '../IMeasurable';\nimport { WidgetGroup } from '../WidgetGroup';\n\ninterface IAnchorCache {\n    remeasure: boolean;\n}\n\n/**\n * `AnchorLayout` is used in conjunction with `AnchorLayoutOptions`.\n *\n * @memberof PUXI\n * @class\n * @example\n * ```\n * parent.useLayout(new PUXI.AnchorLayout());\n * ```\n */\nexport class AnchorLayout implements ILayoutManager\n{\n    private measuredWidth: number;\n    private measuredHeight: number;\n\n    private host: WidgetGroup;\n\n    onAttach(host: WidgetGroup): void\n    {\n        this.host = host;\n    }\n\n    onDetach(): void\n    {\n        this.host = null;\n    }\n\n    onLayout(): void\n    {\n        const parent = this.host;\n        const { widgetChildren } = parent;\n\n        const parentWidth = parent.contentWidth;\n        const parentHeight = parent.contentHeight;\n\n        for (let i = 0; i < widgetChildren.length; i++)\n        {\n            const child = widgetChildren[i];\n            const layoutOptions = (child.layoutOptions || {}) as AnchorLayoutOptions;\n\n            const childWidth = child.getMeasuredWidth();\n            const childHeight = child.getMeasuredHeight();\n            const anchorLeft = this.calculateAnchor(layoutOptions.anchorLeft || 0, parentWidth, false);\n            const anchorTop = this.calculateAnchor(layoutOptions.anchorTop || 0, parentHeight, false);\n            const anchorRight = this.calculateAnchor(layoutOptions.anchorRight || 0, parentWidth, true);\n            const anchorBottom = this.calculateAnchor(layoutOptions.anchorBottom || 0, parentHeight, true);\n\n            let x = anchorLeft;\n            let y = anchorTop;\n\n            switch (layoutOptions.horizontalAlign)\n            {\n                case ALIGN.MIDDLE:\n                    x = (anchorRight + anchorLeft - childWidth) / 2;\n                    break;\n                case ALIGN.RIGHT:\n                    x = anchorRight - childWidth;\n                    break;\n            }\n\n            switch (layoutOptions.verticalAlign)\n            {\n                case ALIGN.MIDDLE:\n                    y = (anchorBottom + anchorTop - childHeight) / 2;\n                    break;\n                case ALIGN.BOTTOM:\n                    y = anchorBottom - childHeight;\n                    break;\n            }\n\n            child.layout(x, y, x + childWidth, y + childHeight);\n        }\n    }\n\n    onMeasure(widthLimit: number, heightLimit: number, widthMode: MeasureMode, heightMode: MeasureMode): void\n    {\n        const children = this.host.widgetChildren;\n\n        let naturalWidth = 0;\n        let naturalHeight = 0;\n\n        const baseWidthMode = widthMode === MeasureMode.EXACTLY ? MeasureMode.AT_MOST : widthMode;\n        const baseHeightMode = heightMode === MeasureMode.EXACTLY ? MeasureMode.AT_MOST : heightMode;\n\n        let hasFillers = false;\n\n        // First pass: measure children and find our natural width/height. If we have a upper\n        // limit, then pass that on.\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n            if (lopt.width === LayoutOptions.FILL_PARENT)\n            {\n                throw new Error('AnchorLayout does not support width = FILL_PARENT. Use anchorLeft = 0 & anchorRight = 0');\n            }\n            if (lopt.height === LayoutOptions.FILL_PARENT)\n            {\n                throw new Error('AnchorLayout does not support height = FILL_PARENT. Use anchorTop = 0 & anchorBottom = 0');\n            }\n\n            const anchorLeft = this.calculateAnchor(lopt.anchorLeft || 0, widthLimit, false);\n            const anchorTop = this.calculateAnchor(lopt.anchorTop || 0, heightLimit, false);\n            const anchorRight = this.calculateAnchor(lopt.anchorRight || 0, widthLimit, true);\n            const anchorBottom = this.calculateAnchor(lopt.anchorBottom || 0, heightLimit, true);\n\n            // Does child have a pre-determined width or height?\n            const widthConst = lopt.isWidthPredefined;\n            const heightConst = lopt.isHeightPredefined;\n            const widgetWidthLimit = widthConst ? lopt.width : anchorRight - anchorLeft;\n            const widgetHeightLimit = heightConst ? lopt.height : anchorBottom - anchorTop;\n\n            const widgetWidthMode = widthConst ? MeasureMode.EXACTLY : baseWidthMode;\n            const widgetHeightMode = heightConst ? MeasureMode.EXACTLY : baseHeightMode;\n\n            // Fillers need to be remeasured using EXACTLY.\n            hasFillers = hasFillers || lopt.width === 0 || lopt.height === 0;\n\n            widget.measure(widgetWidthLimit, widgetHeightLimit, widgetWidthMode, widgetHeightMode);\n\n            const horizontalReach = this.calculateReach(\n                lopt.anchorLeft || 0, lopt.anchorRight || 0, widget.getMeasuredWidth());\n            const verticalReach = this.calculateReach(\n                lopt.anchorTop || 0, lopt.anchorBottom || 0, widget.getMeasuredHeight());\n\n            naturalWidth = Math.max(naturalWidth, horizontalReach);\n            naturalHeight = Math.max(naturalHeight, verticalReach);\n        }\n\n        this.measuredWidth = Widget.resolveMeasuredDimen(naturalWidth, widthLimit, widthMode);\n        this.measuredHeight = Widget.resolveMeasuredDimen(naturalHeight, heightLimit, heightMode);\n\n        if (!hasFillers)\n        {\n            return;\n        }\n\n        // Handle fillers.\n        for (let i = 0, j = children.length; i < j; i++)\n        {\n            const widget = children[i];\n            const lopt = (widget.layoutOptions || LayoutOptions.DEFAULT) as AnchorLayoutOptions;\n\n            if (lopt.width === 0 || lopt.height === 0)\n            {\n                const anchorLeft = this.calculateAnchor(lopt.anchorLeft || 0, this.measuredWidth, false);\n                const anchorTop = this.calculateAnchor(lopt.anchorTop || 0, this.measuredHeight, false);\n                const anchorRight = this.calculateAnchor(lopt.anchorRight || 0, this.measuredWidth, true);\n                const anchorBottom = this.calculateAnchor(lopt.anchorBottom || 0, this.measuredHeight, true);\n\n                widget.measure(\n                    lopt.isWidthPredefined ? lopt.width : anchorRight - anchorLeft,\n                    lopt.isHeightPredefined ? lopt.height : anchorBottom - anchorTop,\n                    lopt.width === 0 || lopt.isWidthPredefined ? MeasureMode.EXACTLY : MeasureMode.AT_MOST,\n                    lopt.height === 0 || lopt.isHeightPredefined ? MeasureMode.EXACTLY : MeasureMode.AT_MOST,\n                );\n            }\n        }\n    }\n\n    getMeasuredWidth(): number\n    {\n        return this.measuredWidth;\n    }\n\n    getMeasuredHeight(): number\n    {\n        return this.measuredHeight;\n    }\n\n    /**\n     * Calculates the actual value of the anchor, given the parent's dimension.\n     *\n     * @param {number} anchor - anchor as given in layout options\n     * @param {number} limit - parent's dimension\n     * @param {boolean} limitSubtract - true for right/bottom anchors, false for left/top\n     */\n    protected calculateAnchor(anchor: number, limit: number, limitSubtract: boolean): number\n    {\n        const offset = Math.abs(anchor) < 1 ? anchor * limit : anchor;\n\n        return limitSubtract ? limit - offset : offset;\n    }\n\n    /**\n     * Calculates the \"reach\" of a child widget, which is the minimum dimension of\n     * the parent required to fully fit the child.\n     *\n     * @param {number} startAnchor - left or top anchor as given in layout options\n     * @param {number} endAnchor - right or bottom anchor as given in layout options\n     * @param {number} dimen - measured dimension of the widget (width or height)\n     */\n    protected calculateReach(startAnchor: number, endAnchor: number, dimen: number): number\n    {\n        if (Math.abs(startAnchor) < 1 && Math.abs(endAnchor) < 1)\n        {\n            return dimen / (1 - endAnchor - startAnchor);\n        }\n        else if (Math.abs(startAnchor) < 1)\n        {\n            return (endAnchor + dimen) / (1 - startAnchor);\n        }\n        else if (Math.abs(endAnchor) < 1)\n        {\n            return (startAnchor + dimen) / (1 - endAnchor);\n        }\n\n        return startAnchor + dimen + endAnchor;\n    }\n}\n","import { ALIGN } from './Align';\nimport { LayoutOptions } from './LayoutOptions';\n\ninterface IAnchorLayoutParams\n{\n    anchorLeft?: number;\n    anchorTop?: number;\n    anchorRight?: number;\n    anchorBottom?: number;\n    horizontalAlign?: ALIGN;\n    verticalAlign?: ALIGN;\n    width: number | string;\n    height: number | string;\n}\n\n/**\n * @memberof PUXI\n * @interface IAnchorLayoutParams\n * @property {number} anchorLeft - distance from parent's left inset to child's left edge\n * @property {number} anchorTop - distance from parent's top inset to child's top edge\n * @property {number} anchorRight - distance from parent's right inset to child's right edge\n * @property {number} anchorBottom - distance from parent's bottom insets to child's bottom edge\n * @property {PUXI.ALIGN} horizontalAlign - horizontal alignment of child in anchor region\n * @property {PUXI.ALIGN} verticalAlign - vertical alignment of child in anchor region\n * @property {number | string} width - requested width of widget (default is `WRAP_CONTENT`)\n * @property {number | string} height - requested height of widget (default is `WRAP_CONTENT`)\n */\n\n/**\n * Anchors the edge of a widget to defined offsets from the parent's insets.\n *\n * The following example will render a widget at (10px, 15%) with a width extending\n * to the parent's center and a height extending till 40px above the parent's bottom\n * inset.\n * ```js\n * new PUXI.AnchoredLayoutOptions({\n *      anchorLeft: 10,\n *      anchorTop: .15,\n *      anchorRight: .5,\n *      anchorBottom: 40\n * });\n * ```\n *\n * ### Intra-anchor region alignment\n *\n * You can specify how the widget should be aligned in the intra-anchor region using the\n * `horizontalAlign` and `verticalAlign` properties.\n *\n * ### Support for FILL_PARENT and percentage-of-parent dimensions\n *\n * Anchor layout does not support a width/height that is `LayoutOptions.FILL_PARENT`\n * or a percentage of the parent's width/height. Instead, you can define anchors that\n * result in the equivalent behaviour.\n *\n * @memberof PUXI\n * @extends PUXI.LayoutOptions\n * @class\n */\nexport class AnchorLayoutOptions extends LayoutOptions\n{\n    public anchorLeft: number;\n    public anchorTop: number;\n    public anchorRight: number;\n    public anchorBottom: number;\n\n    public horizontalAlign: ALIGN;\n    public verticalAlign: ALIGN;\n\n    constructor(options: IAnchorLayoutParams)\n    {\n        super(options.width, options.height);\n\n        this.anchorLeft = options.anchorLeft || 0;\n        this.anchorTop = options.anchorTop || 0;\n        this.anchorBottom = options.anchorBottom || 0;\n        this.anchorRight = options.anchorRight || 0;\n\n        this.horizontalAlign = options.horizontalAlign || ALIGN.LEFT;\n        this.verticalAlign = options.verticalAlign || ALIGN.CENTER;\n    }\n}\n","import { ClickManager } from './event/ClickManager';\nimport { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { TextWidget } from './TextWidget';\nimport * as PIXI from 'pixi.js';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\n\n/**\n * @memberof PUXI\n * @interface\n * @extends PUXI.IFocusableOptions\n * @property {PUXI.TextWidget | string} text\n */\ninterface IButtonOptions extends IFocusableOptions\n{\n    background?: PIXI.Container;\n    text?: TextWidget | string;\n    tabIndex?: number;\n    tabGroup?: any;\n}\n\n/**\n * Button that can be clicked.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class Button extends FocusableWidget\n{\n    isHover: boolean;\n\n    protected textWidget: TextWidget;\n\n    click: () => void;\n    /**\n     * @param [options.background}] {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for Button\n     * @param [options.text=null] {PIXI.UI.Text} optional text\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     * @param [options.width=options.background.width] {Number|String} width\n     * @param [options.height=options.background.height] {Number|String} height\n     */\n    constructor(options: IButtonOptions)\n    {\n        super(options);\n\n        this.isHover = false;\n\n        if (typeof options.text === 'string')\n        {\n            options.text = new TextWidget(options.text, new PIXI.TextStyle());\n        }\n\n        this.textWidget = options.text.setLayoutOptions(\n            new FastLayoutOptions({\n                width: LayoutOptions.WRAP_CONTENT,\n                height: LayoutOptions.WRAP_CONTENT,\n                x: 0.5,\n                y: 0.5,\n                anchor: FastLayoutOptions.CENTER_ANCHOR,\n            }),\n        ) as TextWidget;\n\n        if (this.textWidget)\n        {\n            this.addChild(this.textWidget);\n        }\n\n        this.contentContainer.buttonMode = true;\n\n        this.setupClick();\n    }\n\n    private setupClick(): void\n    {\n        const clickEvent: ClickManager = this.eventBroker.click as ClickManager;\n\n        clickEvent.onHover = (e, over): void =>\n        {\n            this.isHover = over;\n            this.emit('hover', over);\n        };\n\n        clickEvent.onPress = (e, isPressed: boolean): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickEvent.onClick = (e): void =>\n        {\n            this.click();\n        };\n\n        this.click = (): void =>\n        {\n            this.emit('click');\n        };\n    }\n\n    update(): void\n    {\n        super.update();\n        // No update needed\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n        this.setupClick();\n\n        this.insetContainer.interactiveChildren = false;\n        // lazy to make sure all children is initialized (trying to get the bedst hitArea possible)\n    }\n\n    /**\n     * Label for this button.\n     * @member {string}\n     */\n    get value(): string\n    {\n        if (this.textWidget)\n        {\n            return this.textWidget.text;\n        }\n\n        return '';\n    }\n    set value(val: string)\n    {\n        if (this.textWidget)\n        {\n            this.textWidget.text = val;\n        }\n    }\n\n    get text(): any\n    {\n        return this.textWidget;\n    }\n    set text(val: any)\n    {\n        this.value = val;\n    }\n}\n\n/*\n * Features:\n * Button, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n *\n * Properties:\n * checked: get/set Button checked\n * value: get/set Button value\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n *\n */\n","import { FocusableWidget, IFocusableOptions } from './FocusableWidget';\nimport { ClickManager } from './event/ClickManager';\nimport { InteractiveGroup } from './InteractiveGroup';\nimport { LayoutOptions, FastLayoutOptions } from './layout-options';\nimport { CheckGroup } from './ctl';\nimport { TextWidget } from './TextWidget';\n\ninterface ICheckBoxOptions extends IFocusableOptions\n{\n    checked?: boolean;\n    background: PIXI.Container;\n    checkmark?: PIXI.Container;\n    checkGroup?: CheckGroup;\n    value?: string;\n    tabIndex?: number;\n    tabGroup?: number;\n}\n\n/**\n * @memberof PUXI\n * @extends PUXI.IFocusableOptions\n * @member {boolean} checked\n * @member {PIXI.Container}[checkmark]\n * @member {PUXI.CheckGroup}[checkGroup]\n * @member {string}[value]\n */\n\n/**\n * A checkbox is a button can be selected (checked). It has a on/off state that\n * can be controlled by the user.\n *\n * When used in a checkbox group, the group will control whether the checkbox can\n * be selected or not.\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.FocusableWidget\n */\nexport class CheckBox extends FocusableWidget\n{\n    private _checked: boolean;\n    private _value: string;\n\n    private label: TextWidget;\n    private checkmark: InteractiveGroup;\n\n    checkGroup: CheckGroup;\n\n    /**\n     * @param {PUXI.ICheckBoxOptions} options\n     * @param [options.checked=false] {bool} is checked\n     * @param options.background {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as background for CheckBox\n     * @param options.checkmark {(PIXI.UI.SliceSprite|PIXI.UI.Sprite)} will be used as checkmark for CheckBox\n     * @param {PUXI.CheckGroup}[options.checkGroup=null] CheckGroup name\n     * @param options.value {String} mostly used along with checkgroup\n     * @param [options.tabIndex=0] {Number} input tab index\n     * @param [options.tabGroup=0] {Number|String} input tab group\n     */\n    constructor(options: ICheckBoxOptions)\n    {\n        super(options);\n        this._checked = options.checked !== undefined ? options.checked : false;\n        this._value = options.value || '';\n        this.checkGroup = options.checkGroup || null;\n\n        this.checkmark = new InteractiveGroup();\n        this.checkmark.contentContainer.addChild(options.checkmark);\n        this.checkmark.setLayoutOptions(\n            new FastLayoutOptions({\n                width: LayoutOptions.WRAP_CONTENT,\n                height: LayoutOptions.WRAP_CONTENT,\n                x: 0.5,\n                y: 0.5,\n                anchor: FastLayoutOptions.CENTER_ANCHOR,\n            }),\n        );\n        this.checkmark.alpha = this._checked ? 1 : 0;\n        this.addChild(this.checkmark);\n\n        this.contentContainer.buttonMode = true;\n    }\n\n    update(): void\n    {\n        // No need for updating\n    }\n\n    get checked(): boolean\n    {\n        return this._checked;\n    }\n    set checked(val: boolean)\n    {\n        if (val !== this._checked)\n        {\n            if (this.checkGroup !== null && val)\n            {\n                this.stage.checkBoxGroupController.notifyCheck(this);\n            }\n\n            this._checked = val;\n            this.change(val);\n        }\n    }\n\n    get value(): string\n    {\n        return this._value;\n    }\n    set value(val: string)\n    {\n        this._value = val;\n\n        if (this.checked)\n        {\n            this.stage.checkBoxGroupController.notifyCheck(this);\n        }\n    }\n\n    get selectedValue(): string\n    {\n        return this.stage\n            ?.checkBoxGroupController\n            .getSelected(this.checkGroup)\n            .value;\n    }\n\n    initialize(): void\n    {\n        super.initialize();\n\n        const clickMgr = (this.eventBroker.click as ClickManager);\n\n        clickMgr.onHover = (_, over): void =>\n        {\n            this.emit('hover', over);\n        };\n\n        clickMgr.onPress = (e, isPressed): void =>\n        {\n            if (isPressed)\n            {\n                this.focus();\n                e.data.originalEvent.preventDefault();\n            }\n\n            this.emit('press', isPressed);\n        };\n\n        clickMgr.onClick = (): void =>\n        {\n            this.click();\n        };\n\n        if (this.checkGroup !== null)\n        {\n            this.stage.checkBoxGroupController.in(this, this.checkGroup);\n        }\n    }\n\n    protected change = (val: boolean): void =>\n    {\n        if (this.checkmark)\n        {\n            this.checkmark.alpha = val ? 1 : 0;\n        }\n    };\n\n    protected click = (): void =>\n    {\n        this.emit('click');\n\n        if (this.checkGroup !== null && this.checked)\n        {\n            return;\n        }\n\n        this.checked = !this.checked;\n        this.emit('changed', this.checked);\n    };\n\n    /**\n     * This event is fired when the user's cursor hovers over this checkbox.\n     * @event hover\n     */\n\n    /**\n     * This event is fired when the user clicks on the checkbox, regardless of whether\n     * the checkbox was selected or deselected.\n     * @event click\n     */\n\n    /**\n     * This event is fired when the user selects/deselects the checkbox, i.e. the \"value\"\n     * of the checkbox changes. This is also fired when setting the `checked` property\n     * directly.\n     * @event changed\n     * @param {boolean} checked - whether the checkbox is checked\n     */\n}\n\n/*\n * Features:\n * checkbox, radio button (checkgroups)\n *\n * Methods:\n * blur()\n * focus()\n * change(checked) //only exposed to overwrite (if you dont want to hard toggle alpha of checkmark)\n *\n * Properties:\n * checked: get/set checkbox checked\n * value: get/set checkbox value\n * selectedValue: get/set selected value for checkgroup\n *\n * Events:\n * \"hover\"          param: [bool]isHover (hover/leave)\n * \"press\"          param: [bool]isPressed (pointerdown/pointerup)\n * \"click\"\n * \"blur\"\n * \"focus\"\n * \"focusChanged\"   param: [bool]isFocussed\n * \"change\"         param: [bool]isChecked\n *\n */\n","import { Widget } from './Widget';\nimport * as PIXI from 'pixi.js';\n\n/**\n * A sliced sprite with dynamic width and height.\n *\n * @class\n * @memberof PUXI\n * @param Texture {PIXI.Texture} the texture for this SliceSprite\n * @param BorderWidth {Number} Width of the sprite borders\n * @param horizontalSlice {Boolean} Slice the sprite horizontically\n * @param verticalSlice {Boolean} Slice the sprite vertically\n * @param [tile=false] {Boolean} tile or streach\n */\nexport class SliceSprite extends Widget\n{\n    ftl: PIXI.Rectangle;\n    ftr: PIXI.Rectangle;\n\n    fbl: PIXI.Rectangle;\n    fbr: PIXI.Rectangle;\n\n    ft: PIXI.Rectangle;\n    fb: PIXI.Rectangle;\n    fr: PIXI.Rectangle;\n    fl: PIXI.Rectangle;\n    ff: PIXI.Rectangle;\n\n    stl: PIXI.Sprite;\n    str: PIXI.Sprite;\n    sbl: PIXI.Sprite;\n    sbr: PIXI.Sprite;\n\n    st: PIXI.Sprite;\n    sb: PIXI.Sprite;\n    sl: PIXI.Sprite;\n    sr: PIXI.Sprite;\n\n    sf: PIXI.Sprite;\n\n    bw: number;\n    vs: boolean;\n    hs: boolean;\n    t: PIXI.BaseTexture;\n    f: PIXI.Rectangle;\n\n    tile: any;\n\n    constructor(texture: PIXI.Texture, borderWidth, horizontalSlice, verticalSlice, tile)\n    {\n        super(texture.width, texture.height);\n\n        this.bw = borderWidth || 5;\n        this.vs = typeof verticalSlice !== 'undefined' ? verticalSlice : true;\n        this.hs = typeof horizontalSlice !== 'undefined' ? horizontalSlice : true;\n        this.t = texture.baseTexture;\n        this.f = texture.frame;\n        this.tile = tile;\n\n        if (this.hs)\n        {\n            this.setting.minWidth = borderWidth * 2;\n        }\n        if (this.vs)\n        {\n            this.setting.minHeight = borderWidth * 2;\n        }\n\n        /**\n     * Updates the sliced sprites position and size\n     *\n     * @private\n     */\n        this.update = function ()\n        {\n            if (!this.initialized) return;\n            if (vs && hs)\n            {\n                str.x = sbr.x = sr.x = this._width - bw;\n                sbl.y = sbr.y = sb.y = this._height - bw;\n                sf.width = st.width = sb.width = this._width - bw * 2;\n                sf.height = sl.height = sr.height = this._height - bw * 2;\n            }\n            else if (hs)\n            {\n                sr.x = this._width - bw;\n                sl.height = sr.height = sf.height = this._height;\n                sf.width = this._width - bw * 2;\n            }\n            else\n            { // vs\n                sb.y = this._height - bw;\n                st.width = sb.width = sf.width = this._width;\n                sf.height = this._height - bw * 2;\n            }\n\n            if (this.tint !== null)\n            {\n                sf.tint = this.tint;\n                if (vs && hs) stl.tint = str.tint = sbl.tint = sbr.tint = this.tint;\n                if (hs) sl.tint = sr.tint = this.tint;\n                if (vs) st.tint = sb.tint = this.tint;\n            }\n\n            if (this.blendMode !== null)\n            {\n                sf.blendMode = this.blendMode;\n                if (vs && hs) stl.blendMode = str.blendMode = sbl.blendMode = sbr.blendMode = this.blendMode;\n                if (hs) sl.blendMode = sr.blendMode = this.blendMode;\n                if (vs) st.blendMode = sb.blendMode = this.blendMode;\n            }\n        };\n    }\n\n    initialize()\n    {\n        super.initialize();\n        const { f, bw } = this;\n\n        // get frames\n        if (this.vs && this.hs)\n        {\n            this.ftl = new PIXI.Rectangle(f.x, f.y, bw, bw);\n            this.ftr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, bw);\n            this.fbl = new PIXI.Rectangle(f.x, f.y + f.height - bw, bw, bw);\n            this.fbr = new PIXI.Rectangle(f.x + f.width - bw, f.y + f.height - bw, bw, bw);\n            this.ft = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, bw);\n            this.fb = new PIXI.Rectangle(f.x + bw, f.y + f.height - bw, f.width - bw * 2, bw);\n            this.fl = new PIXI.Rectangle(f.x, f.y + bw, bw, f.height - bw * 2);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y + bw, bw, f.height - bw * 2);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y + bw, f.width - bw * 2, f.height - bw * 2);\n        }\n        else if (this.hs)\n        {\n            this.fl = new PIXI.Rectangle(this.f.x, f.y, bw, f.height);\n            this.fr = new PIXI.Rectangle(f.x + f.width - bw, f.y, bw, f.height);\n            this.ff = new PIXI.Rectangle(f.x + bw, f.y, f.width - bw * 2, f.height);\n        }\n        else\n        { // vs\n            this.ft = new PIXI.Rectangle(f.x, f.y, f.width, bw);\n            this.fb = new PIXI.Rectangle(f.x, f.y + f.height - bw, f.width, bw);\n            this.ff = new PIXI.Rectangle(f.x, f.y + bw, f.width, f.height - bw * 2);\n        }\n\n        // TODO: swap frames if rotation\n\n        const { t, ff, fl, fr, ft, fb } = this;\n\n        // make sprites\n        this.sf = this.tile\n            ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ff))\n            : new PIXI.Sprite(new PIXI.Texture(t, ff));\n        this.contentContainer.addChildAt(this.sf, 0);\n\n        if (this.vs && this.hs)\n        {\n            this.stl = new PIXI.Sprite(new PIXI.Texture(t, this.ftl));\n            this.str = new PIXI.Sprite(new PIXI.Texture(t, this.ftr));\n            this.sbl = new PIXI.Sprite(new PIXI.Texture(t, this.fbl));\n            this.sbr = new PIXI.Sprite(new PIXI.Texture(t, this.fbr));\n            this.contentContainer.addChildAt(this.stl, 0);\n            this.contentContainer.addChildAt(this.str, 0);\n            this.contentContainer.addChildAt(this.sbl, 0);\n            this.contentContainer.addChildAt(this.sbr, 0);\n        }\n        if (hs)\n        {\n            this.sl = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fl))\n                : new PIXI.Sprite(new PIXI.Texture(t, fl));\n            this.sr = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fr))\n                : new PIXI.Sprite(new PIXI.Texture(t, fr));\n\n            this.contentContainer.addChildAt(this.sl, 0);\n            this.contentContainer.addChildAt(this.sr, 0);\n        }\n        if (this.vs)\n        {\n            this.st = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, ft))\n                : new PIXI.Sprite(new PIXI.Texture(t, ft));\n            this.sb = this.tile\n                ? new PIXI.extras.TilingSprite(new PIXI.Texture(t, fb))\n                : new PIXI.Sprite(new PIXI.Texture(t, fb));\n            this.contentContainer.addChildAt(this.st, 0);\n            this.contentContainer.addChildAt(this.sb, 0);\n        }\n\n        // set constant position and sizes\n        if (this.vs && this.hs)\n        {\n            this.st.x = bw;\n            this.sb.x = bw;\n            this.sl.y = bw;\n            this.sr.y = bw;\n            this.stl.width = bw;\n            this.str.width = bw;\n            this.sbl.width = bw;\n            this.sbr.width = bw;\n            this.stl.height = bw;\n            this.str.height = bw;\n            this.sbl.height = bw;\n            this.sbr.height = bw;\n        }\n\n        if (this.hs)\n        {\n            this.sf.x = this.sl.width = this.sr.width = bw;\n        }\n        if (this.vs)\n        {\n            this.sf.y = this.st.height = this.sb.height = bw;\n        }\n    }\n\n    update(): void\n    {\n        // NO updates\n    }\n}\n\n","import { InteractiveGroup } from './InteractiveGroup';\nimport { Tween } from './Tween';\nimport { EaseBase } from './Ease/EaseBase';\nimport { Widget } from './Widget';\n\n/**\n * An UI Container object\n *\n * @memberof PUXI\n * @class\n * @extends PUXI.Widget\n * @param desc {Boolean} Sort the list descending\n * @param tweenTime {Number} if above 0 the sort will be animated\n * @param tweenEase {PIXI.UI.Ease} ease method used for animation\n */\nexport class SortableList extends InteractiveGroup\n{\n    desc: boolean;\n    tweenTime: number;\n    tweenEase: EaseBase;\n    items: any[];\n\n    _sortTimeout: NodeJS.Timeout;\n\n    constructor(desc, tweenTime, tweenEase)\n    {\n        super(0, 0);\n\n        this.desc = typeof desc !== 'undefined' ? desc : false;\n        this.tweenTime = tweenTime || 0;\n        this.tweenEase = tweenEase;\n        this.items = [];\n    }\n\n    addChild(UIObject: any, fnValue?, fnThenBy?): void\n    {\n        super.addChild(UIObject);\n\n        if (this.items.indexOf(UIObject) === -1)\n        {\n            this.items.push(UIObject);\n        }\n\n        if (typeof fnValue === 'function')\n        {\n            UIObject._sortListValue = fnValue;\n        }\n\n        if (typeof fnThenBy === 'function')\n        {\n            UIObject._sortListThenByValue = fnThenBy;\n        }\n\n        if (!UIObject._sortListRnd)\n        {\n            UIObject._sortListRnd = Math.random();\n        }\n\n        this.sort();\n    }\n\n    removeChild(UIObject): void\n    {\n        if (arguments.length > 1)\n        {\n            for (let i = 0; i < arguments.length; i++)\n            {\n                this.removeChild(arguments[i]);\n            }\n        }\n        else\n        {\n            super.removeChild(UIObject);\n            const index = this.items.indexOf(UIObject);\n\n            if (index !== -1)\n            {\n                this.items.splice(index, 1);\n            }\n\n            this.sort();\n        }\n    }\n\n    sort(instant = false): void\n    {\n        clearTimeout(this._sortTimeout);\n\n        if (instant)\n        {\n            this._sort();\n\n            return;\n        }\n\n        this._sortTimeout = setTimeout(() => { this._sort(); }, 0);\n    }\n\n    _sort()\n    {\n        const desc = this.desc;\n        let y = 0;\n        let alt = true;\n\n        this.items.sort(function (a, b)\n        {\n            let res = a._sortListValue() < b._sortListValue() ? desc ? 1 : -1\n                : a._sortListValue() > b._sortListValue() ? desc ? -1 : 1 : 0;\n\n            if (res === 0 && a._sortListThenByValue && b._sortListThenByValue)\n            {\n                res = a._sortListThenByValue() < b._sortListThenByValue() ? desc ? 1 : -1\n                    : a._sortListThenByValue() > b._sortListThenByValue() ? desc ? -1 : 1 : 0;\n            }\n            if (res === 0)\n            {\n                res = a._sortListRnd > b._sortListRnd ? 1\n                    : a._sortListRnd < b._sortListRnd ? -1 : 0;\n            }\n\n            return res;\n        });\n\n        for (let i = 0; i < this.items.length; i++)\n        {\n            const item = this.items[i];\n\n            alt = !alt;\n\n            if (this.tweenTime > 0)\n            {\n                Tween.fromTo(item, this.tweenTime, { x: item.x, y: item.y }, { x: 0, y }, this.tweenEase);\n            }\n            else\n            {\n                item.x = 0;\n                item.y = y;\n            }\n            y += item.height;\n            if (typeof item.altering === 'function')\n            { item.altering(alt); }\n        }\n\n        // force it to update parents when sort animation is done (prevent scrolling container bug)\n        if (this.tweenTime > 0)\n        {\n            setTimeout(() =>\n            {\n                this.updatesettings(false, true);\n            }, this.tweenTime * 1000);\n        }\n    }\n}\n\n","import * as PIXI from 'pixi.js';\nimport { Widget } from './Widget';\n\n/**\n * An UI sprite object\n *\n * @class\n * @extends PIXI.UI.UIBase\n * @memberof PIXI.UI\n * @param Texture {PIXI.Texture} The texture for the sprite\n * @param [Width=Texture.width] {number} Width of tilingsprite\n * @param [Height=Texture.height] {number} Height of tiling sprite\n */\nexport class TilingSprite extends Widget\n{\n    protected sprite: PIXI.extras.TilingSprite;\n\n    constructor(t, width: number, height: number)\n    {\n        const sprite = new PIXI.extras.TilingSprite(t);\n\n        super(width || sprite.width, height || sprite.height);\n\n        this.sprite = sprite;\n        this.contentContainer.addChild(this.sprite);\n    }\n\n    /**\n     * Updates the text\n     *\n     * @private\n     */\n    update(): void\n    {\n        if (this.tint !== null)\n        { this.sprite.tint = this.tint; }\n\n        if (this.blendMode !== null)\n        { this.sprite.blendMode = this.blendMode; }\n\n        this.sprite.width = this._width;\n        this.sprite.height = this._height;\n    }\n\n    get tilePosition(): any\n    {\n        return this.sprite.tilePosition;\n    }\n    set tilingPosition(val: any)\n    {\n        this.sprite.tilePosition = val;\n    }\n\n    get tileScale(): number\n    {\n        return this.sprite.tileScale;\n    }\n    set tileScale(val: number)\n    {\n        this.sprite.tileScale = val;\n    }\n}\n"],"names":["_items","DragDropController","add","item","event","_dragDropEventId","data","identifier","indexOf","push","[object Object]","object","index","i","length","splice","group","id","dragGroup","Insets","this","reset","dirtyId","left","top","right","bottom","MeasureMode","ALIGN","EventManager","target","isEnabled","ClickManager","includeHover","rightMouseButton","doubleClick","super","_includeHover","_rightMouseButton","_doubleClick","insetContainer","on","evMouseDown","onMouseDownImpl","onMouseOverImpl","onMouseOutImpl","bound","removeListener","evMouseUp","onMouseUpImpl","evMouseUpOutside","onMouseUpOutsideImpl","onMouseMoveImpl","obj","_onMouseUp","_onMouseUpOutside","mouse","copyFrom","global","onPress","call","now","performance","time","onClick","originalEvent","preventDefault","offset","set","x","y","onMouseUpCommonImpl","dragThreshold","movementX","Math","abs","movementY","max","ishover","onHover","onMove","PIXI.Point","interactive","startEvent","val","DragManager","e","isBound","dragStart","stage","onDragMoveImpl","onDragEndImpl","lastCursor","dragOffset","isDragging","dragRestrictAxis","cancel","onDragStart","onDragMove","onDragEnd","onDragStartImpl","EventBroker","mgr","Object","keys","MANAGER_MAP","defineProperty","click","dnd","ScrollManager","delta","deltaX","deltaY","axis","detail","onMouseScroll","onMouseScrollImpl","document","addEventListener","removeEventListener","onHoverImpl","contentContainer","Widget","PIXI.utils","EventEmitter","PIXI.Container","addChild","widgetChildren","layoutMeasure","initialized","dragInitialized","dropInitialized","dirty","_oldWidth","_oldHeight","pixelPerfect","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_elevation","tint","blendMode","PIXI.BLEND_MODES","NORMAL","draggable","droppable","_layoutDirty","console","log","setTimeout","measureAndLayout","measuredWidth","_measuredWidth","measuredHeight","_measuredHeight","width","height","widthMode","heightMode","naturalWidth","paddingHorizontal","naturalHeight","paddingVertical","EXACTLY","UNBOUNDED","AT_MOST","min","onMeasure","l","t","r","b","_width","_height","background","onLayout","lopt","layoutOptions","eventBroker","_eventBroker","paddingLeft","paddingTop","paddingRight","paddingBottom","contentWidth","contentHeight","alpha","bg","removeChild","string2hex","PIXI.Graphics","beginFill","drawRect","endFill","addChildAt","_dropShadow","filters","setBackground","DropShadowFilter","distance","widgets","widget","parent","initDraggable","stopEvent","initDroppable","realPosition","dragPosition","added","position","emit","getItem","onDrop","container","getEventItem","dropGroup","droppableReparent","self","toLocal","content","natural","limit","mode","LayoutOptions","WRAP_CONTENT","setWidth","setHeight","cache","parseDimen","isWidthPredefined","MAX_DIMEN","isHeightPredefined","marginLeft","_marginLeft","marginTop","_marginTop","marginRight","_marginRight","marginBottom","_marginBottom","endsWith","parseFloat","replace","isNaN","Error","FastLayoutOptions","options","anchor","DEFAULT_ANCHOR","clone","BorderLayoutOptions","region","REGION_CENTER","horizontalAlign","LEFT","verticalAlign","TOP","FastLayout","host","children","j","DEFAULT","getMeasuredWidth","getMeasuredHeight","layout","maxWidth","maxHeight","loptWidth","loptHeight","widthMeasureMode","getChildMeasureMode","heightMeasureMode","measure","measureWidthReach","measureHeightReach","measureChildFillers","dimen","parentMeasureMode","parentWidthLimit","childWidth","minr","parentHeightLimit","childHeight","minb","FILL_PARENT","WidgetGroup","layoutMgr","onDetach","onAttach","useLayout","useDefaultLayout","InteractiveGroup","hitArea","PIXI.Rectangle","update","FocusableWidget","onDocumentPointerDownImpl","onKeyDownImpl","off","focusCtl","focusController","which","useTab","onTab","useBack","onBack","useForward","onForward","_isMousePressed","blur","_isFocused","tabIndex","tabGroup","focus","isFocused","notifyFocus","bindEvents","notifyBlur","clearEvents","initialize","in","TextWidget","text","textStyle","textDisplay","PIXI.Text","value","EaseBase","p","ExponentialEase","power","easeIn","easeOut","pow","getPosition","prototype","create","constructor","Ease","HALF_PI","PI","fn","Linear","wrapEase","easeInFunction","easeOutFunction","easeInOutFunction","easeInOut","Power0","easeNone","Power1","Quad","Power2","Cubic","Power3","Quart","Power4","Quint","Bounce","BounceIn","BounceOut","BounceInOut","invert","Circ","CircIn","sqrt","CircOut","CircInOut","Expo","ExpoIn","ExpoOut","ExpoInOut","Sine","SineIn","cos","SineOut","sin","SineInOut","Helpers","Lerp","start","stop","amt","number","decimals","round","c","hex","toString","g","componentToHex","rgbToNumber","numberToRgb","floor","m","result","exec","parseInt","Slider","percentValue","_disabled","fill","_minValue","minValue","_maxValue","maxValue","orientation","HORIZONTAL","onValueChange","onValueChanging","track","fromContent","DEFAULT_HORIZONTAL_TRACK","DEFAULT_VERTICAL_TRACK","handle","DEFAULT_HANDLE","_localCursor","buttonMode","trackSize","startValue","triggerValueChange","_lastChange","triggerValueChanging","_lastChanging","updatePositionToMouse","mousePosition","soft","getValueAtPhysicalPosition","layoutHandle","handleDrag","stopPropagation","trackDrag","isPressed","Round","disabled","cursor","localCursor","range","handleWidth","handleHeight","handleX","handleY","VERTICAL","lineStyle","moveTo","lineTo","drawCircle","_tweenItemCache","_callbackItemCache","_tweenObjects","_activeTweenObjects","_currentId","TweenObject","tweens","active","onUpdate","CallbackItem","_ready","key","callback","currentTime","_tweenObjectId","_currentCallbackID","remove","TweenItem","from","to","ease","isColor","surfix","getSurfix","hexToRgb","currentColor","getToValue","widthKeys","heightKeys","getFromValue","getObject","getTweenItem","tween","getCallbackItem","cb","Tween","params","match","paramsFrom","paramsTo","ScrollBar","DEFAULT_TRACK","scrollingContainer","autohide","_hidden","forcePctPosition","setScrollPosition","hidden","REGION_LEFT","REGION_TOP","REGION_RIGHT","REGION_BOTTOM","BorderLayout","leftWidgets","topWidgets","rightWidgets","bottomWidgets","centerWidgets","clearMeasureCache","clearRegions","layoutChildren","measuredTopHeight","measuredLeftWidth","measuredCenterHeight","measuredRightWidth","measuredBottomHeight","measuredCenterWidth","regionX","regionY","regionWidth","regionHeight","CENTER","RIGHT","BOTTOM","indexRegions","childWidthMode","childHeightMode","tw","th","thmin","measureChildren","bw","bh","bhmin","cw","ch","cwmin","chmin","lw","lwmin","rw","rwmin","middleRowWidth","netWidth","netHeight","hmin","downscale","wmin","fitChildren","list","widthFixedLowerBound","heightFixedLowerBound","w","h","wmd","hmd","measuredRegionWidth","measuredRegionHeight","wm","hm","ScrollWidget","direction","pct","bounds","getInnerBounds","innerContainer","scrollX","scrollY","scrollPosition","targetPosition","pos","dif","lastPosition","updateScrollBars","velocity","scrollVelocity","animating","PIXI.Ticker","shared","updateScrollPosition","updateDirection","scrolling","softness","exp","mask","innerBounds","undefined","dragScrolling","radius","expandMask","overflowY","overflowX","scrollBars","horizontalScrollBar","setLayoutOptions","setBackgroundAlpha","verticalScrollBar","boundCached","lastWidth","lastHeight","of","clear","drawRoundedRect","scrollBar","newChildren","getPercentPosition","force","getLocalBounds","initScrolling","drag","_","scrollSpeed","Sprite","texture","spriteDisplay","PIXI.Sprite","imageUrl","PIXI.Texture","PIXI.BaseTexture","Controller","Stage","__width","__height","minWidth","minHeight","resize","_checkBoxGroupCtl","CHECK_BOX_GROUP_CONTROLLER","_focusCtl","FOCUS_CONTROLLER","renderer","render","UIObject","argumentLenght","arguments","rx","ry","scale","updatesettings","checkBoxGroupController","mockDOMInput","checkGroups","Map","checkGroup","get","initGroup","checks","checked","selected","cgroup","tabGroups","sort","a","lastItem","currentItem","Ticker","autoStart","_now","DeltaTime","Time","Ms","_update","requestAnimationFrame","context","once","manager","endValue","erp","observedValue","startTime","endTime","repeat","flip","_repeat","_flip","_next","_target","_observedProperty","autoCreated","s","duration","queue","removeAllListeners","observedProperty","next","pool","pop","nextTweenKey","cxt","tweenMap","delete","destroy","tweenCxt","onTweenComplete","isRunning","parentWidth","parentHeight","child","anchorLeft","calculateAnchor","anchorTop","anchorRight","anchorBottom","MIDDLE","widthLimit","heightLimit","baseWidthMode","baseHeightMode","hasFillers","widthConst","heightConst","widgetWidthLimit","widgetHeightLimit","widgetWidthMode","widgetHeightMode","horizontalReach","calculateReach","verticalReach","resolveMeasuredDimen","limitSubtract","startAnchor","endAnchor","isHover","PIXI.TextStyle","textWidget","CENTER_ANCHOR","setupClick","clickEvent","over","interactiveChildren","checkmark","_checked","_value","notifyCheck","change","selectedValue","getSelected","clickMgr","borderWidth","horizontalSlice","verticalSlice","tile","vs","hs","baseTexture","f","frame","setting","str","sbr","sr","sbl","sb","sf","st","sl","stl","ftl","ftr","fbl","fbr","ft","fb","fl","fr","ff","PIXI.extras","TilingSprite","desc","tweenTime","tweenEase","items","fnValue","fnThenBy","_sortListValue","_sortListThenByValue","_sortListRnd","random","instant","clearTimeout","_sortTimeout","_sort","alt","res","fromTo","altering","ctrlKey","cmdKey","ctrlDown","shiftKey","shiftDown","defaultPrevented","insertTextAtCaret","select","_lastValue","valueEvent","setCaretIndex","deleteSelection","caret","_index","chars","_atEnd","slice","multiLine","vrdd","hasSelection","de","textHeightPX","lineHeight","updateClosestIndex","si","ei","sie","eie","_down","selectRange","selectionStart","selectionEnd","ds","rdd","_forward","startindex","endIndex","_i","selectIndex","clipboardData","window","setData","copyEvent","getData","worldTransform","tx","ty","setAttribute","cacheAsBitmap","inputBlurEvent","onKeyDown","keyUpEvent","pasteEvent","cutEvent","inputEvent","visible","selection","hideCaret","clearSelection","resetScrollPosition","wrapped","lineIndex","textHeight","scrollToPosition","showCaret","wordIndex","startIndex","end","updateSelectionGraphics","updateSelectionColors","c1","cx","cy","cl","drawSelectionRect","selectedBackgroundColor","createElement","body","appendChild","_dirtyText","maxLength","color","style","selectedColor","tempText","_startIndex","_endIndex","caretWidth","padding","textContainer","setPadding","_useNext","_usePrev","sp","_sp","cc","textLengthPX","lineIndexMax","setupDrag","mouseDown","timeSinceLast","selectWord","_lastWidth","updateText","whitespace","newline","lastWordIndex","wrap","charText","point","currentDistX","currentIndex","atEnd","closestLineIndex","char","distX","focusPosition","clearInterval","caretInterval","setInterval","sprite","tilePosition","tilingPosition","tileScale"],"mappings":"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"}